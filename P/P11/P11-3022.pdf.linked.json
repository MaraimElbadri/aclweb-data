{"sections":[{"title":"","paragraphs":["Proceedings of the ACL-HLT 2011 Student Session, pages 122–126, Portland, OR, USA 19-24 June 2011. c⃝2011 Association for Computational Linguistics"]},{"title":"K -means Clustering with Feature Hashing Hajime Senuma Department of Computer Science University of Tokyo 7-3-1 Hongo, Bunkyo-ku, Tokyo 113-0033, Japan hajime.senuma@gmail.com Abstract","paragraphs":["One of the major problems of K-means is that one must use dense vectors for its centroids, and therefore it is infeasible to store such huge vectors in memory when the feature space is high-dimensional. We address this is-sue by using feature hashing (Weinberger et al., 2009), a dimension-reduction technique, which can reduce the size of dense vectors while retaining sparsity of sparse vectors. Our analysis gives theoretical motivation and justification for applying feature hashing to K-means, by showing how much will the objective of K-means be (additively) distorted. Furthermore, to empirically verify our method, we experimented on a document clustering task."]},{"title":"1 Introduction","paragraphs":["In natural language processing (NLP) and text mining, clustering methods are crucial for various tasks such as document clustering. Among them, K-means (MacQueen, 1967; Lloyd, 1982) is “the most important flat clustering algorithm” (Manning et al., 2008) both for its simplicity and performance.","One of the major problems of K-means is that it has K centroids which are dense vectors where K is the number of clusters. Thus, it is infeasible to store them in memory and slow to compute if the dimension of inputs is huge, as is often the case with NLP and text mining tasks. A well-known heuristic is truncating after the most significant features (Manning et al., 2008), but it is difficult to analyze its effect and to determine which features are significant.","Recently, Weinberger et al. (2009) introduced feature hashing, a simple yet effective and analyzable dimension-reduction technique for large-scale multitask learning. The idea is to combine features which have the same hash value. For example, given a hash function h and a vector x, if h(1012) = h(41234) = 42, we make a new vector y by setting y42 = x1012 + x41234 (or equally possibly x1012−x41234, −x1012+x41234, or −x1012−x41234).","This trick greatly reduces the size of dense vectors, since the maximum index value becomes equivalent to the maximum hash value of h. Furthermore, unlike random projection (Achlioptas, 2003; Boutsidis et al., 2010), feature hashing retains sparsity of sparse input vectors. An additional useful trait for NLP tasks is that it can save much memory by eliminating an alphabet storage (see the preliminaries for detail). The authors also justified their method by showing that with feature hashing, dot-product is unbiased, and the length of each vector is well-preserved with high probability under some conditions.","Plausibly this technique is useful also for clustering methods such as K-means. In this paper, to motivate applying feature hashing to K-means, we show the residual sum of squares, the objective of K-means, is well-preserved under feature hashing. We also demonstrate an experiment on document clustering and see the feature size can be shrunk into 3.5% of the original in this case. 122"]},{"title":"2 Preliminaries 2.1 Notation","paragraphs":["In this paper, || · || denotes the Euclidean norm, and ⟨·, ·⟩ does the dot product. δi,j is the Kronecker’s delta, that is, δi,j = 1 if i = j and 0 otherwise. 2.2 K-means Although we do not describe the famous algorithm of K-means (MacQueen, 1967; Lloyd, 1982) here, we remind the reader of its overall objective for later analysis. If we want to group input vectors into K clusters, K-means can surely output clusters ω1, ...ωK and their corresponding vectors μ1, ..., μK such that they locally minimize the residual sum of squares (RSS) which is defined as K ∑ k=1 ∑ x∈ωk","||x − μk||2 .","In the algorithm, μk is made into the mean of the vectors in a cluster ωk. Hence comes the name K-means.","Note that RSS can be regarded as a metric since the sum of each metric (in this case, squared Euclidean distance) becomes also a metric by constructing a 1-norm product metric. 2.3 Additive distortion Suppose one wants to embed a metric space (X, d) into another one (X′",", d′",") by a mapping φ. Its additive distortion is the infimum of ε which, for any observed x, y ∈ X, satisfies the following condition:","d(x, y) − ε ≤ d′ (φ(x), φ(y)) ≤ d(x, y) + ε. 2.4 Hashing tricks According to an account by John Langford 1",", a co-author of papers on feature hashing (Shi et al., 2009; Weinberger et al., 2009), hashing tricks for dimension-reduction were implemented in various machine learning libraries including Vowpal Wabbit, which he realesed in 2007.","Ganchev and Dredze (2008) named their hashing trick random feature mixing and empirically supported it by experimenting on NLP tasks. It is similar to feature hashing except lacking of a binary hash","1","http://hunch.net/j̃l/projects/hash_ reps/index.html function. The paper also showed that hashing tricks are useful to eliminate alphabet storage.","Shi et al. (2009) suggested hash kernel, that is, dot product on a hashed space. They conducted thorough research both theoretically and experimentally, extending this technique to classification of graphs and multi-class classification. Although they tested K-means in an experiment, it was used for classification but not for clustering.","Weinberger et al. (2009) 2","introduced a technique feature hashing (a function itself is called the hashed feature map), which incorporates a binary hash function into hashing tricks in order to guarantee the hash kernel is unbiased. They also showed applications to various real-world applications such as multitask learning and collaborative filtering. Though their proof for exponential tail bounds in the original paper was refuted later, they reproved it under some extra conditions in the latest version. Below is the definition. Definition 2.1. Let S be a set of hashable features, h be a hash function h : S → {1, ..., m}, and ξ be ξ : S → {±1}. The hashed feature map φ(h,ξ)",": R|S|","→ Rm","is a function such that the i-th element of φ(h,ξ)","(x) is given by φ (h,ξ) i (x) = ∑ j:h(j)=i ξ(j)xj. If h and ξ are clear from the context, we simply","write φ(h,ξ)","as φ. As well, a kernel function is defined on a hashed","feature map. Definition 2.2. The hash kernel ⟨·, ·⟩φ is defined as","⟨x, x′ ⟩φ = ⟨φ(x), φ(x′",")⟩.","They also proved the following theorem, which we use in our analysis. Theorem 2.3. The hash kernel is unbiased, that is,","Eφ[⟨x, x′ ⟩φ] = ⟨x, x′","⟩. The variance is","V arφ[⟨x, x′ ⟩φ] = 1 m  ∑ i̸=j x2 i x ′ 2 j + xix′","ixjx′","j   . 2","The latest version of this paper is at arXiv http:// arxiv.org/abs/0902.2206, with correction to Theorem 3 in the original paper included in the Proceeding of ICML ’09. 123 2.4.1 Eliminating alphabet storage","In this kind of hashing tricks, an index of inputs do not have to be an integer but can be any hashable value, including a string. Ganchev and Dredze (2008) argued this property is useful particularly for implementing NLP applications, since we do not anymore need an alphabet, a dictionary which maps features to parameters.","Let us explain in detail. In NLP, features can be often expediently expressed with strings. For in-stance, a feature ‘the current word ends with -ing’ can be expressed as a string cur:end:ing (here we suppose : is a control character). Since indices of dense vectors (which may be implemented with arrays) must be integers, traditionally we need a dictionary to map these strings to integers, which may waste much memory. Feature hashing removes this memory waste by converting strings to integers with on-the-fly computation."]},{"title":"3 Method","paragraphs":["For dimension-reduction to K-means, we propose a new method hashed K-means. Suppose you have N input vectors x1, ..., xN . Given a hashed feature map φ, hashed K-means runs K-means on φ(x1), ..., φ(xN ) instead of the original ones."]},{"title":"4 Analysis","paragraphs":["In this section, we show clusters obtained by the hashed K-means are also good clusters in the original space with high probability. While Weinberger et al. (2009) proved a theorem on (multiplicative) distortion for Euclidean distance under some tight conditions, we illustrate (additive) distortion for RSS. Since K-means is a process which monotonically decreases RSS in each step, if RSS is not distorted so much by feature hashing, we can expect results to be reliable to some extent.","Let us define the difference of the residual sum of squares (DRSS). Definition 4.1. Let ω1, ...ωK be clusters, μ1, ..., μK be their corresponding centroids in the original space, φ be a hashed feature map, and μφ","1 , ..., μφ","K be their corresponding centroids in the hashed space. Then, DRSS is defined as follows: DRSS = | K ∑ k=1 ∑ x∈ωk ||φ(x) − μ φ k ||2 − K ∑ k=1 ∑ x∈ωk","||x − μk||2 |.","Before analysis, we define a notation for the (Euclidean) length under a hashed space: Definition 4.2. The hash length || · ||φ is defined as ||x||φ = ||φ(x)|| =","√ ⟨φ(x), φ(x)⟩ =","√ ⟨x, x⟩φ.","Note that it is clear from Theorem 2.3 that","Eφ[||x||2 φ] = ||x||2",", and equivalently Eφ[||x||2","φ − ||x||2","] = 0.","In order to show distortion, we want to use Chebyshev’s inequality. To this end, it is vital to know the expectation and variance of the sum of squared hash lengths. Because the variance of the sum of random variables derives from each covariance between pairs of variables, first we show the covariance between the squared hash length of two vectors. Lemma 4.3. The covariance between the squared hash length of two vectors x, y ∈ Rn","is","Covφ(||x||2 φ, ||y||2","φ) =","ψ(x, y) m , where ψ(x, y) = 2 ∑ i̸=j xixjyiyj. This lemma can be proven by the same technique described in the Appendix A of Weinberger et al. (2009). Now we see the following lemma. Lemma 4.4. Suppose we have N vectors x1, ..., xN . Let us define X =","∑ i ||xi||2","φ −","∑","i ||xi||2","= ∑","i ( ||xi||2","φ − ||xi||2 ) . Then, for any ε > 0, P  |X| ≥ ε √ m √ √ √ √ N","∑ i=1 N ∑ j=1 ψ(xi, xj)   ≤ 1 ε2 . 124 Proof. This is an application of Chebyshev’s in-equality. Namely, for any ε > 0, P","( |X − Eφ[X]| ≥ ε√","V arφ[X]) ≤ 1 ε2 .","Since the expectation of a sum is the sum of expectations we readily know the zero expectation: Eφ[X] = 0.","Since adding constants to the inputs of covariance does not change its result, from Lemma 4.3, for any x, y ∈ Rn",",","Covφ(||x||2","φ − ||x||2",", ||y||2","φ − ||y||2",") = ψ(x, y)","m .","Because the variance of the sum of random variables is the sum of the covariances between every pair of them, V arφ[X] = 1 m N ∑ i=1 N ∑ j=1 ψ(xi, xj).","Finally, we see the following theorem for additive distortion. Theorem 4.5. Let Ψ be the sum of ψ(x, y) for any observed pair of x, y, each of which expresses the difference between an example and its corresponding centroid. Then, for any ε, P (|DRSS| ≥ ε) ≤ Ψ ε2 m . Thus, if m ≥ γ−1","Ψε−2","where 0 < γ <= 1, with probability at least 1 − γ, RSS is additively distorted by ε. Proof. Note that a hashed feature map φ(h,ξ)","is linear, since φ(x) = M x with a matrix M such that Mi,j = ξ(i)δh(i),j. By this liearlity, μ φ k = |ωk|−1 ∑","x∈ωk φ(x) = φ(|ωk|−1 ∑","x∈ωk x) = φ(μk). Reapplying linearlity to this result, we have ||φ(x)−μ","φ","k ||2","= ||x−μk||2","φ. Lemma 4.4 completes the proof.","The existence of Ψ in the theorem suggests that to use feature hashing, we should remove useless features which have high values from data in advance. For example, if frequencies of words are used as 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 10 100 1000 10000 100000 1e+06 F5 measure hash size m hashed k-means Figure 1: The change of F5-measure along with the hash size features, function words should be ignored not only because they give no information for clustering but also because their high frequencies magnify distortion."]},{"title":"5 Experiments","paragraphs":["To empirically verify our method, from 20 Newsgroups, a dataset for document classification or clustering 3",", we chose 6 classes and randomly drew 100 documents for each class.","We used unigrams and bigrams as features and ran our method for various hash sizes m (Figure 1). The number of unigrams is 33,017 and bigrams 109,395, so the feature size in the original space is 142,412.","To measure performance, we used the F5 measure (Manning et al., 2008). The scheme counts correctness pairwisely. For example, if a document pair in an output cluster is actually in the same class, it is counted as true positive. In contrast, if it is actually in the different class, it is counted as false positive. Following this manner, a contingency table can be made as follows:","Same cluster Diff. clusters","Same class TP FN Diff. classes FP TN","Now, Fβ measure can be defined as Fβ =","(β2 + 1)P R β2 P + R where the precision P = T P/(T P + F P ) and the recall R = T P/(T P + F N ). 3","http://people.csail.mit.edu/jrennie/20Newsgroups/ 125","In short, F5 measure strongly favors precision to recall. Manning et al. (2008) stated that in some cases separating similar documents is more unfavor-able than putting dissimilar documents together, and in such cases the Fβ measure (where β > 1) is a good evaluation criterion.","At the first look, it seems odd that performance can be higher than the original where m is low. A possible hypothesis is that since K-means only locally minimizes RSS but in general there are many local minima which are far from the global optimal point, therefore distortion can be sometimes useful to escape from a bad local minimum and reach a better one. As a rule, however, large distortion kills clustering performance as shown in the figure.","Although clustering is heavily case-dependent, in this experiment, the resulting clusters are still reliable where the hash size is 3.5% of the original feature space size (around 5,000)."]},{"title":"6 Future Work","paragraphs":["Arthur and Vassilvitskii (2007) proposed K-means++, an improved version of K-means which guarantees its RSS is upper-bounded. Combining their method and the feature hashing as shown in our paper will produce a new efficient method (possibly it can be named hashed K-means++). We will analyze and experiment with this method in the future."]},{"title":"7 Conclusion","paragraphs":["In this paper, we argued that applying feature hashing to K-means is beneficial for memory-efficiency. Our analysis theoretically motivated this combination. We supported our argument and analysis by an experiment on document clustering, showing we could safely shrink memory-usage into 3.5% of the original in our case. In the future, we will analyze the technique on other learning methods such as K-means++ and experiment on various real-data NLP tasks."]},{"title":"Acknowledgements","paragraphs":["We are indebted to our supervisors, Jun’ichi Tsujii and Takuya Matsuzaki. We are also grateful to the anonymous reviewers for their helpful and thoughtful comments."]},{"title":"References","paragraphs":["Dimitris Achlioptas. 2003. Database-friendly random projections: Johnson-Lindenstrauss with binary coins. Journal of Computer and System Sciences, 66(4):671– 687, June.","David Arthur and Sergei Vassilvitskii. 2007. k-means++ : The Advantages of Careful Seeding. In Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 1027–1035.","Christos Boutsidis, Anastasios Zouzias, and Petros Drineas. 2010. Random Projections for k-means Clustering. In Advances in Neural Information Processing Systems 23, number iii, pages 298–306.","Kuzman Ganchev and Mark Dredze. 2008. Small Statistical Models by Random Feature Mixing. In Proceedings of the ACL08 HLT Workshop on Mobile Language Processing, pages 19–20.","Stuart P. Lloyd. 1982. Least Squares Quantization in PCM. IEEE Transactions on Information Theory, 28(2):129–137.","J MacQueen. 1967. Some Methods for Classification and Analysis of Multivariate Observations. In Proceedings of 5th Berkeley Symposium on Mathematical Statistics and Probability, pages 281–297.","Christopher D. Manning, Prabhakar Raghavan, and Hinrich Schütze. 2008. Introduction to Information Retrieval. Cambridge University Press.","Qinfeng Shi, James Petterson, Gideon Dror, John Langford, Alex Smola, and S.V.N. Vishwanathan. 2009. Hash Kernels for Structured Data. Journal of Machine Learning Research, 10:2615–2637.","Kilian Weinberger, Anirban Dasgupta, John Langford, Alex Smola, and Josh Attenberg. 2009. Feature Hashing for Large Scale Multitask Learning. In Proceedings of the 26th International Conference on Machine Learning. 126"]}],"references":[{"authors":[{"first":"Dimitris","last":"Achlioptas"}],"year":"2003","title":"Database-friendly random projections: Johnson-Lindenstrauss with binary coins","source":"Dimitris Achlioptas. 2003. Database-friendly random projections: Johnson-Lindenstrauss with binary coins. Journal of Computer and System Sciences, 66(4):671– 687, June."},{"authors":[{"first":"David","last":"Arthur"},{"first":"Sergei","last":"Vassilvitskii"}],"year":"2007","title":"k-means++ : The Advantages of Careful Seeding","source":"David Arthur and Sergei Vassilvitskii. 2007. k-means++ : The Advantages of Careful Seeding. In Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 1027–1035."},{"authors":[{"first":"Christos","last":"Boutsidis"},{"first":"Anastasios","last":"Zouzias"},{"first":"Petros","last":"Drineas"}],"year":"2010","title":"Random Projections for k-means Clustering","source":"Christos Boutsidis, Anastasios Zouzias, and Petros Drineas. 2010. Random Projections for k-means Clustering. In Advances in Neural Information Processing Systems 23, number iii, pages 298–306."},{"authors":[{"first":"Kuzman","last":"Ganchev"},{"first":"Mark","last":"Dredze"}],"year":"2008","title":"Small Statistical Models by Random Feature Mixing","source":"Kuzman Ganchev and Mark Dredze. 2008. Small Statistical Models by Random Feature Mixing. In Proceedings of the ACL08 HLT Workshop on Mobile Language Processing, pages 19–20."},{"authors":[{"first":"Stuart","middle":"P.","last":"Lloyd"}],"year":"1982","title":"Least Squares Quantization in PCM","source":"Stuart P. Lloyd. 1982. Least Squares Quantization in PCM. IEEE Transactions on Information Theory, 28(2):129–137."},{"authors":[{"first":"J","last":"MacQueen"}],"year":"1967","title":"Some Methods for Classification and Analysis of Multivariate Observations","source":"J MacQueen. 1967. Some Methods for Classification and Analysis of Multivariate Observations. In Proceedings of 5th Berkeley Symposium on Mathematical Statistics and Probability, pages 281–297."},{"authors":[{"first":"Christopher","middle":"D.","last":"Manning"},{"first":"Prabhakar","last":"Raghavan"},{"first":"Hinrich","last":"Schütze"}],"year":"2008","title":"Introduction to Information Retrieval","source":"Christopher D. Manning, Prabhakar Raghavan, and Hinrich Schütze. 2008. Introduction to Information Retrieval. Cambridge University Press."},{"authors":[{"first":"Qinfeng","last":"Shi"},{"first":"James","last":"Petterson"},{"first":"Gideon","last":"Dror"},{"first":"John","last":"Langford"},{"first":"Alex","last":"Smola"},{"first":"S.","middle":"V. N.","last":"Vishwanathan"}],"year":"2009","title":"Hash Kernels for Structured Data","source":"Qinfeng Shi, James Petterson, Gideon Dror, John Langford, Alex Smola, and S.V.N. Vishwanathan. 2009. Hash Kernels for Structured Data. Journal of Machine Learning Research, 10:2615–2637."},{"authors":[{"first":"Kilian","last":"Weinberger"},{"first":"Anirban","last":"Dasgupta"},{"first":"John","last":"Langford"},{"first":"Alex","last":"Smola"},{"first":"Josh","last":"Attenberg"}],"year":"2009","title":"Feature Hashing for Large Scale Multitask Learning","source":"Kilian Weinberger, Anirban Dasgupta, John Langford, Alex Smola, and Josh Attenberg. 2009. Feature Hashing for Large Scale Multitask Learning. In Proceedings of the 26th International Conference on Machine Learning. 126"}],"cites":[{"style":0,"text":"Weinberger et al., 2009","origin":{"pointer":"/sections/1/paragraphs/0","offset":252,"length":23},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"MacQueen, 1967","origin":{"pointer":"/sections/2/paragraphs/0","offset":153,"length":14},"authors":[{"last":"MacQueen"}],"year":"1967","references":["/references/5"]},{"style":0,"text":"Lloyd, 1982","origin":{"pointer":"/sections/2/paragraphs/0","offset":169,"length":11},"authors":[{"last":"Lloyd"}],"year":"1982","references":["/references/4"]},{"style":0,"text":"Manning et al., 2008","origin":{"pointer":"/sections/2/paragraphs/0","offset":233,"length":20},"authors":[{"last":"Manning"},{"last":"al."}],"year":"2008","references":["/references/6"]},{"style":0,"text":"Manning et al., 2008","origin":{"pointer":"/sections/2/paragraphs/1","offset":353,"length":20},"authors":[{"last":"Manning"},{"last":"al."}],"year":"2008","references":["/references/6"]},{"style":0,"text":"Weinberger et al. (2009)","origin":{"pointer":"/sections/2/paragraphs/2","offset":10,"length":24},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"Achlioptas, 2003","origin":{"pointer":"/sections/2/paragraphs/3","offset":174,"length":16},"authors":[{"last":"Achlioptas"}],"year":"2003","references":["/references/0"]},{"style":0,"text":"Boutsidis et al., 2010","origin":{"pointer":"/sections/2/paragraphs/3","offset":192,"length":22},"authors":[{"last":"Boutsidis"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"MacQueen, 1967","origin":{"pointer":"/sections/3/paragraphs/0","offset":232,"length":14},"authors":[{"last":"MacQueen"}],"year":"1967","references":["/references/5"]},{"style":0,"text":"Lloyd, 1982","origin":{"pointer":"/sections/3/paragraphs/0","offset":248,"length":11},"authors":[{"last":"Lloyd"}],"year":"1982","references":["/references/4"]},{"style":0,"text":"Shi et al., 2009","origin":{"pointer":"/sections/3/paragraphs/7","offset":44,"length":16},"authors":[{"last":"Shi"},{"last":"al."}],"year":"2009","references":["/references/7"]},{"style":0,"text":"Weinberger et al., 2009","origin":{"pointer":"/sections/3/paragraphs/7","offset":62,"length":23},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"Ganchev and Dredze (2008)","origin":{"pointer":"/sections/3/paragraphs/8","offset":0,"length":25},"authors":[{"last":"Ganchev"},{"last":"Dredze"}],"year":"2008","references":["/references/3"]},{"style":0,"text":"Shi et al. (2009)","origin":{"pointer":"/sections/3/paragraphs/11","offset":0,"length":17},"authors":[{"last":"Shi"},{"last":"al."}],"year":"2009","references":["/references/7"]},{"style":0,"text":"Weinberger et al. (2009)","origin":{"pointer":"/sections/3/paragraphs/12","offset":0,"length":24},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"Ganchev and Dredze (2008)","origin":{"pointer":"/sections/3/paragraphs/30","offset":131,"length":25},"authors":[{"last":"Ganchev"},{"last":"Dredze"}],"year":"2008","references":["/references/3"]},{"style":0,"text":"Weinberger et al. (2009)","origin":{"pointer":"/sections/5/paragraphs/0","offset":139,"length":24},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"Weinberger et al. (2009)","origin":{"pointer":"/sections/5/paragraphs/17","offset":125,"length":24},"authors":[{"last":"Weinberger"},{"last":"al."}],"year":"2009","references":["/references/8"]},{"style":0,"text":"Manning et al., 2008","origin":{"pointer":"/sections/6/paragraphs/3","offset":48,"length":20},"authors":[{"last":"Manning"},{"last":"al."}],"year":"2008","references":["/references/6"]},{"style":0,"text":"Manning et al. (2008)","origin":{"pointer":"/sections/6/paragraphs/9","offset":58,"length":21},"authors":[{"last":"Manning"},{"last":"al."}],"year":"2008","references":["/references/6"]},{"style":0,"text":"Arthur and Vassilvitskii (2007)","origin":{"pointer":"/sections/7/paragraphs/0","offset":0,"length":31},"authors":[{"last":"Arthur"},{"last":"Vassilvitskii"}],"year":"2007","references":["/references/1"]}]}
