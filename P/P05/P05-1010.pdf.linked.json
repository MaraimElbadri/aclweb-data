{"sections":[{"title":"","paragraphs":["Proceedings of the 43rd Annual Meeting of the ACL, pages 75–82, Ann Arbor, June 2005. c⃝2005 Association for Computational Linguistics"]},{"title":"Probabilistic CFG with latent annotations Takuya Matsuzaki  Yusuke Miyao  Jun’ichi Tsujii   Graduate School of Information Science and Technology, University of Tokyo Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033  CREST, JST(Japan Science and Technology Agency) Honcho 4-1-8, Kawaguchi-shi, Saitama 332-0012 matuzaki, yusuke, tsujii @is.s.u-tokyo.ac.jp Abstract","paragraphs":["This paper definesa generative probabilistic model of parse trees, which we call PCFG-LA. This model is an extension of PCFG in which non-terminal symbols are augmented with latent variables. Finegrained CFG rules are automatically induced from a parsed corpus by training a PCFG-LA model using an EM-algorithm. Because exact parsing with a PCFG-LA is NP-hard, several approximations are described and empirically compared. In experiments using the Penn WSJ corpus, our automatically trained model gave a performance of 86.6% (F",", sentences","40 words), which is comparable to that of an unlexicalized PCFG parser created using extensive manual feature selection."]},{"title":"1 Introduction","paragraphs":["Variants of PCFGs form the basis of several broad-coverage and high-precision parsers (Collins, 1999; Charniak, 1999; Klein and Manning, 2003). In those parsers, the strong conditional independence as-sumption made in vanilla treebank PCFGs is weakened by annotating non-terminal symbols with many ‘features’ (Goodman, 1997; Johnson, 1998). Examples of such features are head words of constituents, labels of ancestor and sibling nodes, and subcategorization frames of lexical heads. Effective features and their good combinations are normally explored using trial-and-error.","This paper defines a generative model of parse trees that we call PCFG with latent annotations (PCFG-LA). This model is an extension of PCFG models in which non-terminal symbols are annotated with latent variables. The latent variables work just like the features attached to non-terminal symbols. A fine-grained PCFG is automatically induced from parsed corpora by training a PCFG-LA model using an EM-algorithm, which replaces the manual feature selection used in previous research.","The main focus of this paper is to examine the effectiveness of the automatically trained models in parsing. Because exact inference with a PCFG-LA, i.e., selection of the most probable parse, is NP-hard, we are forced to use some approximation of it. We empirically compared three different approximation methods. One of the three methods gives a performance of 86.6% (F",", sentences","40 words) on the standard test set of the Penn WSJ corpus.","Utsuro et al. (1996) proposed a method that automatically selects a proper level of generalization of non-terminal symbols of a PCFG, but they did not report the results of parsing with the obtained PCFG. Henderson’s parsing model (Henderson, 2003) has a similar motivation as ours in that a derivation history of a parse tree is compactly represented by induced hidden variables (hidden layer activation of a neural network), although the details of his approach is quite different from ours."]},{"title":"2 Probabilistic model","paragraphs":["PCFG-LA is a generative probabilistic model of parse trees. In this model, an observed parse tree is considered as an incomplete data, and the corre-75","  :  :   "," ","  the","  cat"," ","  grinned    the  cat   grinned","Figure 1: Tree with latent annotations","","(com-","plete data) and observed tree (incomplete data).","sponding complete data is a tree with latent annota-","tions. Each non-terminal node in the complete data","is labeled with a complete symbol of the form","",",","where","is the non-terminal symbol of the corre-","sponding node in the observed tree and","is a latent","annotation symbol, which is an element of a fixed","set",". A complete/incomplete tree pair of the sentence,","“ the cat grinned,” is shown in Figure 2. The com-","plete parse tree,","","(left), is generated through","a process just like the one in ordinary PCFGs, but","the non-terminal symbols in the CFG rules are anno-","tated with latent symbols,","","","",". Thus,","the probability of the complete tree (","",") is "," ","",""," ","","        ","","  ",""," ","","","",""," ","","","","  ","","",""," ","","","","","where","","   denotes the probability of an occur-","rence of the symbol","","","","at a root node and","","","denotes the probability of a CFG rule",". The proba-","bility of the observed tree ","  is obtained by sum-ming "," ","","for all the assignments to latent an-","notation symbols,",":","","            ","  ","(1)","Using dynamic programming, the theoretical bound of the time complexity of the summation in Eq. 1 is reduced to be proportional to the number of non-terminal nodes in a parse tree. However, the calculation at node","still has a cost that exponentially grows with the number of","’s daughters because we must sum up the probabilities of"," ","combinations of latent annotation symbols for a node with ","daughters. We thus took a kind of transformation/detransformation approach, in which a tree is binarized before parameter estimation and restored to its original form after parsing. The details of the binarization are explained in Section 4.","Using syntactically annotated corpora as training data, we can estimate the parameters of a PCFG-LA model using an EM algorithm. The algorithm is a special variant of the inside-outside algorithm of Pereira and Schabes (1992). Several recent work also use similar estimation algorithm as ours, i.e, inside-outside re-estimation on parse trees (Chiang and Bikel, 2002; Shen, 2004).","The rest of this section precisely defines PCFG-LA models and briefly explains the estimation algorithm. The derivation of the estimation algorithm is largely omitted; see Pereira and Schabes (1992) for details. 2.1 Model definition","We define a PCFG-LA","as a tuple","","","","","  ","","","",", where"," ","a set of observable non-terminal symbols","  a set of terminal symbols","  a set of latent annotation symbols","  a set of observable CFG rules","","  ","the probability of the occurrence","of a complete symbol ","at a root node","","","  the probability of a rule","","","","","We use","","for non-terminal symbols in","",";  ","","for terminal symbols in",";","and","","for latent annotation symbols in",".",""," denotes the set of complete non-terminal","symbols, i.e.,","","","","",".","Note that latent annotation symbols are not attached","to terminal symbols.","In the above definition,","is a set of CFG rules","of observable (i.e., not annotated) symbols. For","simplicity of discussion, we assume that","is a","CNF grammar, but extending to the general case","is straightforward.","","","is the set of CFG rules","of complete symbols, such as","","grinned or","","       ",". More precisely,","","","","  ","","","","","","","","","","","","","","","","","","","","",""," 76","We assume that non-terminal nodes in a parse tree","","are indexed by integers","",", starting","from the root node. A complete tree is denoted by","","",", where","","","",""," ","is a vec-","tor of latent annotation symbols and","is the latent","annotation symbol attached to the","-th non-terminal","node.","We do not assume any structured parametrizations","in","and ; that is, each","","","","","","","","and","","",""," ","","","","","is itself a parameter to be","tuned. Therefore, an annotation symbol, say,",", gen-","erally does not express any commonalities among","the complete non-terminals annotated by",", such as","","","","","  ",".","The probability of a complete parse tree","","is","definedas ","","","","   ","","","","  ","","  ","(2)","where","    ","is the label of the root node of","","and"," denotes the multiset of annotated CFG","rules used in the generation of","",". We have the","probability of an observable tree","by marginalizing","out the latent annotation symbols in","",": ","  ","  ","  ","  ","","  ","(3)","where is the number of non-terminal nodes in",". 2.2 Forward-backward probability","The sum in Eq. 3 can be calculated using a dynamic","programming algorithm analogous to the forward al-","gorithm for HMMs. For a sentence","","","","","and its parse tree , backward probabilities   ","","are recursively computed for the","-th non-terminal","node and for each",". In the definition below,","  ","denotes the non-terminal label of the","-th","node."," If node","is a pre-terminal node above a terminal symbol",", then ","","","","  ","","","","",".","","Otherwise, let","and","be the two daughter","nodes of",". Then  ","","  ",""," ","","","   ","","","","  ","  ","   "," Using backward probabilities, ","  is calculated as ","","","","","","","   ","","","","","","","",".","We defineforward probabilities   ","",", which are","used in the estimation described below, as follows:"," If node","is the root node (i.e.,","= 1), then  ","","","","   ","",".","","If node has a right sibling",", let","be the","mother node of",". Then  ","","  ",""," ","","","","   ","","","  ","  ","   ","","","If node","has a left sibling,  ","","is defined analogously. 2.3 Estimation","We now derive the EM algorithm for PCFG-LA,","which estimates the parameters","","","",". Let","","","","","","be the training set of parse trees and    ","   be the labels of non-terminal nodes in","",". Like the derivations of the EM algorithms for","other latent variable models, the update formulas for","the parameters, which update the parameters from","to","   ","",", are obtained by constrained opti-","mization of","","","","",", which is definedas","    ","","    ","  ",""," ","   "," ","   ","",""," where  and"," ","denote probabilities under and   , and "," ","","is the conditional probability of la-","tent annotation symbols given an observed tree",",","i.e., ","  "," "," "," ","","",". Using the La-","grange multiplier method and re-arranging the re-","sults using the backward and forward probabilities,","we obtain the update formulas in Figure 2."]},{"title":"3 Parsing with PCFG-LA","paragraphs":["In theory, we can use PCFG-LAs to parse a given sentence","by selecting the most probable parse:"," ","   ","",""," ",""," "," "," ","(4)","where","","denotes the set of possible parses for"," under the observable grammar",". While the opti-","mization problem in Eq. 4 can be efficiently solved 77  ","","","","            ","","   ","","Covered    ","    ","  ","","","","","","","","","   ","                       ","Covered","   ","    ","        ","   ","","     ","Root                 ","   ","","             ","Labeled    ","    ","     Covered         ","","","","","","","   ","","","","","","","","       ","    ","     Covered        ","","","","","","","","","  ","","","","","","  Labeled     ","  ","","     Root    ","   ",""," the root of   is labeled with   Figure 2: Parameter update formulas. for PCFGs using dynamic programming algorithms, the sum-of-products form of  ","","in PCFG-LA","models (see Eq. 2 and Eq. 3) makes it difficult to","apply such techniques to solve Eq. 4.","Actually, the optimization problem in Eq. 4 is NPhard for general PCFG-LA models. Although we omit the details, we can prove the NP-hardness by observing that a stochastic tree substitution grammar (STSG) can be represented by a PCFG-LA model in a similar way to one described by Goodman (1996a), and then using the NP-hardness of STSG parsing (Simaán, 2002).","The difficulty of the exact optimization in Eq. 4 forces us to use some approximations of it. The rest of this section describes three different approximations, which are empirically compared in the next section. The first method simply limits the number of candidate parse trees compared in Eq. 4; we first create N-best parses using a PCFG and then, within the N-best parses, select the one with the highest probability in terms of the PCFG-LA. The other two methods are a little more complicated, and we explain them in separate subsections. 3.1 Approximation by Viterbi complete trees","The second approximation method selects the best","complete tree   ","","",", that is,","","","","",""," ","","","","","","","","",""," ","  ","(5)","We call  ","a Viterbi complete tree. Such a tree","can be obtained in",""," ","","time by regarding the","PCFG-LA as a PCFG with annotated symbols.1","The observable part of the Viterbi complete","tree ","(i.e.,","",") does not necessarily coin-","cide with the best observable tree","in Eq. 4.","However, if","has some ‘dominant’ assign-","ment to its latent annotation symbols such","that ","  ",""," ","  , then ","    "," ","because ","  ",""," ","  ","and ","","    ",""," ","   , and thus","","and","are al-","most equally ‘good’ in terms of their marginal prob-","abilities. 3.2 Viterbi parse in approximate distribution In the third method, we approximate the true distribution ","","","","by a cruder distribution","","",",","and then find the tree with the highest","","","in","polynomial time. We first create a packed repre-","sentation of","","for a given sentence",".2","Then,","the approximate distribution","","","is created us-","ing the packed forest, and the parameters in","","","are adjusted so that","  approximates "," ","","as closely as possible. The form of ","","is that","of a product of the parameters, just like the form of","a PCFG model, and it enables us to use a Viterbi al-","gorithm to select the tree with the highest","","",".","A packed forest is defined as a tuple     ",". The firstcomponent, ",", is a multiset of chart items of the","form","","","","","",". A chart item","","","","",""," ","indicates","that there exists a parse tree in","","that contains a","constituent with the non-terminal label","that spans","1","For efficiency, we did not actually parse sentences with    ","but selected a Viterbi complete tree from a packed rep-","resentation of candidate parses in the experiments in Section 4. 2 In practice, fully constructing a packed representation of    ","has an unrealistically high cost for most input sentences. Alternatively, we can use a packed representation of a subset of    ",", which can be obtained by parsing with beam thresholding, for instance. An approximate distribution     ","on such subsets can be derived in almost the same way as one for the full     , but the conditional distribution,     ","",", is renormalized so that the total mass for the subset sums to 1. 78                      ","","","","","","","","    ","","","","","","","","   ","    ","","","    ","","","","",",","","","    ","","    ","  ","   ","","   ","   ","","","        ","   ","    ","","","","","   ","        ","","   ","","","","","    ","","","","","","     Figure 3: Two parse trees and packed representation of them.","from the -th to","-th word in",". The second compo-","nent, , is a function on ","that represents dominance relations among the chart items in ",";","","","is a set of","possible daughters of if","is not a pre-terminal node,","and","","","","if is a pre-terminal node above","",". Two parse trees for a sentence","","","","","and a packed representation of them are shown in","Figure 3.","We require that each tree","","has a unique","representation as a set of connected chart items in",". A packed representation satisfying the uniqueness","condition is created using the CKY algorithm with","the observable grammar",", for instance.","The approximate distribution,","","",", is defined","as a PCFG, whose CFG rules","","is defined as","","","","","","","","","","  ","","",". We use","","","to denote the rule probability of rule","","","","and","","","","","to denote the probability with which  is","generated as a root node. We define  ","as","","   ","","","    ","","","   ","","where the set of connected items","",""," ","is the unique representation of",".","To measure the closeness of approximation by"," ","",", we use the ‘inclusive’ KL-divergence,   ","  ","(Frey et al., 2000):   ","","  ","   "," "," "," ",""," ","  Minimizing   ","  ","under the normalization","constraints on","","and","yields closed form solutions","for  and",", as shown in Figure 4."," in and ","out in Figure 4 are similar to ordinary in-side/outside probabilities. We define  in as follows:","","If","   ","",""," is a pre-terminal node","above , then ","in","","","  ","","","."," Otherwise, ","in","","","      ","","    ","","","","   ","","","  ","in    ","in ","","where  and","denote non-terminal symbols","of chart items","and",". The outside probability,  out, is calculated using ","in","and PCFG-LA parameters along the packed struc-","ture, like the outside probabilities for PCFGs.","Once we have computed","","","","and","","","",", the","parse tree","that maximizes","","","is found using","a Viterbi algorithm, as in PCFG parsing.","Several parsing algorithms that also use inside-","outside calculation on packed chart have been pro-","posed (Goodman, 1996b; Simaán, 2003; Clark and","Curran, 2004). Those algorithms optimize some","evaluation metric of parse trees other than the pos-","terior probability ","","","",", e.g., (expected) labeled","constituent recall or (expected) recall rate of depen-","dency relations contained in a parse. It is in contrast","with our approach where (approximated) posterior","probability is optimized."]},{"title":"4 Experiments","paragraphs":["We conducted four sets of experiments. In the first set of experiments, the degree of dependency of trained models on initialization was examined because EM-style algorithms yield different results with different initial values of parameters. In the second set of experiments, we examined the relationship between model types and their parsing performances. In the third set of experiments, we compared the three parsing methods described in the previous section. Finally, we show the result of a parsing experiment using the standard test set.","We used sections 2 through 20 of the Penn WSJ corpus as training data and section 21 as heldout data. The heldout data was used for early stopping; i.e., the estimation was stopped when the rate 79","","If  "," is not a pre-terminal node, for each","","    ","","","  , let    , and  be non-terminal symbols of      , and   . Then,               "," out     ","","","","  "," in      in     ","   "," out      in    ",""," If "," is a pre-terminal node above word   , then  ","","  "," ."," If "," is a root node, let  be the non-terminal symbol of  . Then  ","             in     .","Figure 4: Optimal parameters of approximate distribution . ",""," ",""," Figure 5: Original subtree. of increase in the likelihood of the heldout data be-came lower than a certain threshold. Section 22 was used as test data in all parsing experiments except in the final one, in which section 23 was used. We stripped off all function tags and eliminated empty nodes in the training and heldout data, but any other pre-processing, such as comma raising or base-NP marking (Collins, 1999), was not done except for binarizations. 4.1 Dependency on initial values To see the degree of dependency of trained models on initializations, four instances of the same model were trained with different initial values of parameters.3","The model used in this experiment was created by CENTER-PARENT binarization and"," was set to 16. Table 1 lists training/heldout data log-likelihood per sentence (LL) for the four instances and their parsing performances on the test set (section 22). The parsing performances were obtained using the approximate distribution method in Section 3.2. Different initial values were shown to affect the results of training to some extent (Table 1). 3 The initial value for an annotated rule probability,  ",""," ","","",", was created by randomly multiplying the maximum likelihood estimation of the corresponding PCFG rule probability,    , as follows:  ","","  ","   "," "," ","where is a random number that is uniformly distributed in",""," ",""," and   is a normalization constant. 1 2 3 4 average","training LL -115 -114 -115 -114 -114","0.41","heldout LL -114 -115 -115 -114 -114","0.29","LR 86.7 86.3 86.3 87.0 86.6","0.27","LP 86.2 85.6 85.5 86.6 86.0","0.48 Table 1: Dependency on initial values. CENTER-PARENT CENTER-HEAD ","","","","","    ","   ","","  ","","      ","   LEFT RIGHT ","  ","  ","  ","  ","       ","  ","    Figure 6: Four types of binarization (H: head daughter). 4.2 Model types and parsing performance","We compared four types of binarization. The orig-","inal form is depicted in Figure 5 and the results are","shown in Figure 6. In the first two methods, called","CENTER-PARENT and CENTER-HEAD, the head-","finding rules of Collins (1999) were used. We ob-","tained an observable grammar","for each model by","reading off grammar rules from the binarized train-","ing trees. For each binarization method, PCFG-LA","models with different numbers of latent annotation","symbols, ","","","","","","",", and","",", were trained. 80 72 74 76 78 80 82 84 86 10000 100000 1e+06 1e+07 1e+08 F1 # of parameters","CENTER-PARENT","CENTER-HEAD","RIGHT","LEFT Figure 7: Model size vs. parsing performance.","The relationships between the number of parameters in the models and their parsing performances are shown in Figure 7. Note that models created using different binarization methods have different numbers of parameters for the same","",". The parsing performances were measured using F","scores of the parse trees that were obtained by re-ranking of 1000-best parses by a PCFG.","We can see that the parsing performance gets better as the model size increases. We can also see that models of roughly the same size yield similar performances regardless of the binarization scheme used for them, except the models created using LEFT binarization with small numbers of parameters (","  and","). Taking into account the dependency on initial values at the level shown in the previous experiment, we cannot say that any single model is superior to the other models when the sizes of the models are large enough.","The results shown in Figure 7 suggest that we could further improve parsing performance by in-creasing the model size. However, both the memory size and the training time are more than linear in","",", and the training time for the largest (","","",") models was about 15 hours for the models created using CENTER-PARENT, CENTER-HEAD, and LEFT and about 20 hours for the model created using RIGHT. To deal with larger (e.g.,","","= 32 or 64) models, we therefore need to use a model search that reduces the number of parameters while maintaining the model’s performance, and an approximation dur-ing training to reduce the training time. 84 84.5 85 85.5 86 86.5 0 1 2 3 4 5 6 7 8 9 10 F1 parsing time (sec)","N-best re-ranking Viterbi complete tree","approximate distribution Figure 8: Comparison of parsing methods. 4.3 Comparison of parsing methods The relationships between the average parse time and parsing performance using the three parsing methods described in Section 3 are shown in Figure 8. A model created using CENTER-PARENT with","","","was used throughout this experiment.","The data points were made by varying configurable parameters of each method, which control the number of candidate parses. To create the candidate parses, we first parsed input sentences using a PCFG4",", using beam thresholding with beam width  . The data points on a line in the figure were created by varying","with other parameters fixed. The firstmethod re-ranked the","-best parses enumerated from the chart after the PCFG parsing. The two lines for the first method in the figure correspond to = 100 and","= 300. In the second and the third methods, we removed all the dominance relations among chart items that did not contribute to any parses whose PCFG-scores were higher than  max, where ","max is the PCFG-score of the best parse in the chart. The parses remaining in the chart were the candidate parses for the second and the third methods. The different lines for the second and the third methods correspond to different values of",".","The third method outperforms the other two methods unless the parse time is very limited (i.e.,","1","4","The PCFG used in creating the candidate parses is roughly the same as the one that Klein and Manning (2003) call a ‘markovised PCFG with vertical order = 2 and horizontal order = 1’ and was extracted from Section 02-20. The PCFG itself gave a performance of 79.6/78.5 LP/LR on the development set. This PCFG was also used in the experiment in Section 4.4. 81 ","40 words LR LP CB 0 CB This paper 86.7 86.6 1.19 61.1","Klein and Manning (2003) 85.7 86.9 1.10 60.3 Collins (1999) 88.5 88.7 0.92 66.7 Charniak (1999) 90.1 90.1 0.74 70.1 ","100 words LR LP CB 0 CB This paper 86.0 86.1 1.39 58.3","Klein and Manning (2003) 85.1 86.3 1.31 57.2 Collins (1999) 88.1 88.3 1.06 64.0 Charniak (1999) 89.6 89.5 0.88 67.6 Table 2: Comparison with other parsers. sec is required), as shown in the figure. The superiority of the third method over the firstmethod seems to stem from the difference in the number of candidate parses from which the outputs are selected.5 The superiority of the third method over the second method is a natural consequence of the consistent use of   ","both in the estimation (as the objective","function) and in the parsing (as the score of a parse). 4.4 Comparison with related work Parsing performance on section 23 of the WSJ corpus using a PCFG-LA model is shown in Table 2. We used the instance of the four compared in the second experiment that gave the best results on the development set. Several previously reported results on the same test set are also listed in Table 2.","Our result is lower than the state-of-the-art lexicalized PCFG parsers (Collins, 1999; Charniak, 1999), but comparable to the unlexicalized PCFG parser of Klein and Manning (2003). Klein and Manning’s PCFG is annotated by many linguistically motivated features that they found using extensive manual feature selection. In contrast, our method induces all parameters automatically, except that manually written head-rules are used in binarization. Thus, our method can extract a considerable amount of hidden regularity from parsed corpora. However, our result is worse than the lexicalized parsers despite the fact that our model has access to words in the sentences. It suggests that certain types of information used in those lexicalized","5","Actually, the number of parses contained in the packed forest is more than 1 million for over half of the test sentences when","=","  and"," ","",", while the number of parses for which the first method can compute the exact probability in a comparable time (around 4 sec) is only about 300. parsers are hard to be learned by our approach."]},{"title":"References","paragraphs":["Eugene Charniak. 1999. A maximum-entropy-inspired parser. Technical Report CS-99-12.","David Chiang and Daniel M. Bikel. 2002. Recovering latent information in treebanks. In Proc. COLING, pages 183–189.","Stephen Clark and James R. Curran. 2004. Parsing the wsj using ccg and log-linear models. In Proc. ACL, pages 104–111.","Michael Collins. 1999. Head-Driven Statistical Models for Natural Language Parsing. Ph.D. thesis, University of Pennsylvania.","Brendan J. Frey, Relu Patrascu, Tommi Jaakkola, and Jodi Moran. 2000. Sequentially fitting “inclusi ve” trees for inference in noisy-OR networks. In Proc. NIPS, pages 493–499.","Joshua Goodman. 1996a. Efficientalgorithms for parsing the DOP model. In Proc. EMNLP, pages 143–152.","Joshua Goodman. 1996b. Parsing algorithms and metric. In Proc. ACL, pages 177–183.","Joshua Goodman. 1997. Probabilistic feature grammars. In Proc. IWPT.","James Henderson. 2003. Inducing history representations for broad coverage statistical parsing. In Proc. HLT-NAACL, pages 103–110.","Mark Johnson. 1998. PCFG models of linguistic tree representations. Computational Linguistics, 24(4):613–632.","Dan Klein and Christopher D. Manning. 2003. Accurate unlexicalized parsing. In Proc. ACL, pages 423–430.","Fernando Pereira and Yves Schabes. 1992. Inside-outside reestimation from partially bracketed corpora. In Proc. ACL, pages 128–135.","Libin Shen. 2004. Nondeterministic LTAG derivation tree extraction. In Proc. TAG+7, pages 199–203.","Khalil Simaán. 2002. Computational complexity of probabilistic disambiguation. Grammars, 5(2):125– 151.","Khalil Simaán. 2003. On maximizing metrics for syntactic disambiguation. In Proc. IWPT.","Takehito Utsuro, Syuuji Kodama, and Yuji Matsumoto. 1996. Generalization/specialization of context free grammars based-on entropy of non-terminals. In Proc. JSAI (in Japanese), pages 327–330. 82"]}],"references":[{"authors":[{"first":"Eugene","last":"Charniak"}],"year":"1999","title":"A maximum-entropy-inspired parser","source":"Eugene Charniak. 1999. A maximum-entropy-inspired parser. Technical Report CS-99-12."},{"authors":[{"first":"David","last":"Chiang"},{"first":"Daniel","middle":"M.","last":"Bikel"}],"year":"2002","title":"Recovering latent information in treebanks","source":"David Chiang and Daniel M. Bikel. 2002. Recovering latent information in treebanks. In Proc. COLING, pages 183–189."},{"authors":[{"first":"Stephen","last":"Clark"},{"first":"James","middle":"R.","last":"Curran"}],"year":"2004","title":"Parsing the wsj using ccg and log-linear models","source":"Stephen Clark and James R. Curran. 2004. Parsing the wsj using ccg and log-linear models. In Proc. ACL, pages 104–111."},{"authors":[{"first":"Michael","last":"Collins"}],"year":"1999","title":"Head-Driven Statistical Models for Natural Language Parsing","source":"Michael Collins. 1999. Head-Driven Statistical Models for Natural Language Parsing. Ph.D. thesis, University of Pennsylvania."},{"authors":[{"first":"Brendan","middle":"J.","last":"Frey"},{"first":"Relu","last":"Patrascu"},{"first":"Tommi","last":"Jaakkola"},{"first":"Jodi","last":"Moran"}],"year":"2000","title":"Sequentially fitting “inclusi ve” trees for inference in noisy-OR networks","source":"Brendan J. Frey, Relu Patrascu, Tommi Jaakkola, and Jodi Moran. 2000. Sequentially fitting “inclusi ve” trees for inference in noisy-OR networks. In Proc. NIPS, pages 493–499."},{"authors":[{"first":"Joshua","last":"Goodman"}],"year":"1996a","title":"Efficientalgorithms for parsing the DOP model","source":"Joshua Goodman. 1996a. Efficientalgorithms for parsing the DOP model. In Proc. EMNLP, pages 143–152."},{"authors":[{"first":"Joshua","last":"Goodman"}],"year":"1996b","title":"Parsing algorithms and metric","source":"Joshua Goodman. 1996b. Parsing algorithms and metric. In Proc. ACL, pages 177–183."},{"authors":[{"first":"Joshua","last":"Goodman"}],"year":"1997","title":"Probabilistic feature grammars","source":"Joshua Goodman. 1997. Probabilistic feature grammars. In Proc. IWPT."},{"authors":[{"first":"James","last":"Henderson"}],"year":"2003","title":"Inducing history representations for broad coverage statistical parsing","source":"James Henderson. 2003. Inducing history representations for broad coverage statistical parsing. In Proc. HLT-NAACL, pages 103–110."},{"authors":[{"first":"Mark","last":"Johnson"}],"year":"1998","title":"PCFG models of linguistic tree representations","source":"Mark Johnson. 1998. PCFG models of linguistic tree representations. Computational Linguistics, 24(4):613–632."},{"authors":[{"first":"Dan","last":"Klein"},{"first":"Christopher","middle":"D.","last":"Manning"}],"year":"2003","title":"Accurate unlexicalized parsing","source":"Dan Klein and Christopher D. Manning. 2003. Accurate unlexicalized parsing. In Proc. ACL, pages 423–430."},{"authors":[{"first":"Fernando","last":"Pereira"},{"first":"Yves","last":"Schabes"}],"year":"1992","title":"Inside-outside reestimation from partially bracketed corpora","source":"Fernando Pereira and Yves Schabes. 1992. Inside-outside reestimation from partially bracketed corpora. In Proc. ACL, pages 128–135."},{"authors":[{"first":"Libin","last":"Shen"}],"year":"2004","title":"Nondeterministic LTAG derivation tree extraction","source":"Libin Shen. 2004. Nondeterministic LTAG derivation tree extraction. In Proc. TAG+7, pages 199–203."},{"authors":[{"first":"Khalil","last":"Simaán"}],"year":"2002","title":"Computational complexity of probabilistic disambiguation","source":"Khalil Simaán. 2002. Computational complexity of probabilistic disambiguation. Grammars, 5(2):125– 151."},{"authors":[{"first":"Khalil","last":"Simaán"}],"year":"2003","title":"On maximizing metrics for syntactic disambiguation","source":"Khalil Simaán. 2003. On maximizing metrics for syntactic disambiguation. In Proc. IWPT."},{"authors":[{"first":"Takehito","last":"Utsuro"},{"first":"Syuuji","last":"Kodama"},{"first":"Yuji","last":"Matsumoto"}],"year":"1996","title":"Generalization/specialization of context free grammars based-on entropy of non-terminals","source":"Takehito Utsuro, Syuuji Kodama, and Yuji Matsumoto. 1996. Generalization/specialization of context free grammars based-on entropy of non-terminals. In Proc. JSAI (in Japanese), pages 327–330. 82"}],"cites":[{"style":0,"text":"Collins, 1999","origin":{"pointer":"/sections/2/paragraphs/0","offset":87,"length":13},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Charniak, 1999","origin":{"pointer":"/sections/2/paragraphs/0","offset":102,"length":14},"authors":[{"last":"Charniak"}],"year":"1999","references":["/references/0"]},{"style":0,"text":"Klein and Manning, 2003","origin":{"pointer":"/sections/2/paragraphs/0","offset":118,"length":23},"authors":[{"last":"Klein"},{"last":"Manning"}],"year":"2003","references":["/references/10"]},{"style":0,"text":"Goodman, 1997","origin":{"pointer":"/sections/2/paragraphs/0","offset":310,"length":13},"authors":[{"last":"Goodman"}],"year":"1997","references":["/references/7"]},{"style":0,"text":"Johnson, 1998","origin":{"pointer":"/sections/2/paragraphs/0","offset":325,"length":13},"authors":[{"last":"Johnson"}],"year":"1998","references":["/references/9"]},{"style":0,"text":"Utsuro et al. (1996)","origin":{"pointer":"/sections/2/paragraphs/5","offset":0,"length":20},"authors":[{"last":"Utsuro"},{"last":"al."}],"year":"1996","references":["/references/15"]},{"style":0,"text":"Henderson, 2003","origin":{"pointer":"/sections/2/paragraphs/5","offset":232,"length":15},"authors":[{"last":"Henderson"}],"year":"2003","references":["/references/8"]},{"style":0,"text":"Pereira and Schabes (1992)","origin":{"pointer":"/sections/3/paragraphs/93","offset":199,"length":26},"authors":[{"last":"Pereira"},{"last":"Schabes"}],"year":"1992","references":["/references/11"]},{"style":0,"text":"Chiang and Bikel, 2002","origin":{"pointer":"/sections/3/paragraphs/93","offset":344,"length":22},"authors":[{"last":"Chiang"},{"last":"Bikel"}],"year":"2002","references":["/references/1"]},{"style":0,"text":"Shen, 2004","origin":{"pointer":"/sections/3/paragraphs/93","offset":368,"length":10},"authors":[{"last":"Shen"}],"year":"2004","references":["/references/12"]},{"style":0,"text":"Pereira and Schabes (1992)","origin":{"pointer":"/sections/3/paragraphs/94","offset":172,"length":26},"authors":[{"last":"Pereira"},{"last":"Schabes"}],"year":"1992","references":["/references/11"]},{"style":0,"text":"Goodman (1996a)","origin":{"pointer":"/sections/4/paragraphs/94","offset":280,"length":15},"authors":[{"last":"Goodman"}],"year":"1996a","references":["/references/5"]},{"style":0,"text":"Simaán, 2002","origin":{"pointer":"/sections/4/paragraphs/94","offset":345,"length":12},"authors":[{"last":"Simaán"}],"year":"2002","references":["/references/13"]},{"style":0,"text":"Frey et al., 2000","origin":{"pointer":"/sections/4/paragraphs/373","offset":1,"length":17},"authors":[{"last":"Frey"},{"last":"al."}],"year":"2000","references":["/references/4"]},{"style":0,"text":"Goodman, 1996b","origin":{"pointer":"/sections/4/paragraphs/449","offset":7,"length":14},"authors":[{"last":"Goodman"}],"year":"1996b","references":["/references/6"]},{"style":0,"text":"Simaán, 2003","origin":{"pointer":"/sections/4/paragraphs/449","offset":23,"length":12},"authors":[{"last":"Simaán"}],"year":"2003","references":["/references/14"]},{"style":0,"text":"Curran, 2004","origin":{"pointer":"/sections/4/paragraphs/450","offset":0,"length":12},"authors":[{"last":"Curran"}],"year":"2004","references":[]},{"style":0,"text":"Collins, 1999","origin":{"pointer":"/sections/5/paragraphs/31","offset":401,"length":13},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Collins (1999)","origin":{"pointer":"/sections/5/paragraphs/79","offset":17,"length":14},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Klein and Manning (2003)","origin":{"pointer":"/sections/5/paragraphs/129","offset":83,"length":24},"authors":[{"last":"Klein"},{"last":"Manning"}],"year":"2003","references":["/references/10"]},{"style":0,"text":"Klein and Manning (2003)","origin":{"pointer":"/sections/5/paragraphs/131","offset":0,"length":24},"authors":[{"last":"Klein"},{"last":"Manning"}],"year":"2003","references":["/references/10"]},{"style":0,"text":"Collins (1999)","origin":{"pointer":"/sections/5/paragraphs/131","offset":45,"length":14},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Charniak (1999)","origin":{"pointer":"/sections/5/paragraphs/131","offset":80,"length":15},"authors":[{"last":"Charniak"}],"year":"1999","references":["/references/0"]},{"style":0,"text":"Klein and Manning (2003)","origin":{"pointer":"/sections/5/paragraphs/133","offset":0,"length":24},"authors":[{"last":"Klein"},{"last":"Manning"}],"year":"2003","references":["/references/10"]},{"style":0,"text":"Collins (1999)","origin":{"pointer":"/sections/5/paragraphs/133","offset":45,"length":14},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Charniak (1999)","origin":{"pointer":"/sections/5/paragraphs/133","offset":80,"length":15},"authors":[{"last":"Charniak"}],"year":"1999","references":["/references/0"]},{"style":0,"text":"Collins, 1999","origin":{"pointer":"/sections/5/paragraphs/136","offset":72,"length":13},"authors":[{"last":"Collins"}],"year":"1999","references":["/references/3"]},{"style":0,"text":"Charniak, 1999","origin":{"pointer":"/sections/5/paragraphs/136","offset":87,"length":14},"authors":[{"last":"Charniak"}],"year":"1999","references":["/references/0"]},{"style":0,"text":"Klein and Manning (2003)","origin":{"pointer":"/sections/5/paragraphs/136","offset":155,"length":24},"authors":[{"last":"Klein"},{"last":"Manning"}],"year":"2003","references":["/references/10"]}]}
