{"sections":[{"title":"Generalized Multitext Grammars I. Dan Melamed Computer Science Department New York University 715 Broadway, 7th Floor New York, NY, 10003, USA","paragraphs":["lastname @cs.nyu.edu"]},{"title":"Giorgio Satta Dept. of Information Eng’g University of Padua via Gradenigo 6/A I-35131 Padova, Italy ","paragraphs":["lastname @dei.unipd.it"]},{"title":"Benjamin Wellington Computer Science Department New York University 715 Broadway, 7th Floor New York, NY, 10003, USA","paragraphs":["lastname @cs.nyu.edu"]},{"title":"Abstract","paragraphs":["Generalized Multitext Grammar (GMTG) is a synchronous grammar formalism that is weakly equivalent to Linear Context-Free Rewriting Systems (LCFRS), but retains much of the notational and intuitive simplicity of Context-Free Grammar (CFG). GMTG allows both synchronous and independent rewriting. Such fle xibility facilitates more perspicuous modeling of parallel text than what is possible with other synchronous formalisms. This paper in-vestigates the generative capacity of GMTG, proves that each component grammar of a GMTG retains its generative power, and proposes a generalization of Chomsky Normal Form, which is necessary for synchronous CKY-style parsing."]},{"title":"1 Introduction","paragraphs":["Synchronous grammars have been proposed for the formal description of parallel texts representing translations of the same document. As shown by Melamed (2003), a plausible model of parallel text must be able to express discontinuous constituents. Since linguistic expressions can vanish in translation, a good model must be able to express independent (in addition to synchronous) rewriting. In-version Transduction Grammar (ITG) (Wu, 1997) and Syntax-Directed Translation Schema (SDTS) (Aho and Ullman, 1969) lack both of these properties. Synchronous Tree Adjoining Grammar (STAG) (Shieber, 1994) lacks the latter and allows only limited discontinuities in each tree.","Generalized Multitext Grammar (GMTG) offers a way to synchronize Mildly Context-Sensitive Grammar (MCSG), while satisfying both of the above criteria. The move to MCSG is motivated by our desire to more perspicuously account for certain syntactic phenomena that cannot be easily captured by context-free grammars, such as clitic climbing, extraposition, and other types of longdistance movement (Becker et al., 1991). On the other hand, MCSG still observes some restrictions that make the set of languages it generates less expensive to analyze than the languages generated by (properly) context-sensitive formalisms.","More technically, our proposal starts from Multitext Grammar (MTG), a formalism for synchronizing context-free grammars recently proposed by Melamed (2003). In MTG, synchronous rewriting is implemented by means of an indexing relation that is maintained over occurrences of nonterminals in a sentential form, using essentially the same machinery as SDTS. Unlike SDTS, MTG can extend the dimensionality of the translation relation beyond two, and it can implement independent rewriting by means of partial deletion of syntactic structures. Our proposal generalizes MTG by moving from component grammars that generate context-free languages to component grammars whose generative power is equivalent to Linear Context-Free Rewriting Systems (LCFRS), a formalism for describing a class of MCSGs. The generalization is achieved by allowing context-free productions to rewrite tuples of strings, rather than single strings. Thus, we retain the intuitive top-down definition of synchronous derivation original in SDTS and MTG but not found in LCFRS, while extending the generative power to linear context-free rewriting languages. In this respect, GMTG has also been in-spired by the class of Local Unordered Scattered Context Grammars (Rambow and Satta, 1999). A syntactically very different synchronous formalism involving LCFRS has been presented by Bertsch and Nederhof (2001).","This paper begins with an informal description of GMTG. It continues with an investigation of this formalism’s generative capacity. Next, we prove that in GMTG each component grammar retains its generative power, a requirement for synchronous formalisms that Rambow and Satta (1996) called the “weak language preservation property.” Lastly, we propose a synchronous generalization of Chomsky Normal Form, which lays the groundwork for synchronous parsing under GMTG using a CKY-style algorithm (Younger, 1967; Melamed, 2004)."]},{"title":"2 Informal Description and Comparisons","paragraphs":["GMTG is a generalization of MTG, which is itself a generalization of CFG to the synchronous case. Here we present MTG in a new notation that shows the relation to CFG more clearly. For example, the following MTG productions can generate the multitext [(I fed the cat), (ya kota kormil)]:1","","(S) (S) ","PN VP ","PN VP","(1)  PN  PN  I ","ya (2)  VP  VP ","V NP"," ","NP V ","(3)  V  V  fed ","kormil (4)  NP  NP ","D N"," ","N ","(5)  D    the "," (6)  N  N  cat ","kota (7) Each production in this example has two components, the first modeling English and the second (transliterated) Russian. Nonterminals with the same index must be rewritten together (synchronous rewriting). One strength of MTG, and thus also GMTG, is shown in Productions (5) and (6). There is a determiner in English, but not in Russian, so Production (5) does not have the nonterminal D in the Russian component and (6) applies only to the English component (independent rewriting). For-malisms that do not allow independent rewriting require a corresponding","to appear in the second component on the right-hand side (RHS) of Production (5), and this","would eventually generate the empty string. This approach has the disadvantage that it introduces spurious ambiguity about the position of the “empty” nonterminal with respect to the other nonterminals in its component. Spurious ambiguity leads to wasted effort during parsing.","GMTG’s implementation of independent rewriting through the empty tuple () serves a very different function from the empty string. Consider the following GMTG:       "," (8)          ","(9)               "," (10)               "," (11) Production (8) asserts that symbol ","vanishes in translation. Its application removes both of the nonterminals on the left-hand side (LHS), pre-empting any other production. In contrast, Production (9) 1","We write production components both side by side and one above another to save space, but each component is always in parentheses. explicitly relaxes the synchronization constraint, so that the two components can be rewritten independently. The other six productions make assertions about only one component and are agnostic about the other component. Incidentally, generating the same language with only fully synchronized productions would raise the number of required productions to 11, so independent rewriting also helps to reduce grammar size.","Independent rewriting is also useful for modeling paraphrasing. Take, for example, [(Tim got a pink slip), (Tim got laid off )]. While the two sentences have the same meaning, the objects of their verb phrases are structured very differently. GMTG can express their relationships as follows:"," S  S ","NP VP ","NP VP","(12)  VP  VP ","V NP"," ","V","PP","","(13)  NP  PP ","DT A","N ","VB R","(14)  NP  NP  Tim ","Tim (15)  V  V  got ","got (16)  DT    a "," (17)  A    pink "," (18)  N    slip "," (19)    VB   ","laid (20)    R   ","off (21)","As described by Melamed (2003), MTG requires production components to be contiguous, except after binarization. GMTG removes this restriction. Take, for example, the sentence pair [(The doctor treats his teeth), (El médico le examino los dientes)] (Dras and Bleam, 2000). The Spanish clitic le and the NP los dientes should both be paired with the English NP his teeth, giving rise to a discontinuous constituent in the Spanish component. A GMTG fragment for the sentence is shown below:"," S  S ","NP VP"," ","NP VP","  VP  VP ","V NP"," ","NP V NP","  NP  NP  The doctor  El médico  V  V  treats  examino  NP ","NP NP  his teeth ","le los dientes Note the discontinuity between le and los dientes. Such discontinuities are marked by commas on both the LHS and the RHS of the relevant component.","GMTG’s fle xibility allows it to deal with many complex syntactic phenomena. For example, Becker et al. (1991) point out that TAG does not have the generative capacity to model certain kinds of scrambling in German, when the so-called “co-occurrence constraint” is imposed, requiring the derivational pairing between verbs and their complements. They examine the English/German sentence fragment [(... that the detective has promised the client to indict the suspect of the crime), (... daß des Verbrechens der Detektiv den Verd ächtigen dem Klienten zu überführen versprochen hat)]. The verbs versprochen and überführen both have two noun phrases as arguments. In German, these noun phrases can appear to the left of the verbs in any order. The following is a GMTG fragment for the above sentence pair2",":   S  S ","  ","N","","has promised N  ","S"," ","","S","N",""," S N","","","S","versprochen hat"," (22)","   S ","","S  S","","S"," "," ","to indict N","  N",""," ","N","",""," N ","","","zu überführen"," (23) The discontinuities allow the noun arguments of versprochen to be placed in any order with the noun arguments of überführen. Rambow (1995) gives a similar analysis."]},{"title":"3 Formal Definitions","paragraphs":["Let","be a finite set of nonterminal symbols and","let be the set of integers.3","We define","      ","    "," .4","Elements of  ","","will be called indexed nonterminal symbols. In","what follows we also consider a finite set of termi-","nal symbols",", disjoint from","",", and work with","strings in  , where","","","","  ",". For    , we define     ","  "," ","     ","        ","","  ",", i.e. the set of indexes that ap-","pear in",".","An indexed tuple vector, or ITV, is a vector of","tuples of strings over","",", having the form","     ","","","","    ","         ","where","",",","and ","   for","",","," . We write    ,","",", to denote the","","-th component of","and     ","to denote the arity","of such a tuple, which is . When      ",",    ","is the empty tuple, written   . This should not be confused with   , that is the tuple of arity one","containing the empty string. A link is an ITV where 2","These are only a small subset of the necessary productions. The subscripts on the nonterminals indicate what terminals they will eventually yield; the terminal productions have been left out to save space. 3","Any other infiniteset of indexes would suit too. 4","The parentheses around indexes distinguish them from other uses of superscripts in formal language theory. However, we shall omit the parentheses when the context is unambiguous. each","consists of one indexed nonterminal and all of these nonterminals are coindexed. As we shall see, the notion of a link generalizes the notion of nonterminal in context-free grammars: each production rewrites a single link.","Definition1 Let","","","be some integer con-","stant. A generalized multitext grammar with","dimensions (","-GMTG for short) is a tuple","","","","   ","   where",",","","are finite, disjoint sets","of nonterminal and terminal symbols, respectively,","","","","is the start symbol and","is a finiteset of","productions. Each production has the form","","",",","where","is a -dimensional link and","is a","-","dimensional ITV such that           ","for"," ",". If   ","contains  , then      ",". We omit symbol","from","-GMTG whenever it is not relevant. To simplify notation, we write productions as      ","",", with each","","","   ","   ","     ","","  ","   ,   ","",". I.e.","we omit the unique index appearing on the LHS of","",". Each","","is called a production component. The","production component      is called the inactive","production component. All other production com-","ponents are called active and we set","    ","   ",". Inactive production components are","used to relax synchronous rewriting on some dimen-","sions, that is to implement rewriting on  "," components. When ","",", rewriting is licensed on one","component, independently of all the others. Two grammar parameters play an important role","in this paper. Let       "," ","","and","","    ","         ","","  ","   .","Definition2 The rank","of a production","is","the number of links on its RHS:   ","                  . The rank of a","GMTG is ","  ","    .","Definition3 The fan-out of  ,","and","are, re-","spectively, ","   ","",",         ","  ","and  ","  ","    . For example, the rank of Production (23) is two and its fan-out is four.","In GMTG, the derives relation is defined over ITVs. GMTG derivation proceeds by synchronous application of all the active components in some production. The indexed nonterminals to be rewritten simultaneously must all have the same index",", and all nonterminals indexed with","in the ITV must be rewritten simultaneously. Some additional notation will help us to define rewriting precisely. A reindexing is a one-to-one function on",", and is extended to","","by letting","    for    and         for   ","   . We also extend ","to strings in  ","analogously. We","say that  ","    ","are independent if          ",".","Definition4 Let  ","","  ","",""," "," be a"," -GMTG and let","       ","","","with   and          ","    ","","","","   . Let"," and","be two ITVs with              and               "," . Assume that","is some con-","catenation of all and that","is some concatena-","tion of all",", ",",","",", and let  be some reindexing such that strings  ","  and","are","independent. The derives relation   "," holds whenever there exists an index  ","such that the","following two conditions are satisfied: (i) for each ","     we have     ","   ","      ","  ","     ","","      ","such that         ","       , and each   is obtained from","by replacing each","    with     ","",";","(ii) for each  ","     we have            and    ","    . We generalize the   relation to ","and   in the usual way, to represent derivations.","We can now introduce the notion of generated language (or generated relation). A start link of a","-GMTG is a","-dimensional link where at least one component is","     , ","the start symbol, and the rest of the components are   . Thus, there are    start links. The language","generated by a -GMTG","is ","     ","  "," ","","","  ","a start link","","       or","    ","","  ","with   ","    ","","","",". Each ITV in  ","  is called a multitext. For every","-GMTG",",  ","  can be partitioned into"," ","","subsets, each containing multitexts derived from a different start link. These subsets are disjoint, since every non-empty tuple of a start link is eventually rewritten as a string, either empty or not.5","A start production is a production whose LHS is a start link. A GMTG writer can choose the combinations of components in which the grammar can generate, by including start productions with the desired combinations of active components. If a grammar contains no start productions with a certain combination of active components, then the corresponding subset of   ","will be empty. Allow-","ing a single GMTG to generate multitexts with 5 We are assuming that there are no useless nonterminals. some empty tuples corresponds to modeling relations of different dimensionalities. This capability enables a synchronous grammar to govern lowerdimensional sublanguages/translations. For example, an English/Italian GMTG can include Production (9), an English CFG, and an Italian CFG. A single GMTG can then govern both translingual and monolingual information in applications. Furthermore, this capability simplifies the normaliza-tion procedure described in Section 6. Otherwise, this procedure would require exceptions to be made when eliminating epsilons from start productions."]},{"title":"4 Generative Capacity","paragraphs":["In this section we compare the generative capacity of GMTG with that of mildly context-sensitive grammars. We focus on LCFRS, using the notational variant introduced by Rambow and Satta (1999), briefly summarized below. Throughout this section, strings  ","","","and vectors of the form"," ","will be identified. For lack of space, some","proofs are only sketched, or entirely omitted when","relatively intuitive: Melamed et al. (2004) provide","more details. Let","be some terminal alphabet. A function ","has rank ","if it is definedon                       , for integers ","",",  ",". Also,  has fan-out ","  if its range is a subset of      .","Let",","," ,","",""," ",",","","","and","","","",", be string-valued variables. Function ","is linear","regular if it is definedby an equation of the form                    ","","  ","","          ","  (24) where       ","  represents some grouping into  strings of all and only the variables appearing in the left-hand side, possibly with some additional terminal symbols. (Symbols",",","and  are overloaded below.) Definition5 A Linear Context-Free Rewriting System (LCFRS) is a quadruple "," ","","  ","",""," ","","where  ,","and  are as in GMTGs, every","   ","is associated with an integer  ","","","","with   ","",",","and","is a finite set of productions of the form","              ","",", where "," ","",",","   "," ,","   and where  is a linear regular function having rank "," and fan-out     , definedon ","           ","        . For every"," "," and"," ","     ","",", we write  "," if (i)      "," and     ","; or else (ii)         ","    "," "," , ","      ","       ","for every"," ",""," ","",", and","","      ","","","  ","",".","The language generated by is definedas  ","","","","   ","   "," ","  ",". Let "," ,             ","    ","",". The rank of","and are, respectively,    ","   and ","    ","  . The fan-out of","and","are, respectively,    ","    and ","  ","","   ",".","The proof of the following theorem is relatively","intuitive and therefore omitted.","Theorem 1 For any LCFRS",", there exists some","1-GMTG  with    "," "," ","and ","     ","  such that ","  ",""," ","  .","Next, we show that the generative capacity of GMTG does not exceed that of LCFRS. In order to compare string tuples with bare strings, we introduce two special functions ranging over multitexts. Assume two fresh symbols   ",""," "," ","","  . For a multitext","we write","   ",""," , where   ","   ","if   "," "," and  ","","",""," ","","","otherwise,","","",". For a multitext         ","    ","with no empty","tuple, we write                ",""," ","    ","   . We extend both functions to","sets of multitexts in the obvious way:","   ","","    ","      and","         ","     ",".","In a -GMTG, a production with  active components, "," ",", is said to be ","-active. A"," -GMTG whose start productions are all","-active","is called properly synchronous.","Lemma 1 For any properly synchronous","-GMTG","",", there exists some LCFRS","","with     ","  and   "," ","  such that ","        ","   .","Outline of the proof. We set   "," ","  ","","","","","","","",", where  ","      ","","       ","","","","","","  ",", ","  is the set of all indexes appearing","in the productions of",", and","is constructed as","follows. Let   "," with       ","","",",","    ","","","","","","",",","           ","","  ","","",""," ","",", and","","      ","    ","","       ","     . Assume that","can rewrite the right-","hand side of , that is","             ","    ","","  ","       ","           ","             Then there must be at least one index","such that for each ","     ,       ","     contains exactly"," occurrences of",".","Let  ","             . Also let  ","               ","and let   ","be the","number of occurrences of","appearing in","",". We","define an alphabet   ","",""," ","","","  ","","","","",""," ","","","",". For each","and","with",""," ","",", ","  ","","","and","","",", we define a string ","","","  ","","over "," as fol-","lows. Let         , each      . Then  ","","","  ","","           , where","       in case   "," ; and","   ","    ","in case     ","","  , where","is the index of   and the indicated occurrence of  ","is the -th occurrence of such symbol","appearing from left to right in string","",".","Next, for every possible",",",", and","as above, we","add to","a production    ","   ","","         ","         ","where                                   ","                    ","","   ","  (each ","","","  ","","above satisfies ","     ). Note that  is a function with rank   ","and fan-out    "," ","    . Thus we have ","  ","","    and ","  ","","    . Without loss of generality,","we assume that contains only one production","with  appearing on the left-hand side, having the","form ","     ","      ","  ","","",".","To complete the construction of",", we then","add a last production  ","        ","","where","","","     ","","","","                    .","We claim that, for each ,","","and","as above","","                            ","                          iff                        ","     . The lemma follows from this claim.","The proof of the next lemma is relatively intuitive and therefore omitted.","Lemma 2 For any -GMTG",", there exists a prop-","erly synchronous -GMTG","","such that ","     ","  ,    ","   ","","  ",", and         ","   . Combining Lemmas 1 and 2, we have","Theorem 2 For any","-GMTG",", there exists","some LCFRS  with ","","",""," "," ","and  ","","","","   ",""," ","","such that ","           ","    ."]},{"title":"5 Weak Language Preservation Property","paragraphs":["GMTGs have the weak language preservation property, which is one of the defining requirements of synchronous rewriting systems (Rambow and Satta, 1996). Informally stated, the generative capacity of the class of all component grammars of a GMTG exactly corresponds to the class of all projected languages. In other words, the interaction among different grammar components in the rewriting process of GMTG does not increase the generative power beyond the above mentioned class. The next result states this property more formally.","Let","be a","-GMTG with production set",". For","","","",", the","-th component grammar of",", written","  ","  ","",", is the 1-GMTG with productions ","    ","","  "," ",""," ",""," ","    ",". Similarly, the","-th","projected language of ","  is","    ","  ","","","","","      ","       ","     ","","","  ",". In general     ","","","  ","","","","    ","  ","",",","because component grammars   ","","","","","inter-","act with each other in the rewriting process of","",". To give a simple example, consider the 2-","GMTG","with productions   ","      ,         ","    "," and    "," ","    ","      . Then "," ","        "," ",""," , and thus","","  ","  ","","   ","",""," ",""," . On the other hand,     ","   ","","   ",""," ","  ","",". Let","LCFRS be the class of all lan-","guages generated by LCFRSs. Also let","","   and","    ","be the classes of languages     ","     and      ","     , respectively, for every","","",", ev-","ery","-GMTG","and every  with "," ",".","Theorem 3   "," ","    ","","and    ","       .","Proof. The","cases directly follow from Theo-","rem 1.","Let","be some","-GMTG and let  be an integer","such that  "," ",". It is not difficult to see that            ","  ","          ","     . Hence      ","     can be generated by some LCFRS, by","Theorem 2.","We now define a LCFRS","","such that  ","   ","","       ","   ","","",". Assume","","","","","","   ","   is a properly synchronous","-GMTG","generating    ","","","","(Lemma 2). Let","","","","","","  ","","    , where","","","and","","are constructed","from","","","almost as in the proof of Lemma 1.","The only difference is in the definition of strings"," ","","","  ","","and the production rewriting  ","",", speci-","fied as follows (we use the same notation as in the","proof of Lemma 1). ","","","  ","","           , where","for each : (i)       if   "," and","  ; (ii)      if  ","","","and","","  ; (iii)   ","     if     ","","  , with",",","as in the original proof.","Finally, the production rewriting  ","","has the form","     ","","  ","",", where                  ","           . To conclude the proof, note that      ","     and","       ","   ","","","can differ","only with respect to string . The theorem then fol-","lows from the fact that LCFRS is closed under in-","tersection with regular languages (Weir, 1988)."]},{"title":"6 Generalized Chomsky Normal Form","paragraphs":["Certain kinds of text analysis require a grammar in a convenient normal form. The prototypical example for CFG is Chomsky Normal Form (CNF), which is required for CKY-style parsing. A","-GMTG is in Generalized Chomsky Normal Form (GCNF) if it has no useless links or useless terminals, and every production is in one of two forms:","(i) A nonterminal production has rank = 2 and no terminals or  ’s on the RHS.","(ii) A terminal production has exactly one component of the form    , where ","","","and","","",". The other components are inactive.","The algorithm to convert a GMTG to GCNF has the following steps: (1) add a new start-symbol (2) isolate terminals, (3) binarize productions, (4) remove ","’s, (5) eliminate useless links and terminals, and (6) eliminate unit productions. The steps are generalizations of those presented by Hopcroft et al. (2001) to the multidimensional case with discontinuities. The ordering of these steps is important, as some steps can restore conditions that others eliminate. Traditionally, the terminal isolation and binarization steps came last, but the alternative order reduces the number of productions that can be created during ","-elimination. Steps (1), (2), (5) and (6) are the same for CFG and GMTG, except that the notion of nonterminal in CFG is replaced with links in GMTG. Some complications arise, however, in the generalization of steps (3) and (4). 6.1 Step 3: Binarize The third step of converting to GCNF is binarization of the productions, making the rank of the grammar two. For","","and ","  , we write D-GMTG   ","","to","represent the class of all","-GMTGs with rank","and","fan-out ",". A CFG can always be binarized into another CFG: two adjacent nonterminals are replaced with a single nonterminal that yields them. In contrast, it can be impossible to binarize a","-GMTG    ","into an equivalent -GMTG","",". From results pre-","sented by Rambow and Satta (1999) it follows that,  (S) (S)   ","N","PatV wentP","homeA","early ","P","damoyN PatA","ranoV","pashol","","Pat went home early damoy Pat rano pashol Figure 1: A production that requires an increased fan-out to binarize, and its 2D illustration. for every fan-out "," ","and rank","","",", there","are some index orderings that can be generated by","","-GMTG   "," but not","-GMTG     ","",". The distinguishing characteristic of such index orderings is apparent in Figure 1, which shows a production in a grammar with fan-out two, and a graph that illustrates which nonterminals are coindexed. No two nonterminals are adjacent in both components, so replacing any two nonterminals with a single nonterminal causes a discontinuity. Increasing the fan-out of the grammar allows a single nonterminal to rewrite as non-adjacent nonterminals in the same string. Increasing the fan-out can be necessary even for binarizing a 1-GMTG production such as:","","S,S  ","N","V","P","A  P","N","A","V","","(25)","To binarize, we nondeterministically split each","nonterminal production  of rank","","","into two","nonterminal productions  and  of rank ","",", but","possibly with higher fan-out. Since this algorithm","replaces with two productions that have rank ","",", recursively applying the algorithm to productions of rank greater than two will reduce the rank of the grammar to two. The algorithm follows:","(i) Nondeterministically chose","links to be re-","moved from","","and replaced with a single link","to make ",", where"," ","","  . We call these links the m-links.","(ii) Create a new ITV",". Two nonterminals are neighbors if they are adjacent in the same string in a production RHS. For each set of m-link neighbors in component ","in  , place that set of neighbors into the ","’th component of","in the order in which they appeared in","",", so","that each set of neighbors becomes a different","string, for "," ",". (iii) Create a new unique nonterminal, say ",", and","replace each set of neighbors in production","","with  , to create  . The production","is","      "," For example, binarization of the productions for the English/Russian multitext [(Pat went home early), (damoy Pat rano pashol)]6","in Figure 1 requires that we increase the fan-out of the language to three. The binarized productions are as follows:",""," S  S"," "," ","N PatVP","","","VP N PatVP",""," (26)","  VP","","VP","VP"," "," ","V A early ","V"," A ranoV",""," (27)","  V"," V V"," ","  V wentP","home","","P","damoy","V","pashol"," (28) 6.2 Step 4: Eliminate ","’s Grammars in GCNF cannot have ","’s in their productions. Thus, GCNF is a more restrictive normal form than those used by Wu (1997) and Melamed (2003). The absence of ","’s simplifies","parsers for GMTG (Melamed, 2004). Given a","GMTG","with ","in some productions, we give","the construction of a weakly equivalent gram-","mar","without any ","’s. First, determine all","nullable links and associated strings in",". A","link              ","      ","is nullable if  ","",", where","","                    "," is an","ITV where at least one is ",". We say the link"," is nullable and the string at address   ","","in","","is nullable. For each nullable link, we create  ","versions of the link, where","is the number of nullable strings of that link. There is one version for each of the possible combinations of the nullable strings being present or absent. The version of the link with all strings present is its original version. Each non-original version of the link (except in the case of start links) gets a unique subscript, which is applied to all the nonterminals in the link, so that each link is unique in the grammar. We construct a new grammar","","whose set of productions"," is determined as follows: for each production, we identify the nullable links on the RHS and replace them with each combination of the non-original versions found earlier. If a string is left empty during this process, that string is removed from the RHS and the fan-out of the production component is reduced by one. The link on the LHS is replaced with its appropriate matching non-original link. There is one exception to the replacements. If a production consists of all nullable strings, do not include this case. Lastly, we remove all strings on the RHS of productions that have ","’s, and reduce","the fan-out of the productions accordingly. Once 6 The Russian is topicalized but grammatically correct. again, we replace the LHS link with the appropriate version.","Consider the example grammar:                  ","(29)       ","          ","(30)         "," (31)        "," "," (32) We first identify which links are nullable. In this case       "," and      ","are nullable so we","create a new version of both links:          and     ","",". We then alter the productions. Production (31) gets replaced by (40). A new production based on (30) is Production (38). Lastly, Production (29) has two nullable strings on the RHS, so it gets altered to add three new productions, (34), (35) and (36). The altered set of productions are the following:   ","               ","(33)   ","              ","(34)   ","               ","(35)   ","             "," (36)       ","          ","(37)                "," (38)        "," "," (39)         "," (40)","Melamed et al. (2004) give more details about conversion to GCNF, as well as the full proof of our finaltheorem:","Theorem 4 For each GMTG","there exists a","GMTG  in GCNF generating the same set of mul-","titexts as","but with each   component in a multitext replaced by   ."]},{"title":"7 Conclusions","paragraphs":["Generalized Multitext Grammar is a convenient and intuitive model of parallel text. In this paper, we have presented some formal properties of GMTG, including proofs that the generative capacity of GMTG is comparable to ordinary LCFRS, and that GMTG has the weak language preservation property. We also proposed a synchronous generalization of Chomsky Normal Form, laying the founda-tion for synchronous CKY parsing under GMTG. In future work, we shall explore the empirical properties of GMTG, by inducing stochastic GMTGs from real multitexts."]},{"title":"Acknowledgments","paragraphs":["Thanks to Owen Rambow and the anonymous reviewers for valuable feedback. This research was supported by an NSF CAREER Award, the DARPA TIDES program, the Italian MIUR under project PRIN No. 2003091149 005, and an equipment gift from Sun Microsystems."]},{"title":"References","paragraphs":["A. Aho and J. Ullman. 1969. Syntax directed translations and the pushdown assembler. Journal of Computer and System Sciences, 3:37–56, February.","T. Becker, A. Joshi, and O. Rambow. 1991. Long-distance scrambling and tree adjoining grammars. In Proceedings of the 5th Meeting of the European Chapter of the Association for Computational Linguistics (EACL), Berlin, Germany.","E. Bertsch and M. J. Nederhof. 2001. On the complexity of some extensions of RCG parsing. In Proceedings of the 7th International Workshop on Parsing Technologies (IWPT), pages 66–77, Beijing, China.","M. Dras and T. Bleam. 2000. How problematic are clitics for S-TAG translation? In Proceedings of the 5th International Workshop on Tree Adjoining Grammars and Related For-malisms (TAG+5), Paris, France.","J. Hopcroft, R. Motwani, and J. Ullman. 2001. Introduction to Automota Theory, Languages and Computation. Addison-Wesley, USA.","I. Dan Melamed, G. Satta, and B. Wellington. 2004. Generalized multitext grammars. Technical Report 04-003, NYU Proteus Project. http://nlp.cs.nyu.edu/pubs/.","I. Dan Melamed. 2003. Multitext grammars and synchronous parsers. In Proceedings of the Human Language Technology Conference and the North American Association for Computational Linguistics (HLT-NAACL), pages 158–165, Edmonton, Canada.","I. Dan Melamed. 2004. Statistical machine translation by parsing. In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL), Barcelona, Spain.","O. Rambow and G. Satta. 1996. Synchronous models of language. In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics (ACL), Santa Cruz, USA.","O. Rambow and G. Satta. 1999. Independent parallelism in finitecopying parallel rewriting systems. Theoretical Computer Science, 223:87–120, July.","O. Rambow. 1995. Formal and Computational Aspects of Natural Language Syntax. Ph.D. thesis, University of Pennsylvania, Philadelphia, PA.","S. Shieber. 1994. Restricting the weak-generative capactiy of synchronous tree-adjoining grammars. Computational In-telligence, 10(4):371–386.","D. J. Weir. 1988. Characterizing Mildly Context-Sensitive Grammar Formalisms. Ph.D. thesis, Department of Computer and Information Science, University of Pennsylvania.","D. Wu. 1997. Stochastic inversion transduction grammars and bilingual parsing of parallel corpora. Computational Linguistics, 23(3):377–404, September.","D. H. Younger. 1967. Recognition and parsing of context-free languages in time  . Information and Control, 10(2):189– 208, February."]}],"references":[{"authors":[{"first":"A.","last":"Aho"},{"first":"J.","last":"Ullman"}],"year":"1969","title":"Syntax directed translations and the pushdown assembler","source":"A. Aho and J. Ullman. 1969. Syntax directed translations and the pushdown assembler. Journal of Computer and System Sciences, 3:37–56, February."},{"authors":[{"first":"T.","last":"Becker"},{"first":"A.","last":"Joshi"},{"first":"O.","last":"Rambow"}],"year":"1991","title":"Long-distance scrambling and tree adjoining grammars","source":"T. Becker, A. Joshi, and O. Rambow. 1991. Long-distance scrambling and tree adjoining grammars. In Proceedings of the 5th Meeting of the European Chapter of the Association for Computational Linguistics (EACL), Berlin, Germany."},{"authors":[{"first":"E.","last":"Bertsch"},{"first":"M.","middle":"J.","last":"Nederhof"}],"year":"2001","title":"On the complexity of some extensions of RCG parsing","source":"E. Bertsch and M. J. Nederhof. 2001. On the complexity of some extensions of RCG parsing. In Proceedings of the 7th International Workshop on Parsing Technologies (IWPT), pages 66–77, Beijing, China."},{"authors":[{"first":"M.","last":"Dras"},{"first":"T.","last":"Bleam"}],"year":"2000","title":"How problematic are clitics for S-TAG translation? In Proceedings of the 5th International Workshop on Tree Adjoining Grammars and Related For-malisms (TAG+5), Paris, France","source":"M. Dras and T. Bleam. 2000. How problematic are clitics for S-TAG translation? In Proceedings of the 5th International Workshop on Tree Adjoining Grammars and Related For-malisms (TAG+5), Paris, France."},{"authors":[{"first":"J.","last":"Hopcroft"},{"first":"R.","last":"Motwani"},{"first":"J.","last":"Ullman"}],"year":"2001","title":"Introduction to Automota Theory, Languages and Computation","source":"J. Hopcroft, R. Motwani, and J. Ullman. 2001. Introduction to Automota Theory, Languages and Computation. Addison-Wesley, USA."},{"authors":[{"first":"I.","middle":"Dan","last":"Melamed"},{"first":"G.","last":"Satta"},{"first":"B.","last":"Wellington"}],"year":"2004","title":"Generalized multitext grammars","source":"I. Dan Melamed, G. Satta, and B. Wellington. 2004. Generalized multitext grammars. Technical Report 04-003, NYU Proteus Project. http://nlp.cs.nyu.edu/pubs/."},{"authors":[{"first":"I.","middle":"Dan","last":"Melamed"}],"year":"2003","title":"Multitext grammars and synchronous parsers","source":"I. Dan Melamed. 2003. Multitext grammars and synchronous parsers. In Proceedings of the Human Language Technology Conference and the North American Association for Computational Linguistics (HLT-NAACL), pages 158–165, Edmonton, Canada."},{"authors":[{"first":"I.","middle":"Dan","last":"Melamed"}],"year":"2004","title":"Statistical machine translation by parsing","source":"I. Dan Melamed. 2004. Statistical machine translation by parsing. In Proceedings of the 42nd Annual Meeting of the Association for Computational Linguistics (ACL), Barcelona, Spain."},{"authors":[{"first":"O.","last":"Rambow"},{"first":"G.","last":"Satta"}],"year":"1996","title":"Synchronous models of language","source":"O. Rambow and G. Satta. 1996. Synchronous models of language. In Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics (ACL), Santa Cruz, USA."},{"authors":[{"first":"O.","last":"Rambow"},{"first":"G.","last":"Satta"}],"year":"1999","title":"Independent parallelism in finitecopying parallel rewriting systems","source":"O. Rambow and G. Satta. 1999. Independent parallelism in finitecopying parallel rewriting systems. Theoretical Computer Science, 223:87–120, July."},{"authors":[{"first":"O.","last":"Rambow"}],"year":"1995","title":"Formal and Computational Aspects of Natural Language Syntax","source":"O. Rambow. 1995. Formal and Computational Aspects of Natural Language Syntax. Ph.D. thesis, University of Pennsylvania, Philadelphia, PA."},{"authors":[{"first":"S.","last":"Shieber"}],"year":"1994","title":"Restricting the weak-generative capactiy of synchronous tree-adjoining grammars","source":"S. Shieber. 1994. Restricting the weak-generative capactiy of synchronous tree-adjoining grammars. Computational In-telligence, 10(4):371–386."},{"authors":[{"first":"D.","middle":"J.","last":"Weir"}],"year":"1988","title":"Characterizing Mildly Context-Sensitive Grammar Formalisms","source":"D. J. Weir. 1988. Characterizing Mildly Context-Sensitive Grammar Formalisms. Ph.D. thesis, Department of Computer and Information Science, University of Pennsylvania."},{"authors":[{"first":"D.","last":"Wu"}],"year":"1997","title":"Stochastic inversion transduction grammars and bilingual parsing of parallel corpora","source":"D. Wu. 1997. Stochastic inversion transduction grammars and bilingual parsing of parallel corpora. Computational Linguistics, 23(3):377–404, September."},{"authors":[{"first":"D.","middle":"H.","last":"Younger"}],"year":"1967","title":"Recognition and parsing of context-free languages in time  ","source":"D. H. Younger. 1967. Recognition and parsing of context-free languages in time  . Information and Control, 10(2):189– 208, February."}],"cites":[{"style":0,"text":"Melamed (2003)","origin":{"pointer":"/sections/4/paragraphs/0","offset":145,"length":14},"authors":[{"last":"Melamed"}],"year":"2003","references":["/references/6"]},{"style":0,"text":"Wu, 1997","origin":{"pointer":"/sections/4/paragraphs/0","offset":432,"length":8},"authors":[{"last":"Wu"}],"year":"1997","references":["/references/13"]},{"style":0,"text":"Aho and Ullman, 1969","origin":{"pointer":"/sections/4/paragraphs/0","offset":489,"length":20},"authors":[{"last":"Aho"},{"last":"Ullman"}],"year":"1969","references":["/references/0"]},{"style":0,"text":"Shieber, 1994","origin":{"pointer":"/sections/4/paragraphs/0","offset":585,"length":13},"authors":[{"last":"Shieber"}],"year":"1994","references":["/references/11"]},{"style":0,"text":"Becker et al., 1991","origin":{"pointer":"/sections/4/paragraphs/1","offset":396,"length":19},"authors":[{"last":"Becker"},{"last":"al."}],"year":"1991","references":["/references/1"]},{"style":0,"text":"Melamed (2003)","origin":{"pointer":"/sections/4/paragraphs/2","offset":141,"length":14},"authors":[{"last":"Melamed"}],"year":"2003","references":["/references/6"]},{"style":0,"text":"Rambow and Satta, 1999","origin":{"pointer":"/sections/4/paragraphs/2","offset":1231,"length":22},"authors":[{"last":"Rambow"},{"last":"Satta"}],"year":"1999","references":["/references/9"]},{"style":0,"text":"Bertsch and Nederhof (2001)","origin":{"pointer":"/sections/4/paragraphs/2","offset":1347,"length":27},"authors":[{"last":"Bertsch"},{"last":"Nederhof"}],"year":"2001","references":["/references/2"]},{"style":0,"text":"Rambow and Satta (1996)","origin":{"pointer":"/sections/4/paragraphs/3","offset":259,"length":23},"authors":[{"last":"Rambow"},{"last":"Satta"}],"year":"1996","references":["/references/8"]},{"style":0,"text":"Younger, 1967","origin":{"pointer":"/sections/4/paragraphs/3","offset":495,"length":13},"authors":[{"last":"Younger"}],"year":"1967","references":["/references/14"]},{"style":0,"text":"Melamed, 2004","origin":{"pointer":"/sections/4/paragraphs/3","offset":510,"length":13},"authors":[{"last":"Melamed"}],"year":"2004","references":["/references/7"]},{"style":0,"text":"Melamed (2003)","origin":{"pointer":"/sections/5/paragraphs/49","offset":16,"length":14},"authors":[{"last":"Melamed"}],"year":"2003","references":["/references/6"]},{"style":0,"text":"Dras and Bleam, 2000","origin":{"pointer":"/sections/5/paragraphs/49","offset":249,"length":20},"authors":[{"last":"Dras"},{"last":"Bleam"}],"year":"2000","references":["/references/3"]},{"style":0,"text":"Becker et al. (1991)","origin":{"pointer":"/sections/5/paragraphs/61","offset":90,"length":20},"authors":[{"last":"Becker"},{"last":"al."}],"year":"1991","references":["/references/1"]},{"style":0,"text":"Rambow (1995)","origin":{"pointer":"/sections/5/paragraphs/97","offset":131,"length":13},"authors":[{"last":"Rambow"}],"year":"1995","references":["/references/10"]},{"style":0,"text":"Rambow and Satta (1999)","origin":{"pointer":"/sections/7/paragraphs/0","offset":169,"length":23},"authors":[{"last":"Rambow"},{"last":"Satta"}],"year":"1999","references":["/references/9"]},{"style":0,"text":"Melamed et al. (2004)","origin":{"pointer":"/sections/7/paragraphs/7","offset":22,"length":21},"authors":[{"last":"Melamed"},{"last":"al."}],"year":"2004","references":["/references/5"]},{"style":0,"text":"Rambow and Satta, 1996","origin":{"pointer":"/sections/8/paragraphs/0","offset":128,"length":22},"authors":[{"last":"Rambow"},{"last":"Satta"}],"year":"1996","references":["/references/8"]},{"style":0,"text":"Weir, 1988","origin":{"pointer":"/sections/8/paragraphs/213","offset":35,"length":10},"authors":[{"last":"Weir"}],"year":"1988","references":["/references/12"]},{"style":0,"text":"Hopcroft et al. (2001)","origin":{"pointer":"/sections/9/paragraphs/11","offset":135,"length":22},"authors":[{"last":"Hopcroft"},{"last":"al."}],"year":"2001","references":["/references/4"]},{"style":0,"text":"Rambow and Satta (1999)","origin":{"pointer":"/sections/9/paragraphs/27","offset":10,"length":23},"authors":[{"last":"Rambow"},{"last":"Satta"}],"year":"1999","references":["/references/9"]},{"style":0,"text":"Wu (1997)","origin":{"pointer":"/sections/9/paragraphs/135","offset":89,"length":9},"authors":[{"last":"Wu"}],"year":"1997","references":["/references/13"]},{"style":0,"text":"Melamed (2003)","origin":{"pointer":"/sections/9/paragraphs/135","offset":103,"length":14},"authors":[{"last":"Melamed"}],"year":"2003","references":["/references/6"]},{"style":0,"text":"Melamed, 2004","origin":{"pointer":"/sections/9/paragraphs/137","offset":18,"length":13},"authors":[{"last":"Melamed"}],"year":"2004","references":["/references/7"]},{"style":0,"text":"Melamed et al. (2004)","origin":{"pointer":"/sections/9/paragraphs/195","offset":0,"length":21},"authors":[{"last":"Melamed"},{"last":"al."}],"year":"2004","references":["/references/5"]}]}
