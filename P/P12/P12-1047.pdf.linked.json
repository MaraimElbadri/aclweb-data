{"sections":[{"title":"","paragraphs":["Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics, pages 449–458, Jeju, Republic of Korea, 8-14 July 2012. c⃝2012 Association for Computational Linguistics"]},{"title":"String Re-writing Kernel Fan Bu","paragraphs":["1"]},{"title":", Hang Li","paragraphs":["2"]},{"title":"and Xiaoyan Zhu","paragraphs":["3 1,3"]},{"title":"State Key Laboratory of Intelligent Technology and Systems","paragraphs":["1,3"]},{"title":"Tsinghua National Laboratory for Information Sci. and Tech.","paragraphs":["1,3"]},{"title":"Department of Computer Sci. and Tech., Tsinghua University","paragraphs":["2"]},{"title":"Microsoft Research Asia, No. 5 Danling Street, Beijing 100080,China","paragraphs":["1"]},{"title":"bufan0000@gmail.com","paragraphs":["2"]},{"title":"hangli@microsoft.com","paragraphs":["3"]},{"title":"zxy-dcs@tsinghua.edu.cn Abstract","paragraphs":["Learning for sentence re-writing is a fundamental task in natural language processing and information retrieval. In this paper, we propose a new class of kernel functions, referred to as string re-writing kernel, to address the problem. A string re-writing kernel measures the similarity between two pairs of strings, each pair representing re-writing of a string. It can capture the lexical and structural similarity between two pairs of sentences without the need of constructing syntactic trees. We further propose an instance of string re-writing kernel which can be computed efficiently. Experimental results on benchmark datasets show that our method can achieve better results than state-of-the-art methods on two sentence re-writing learning tasks: paraphrase identification and recognizing textual entailment."]},{"title":"1 Introduction","paragraphs":["Learning for sentence re-writing is a fundamental task in natural language processing and information retrieval, which includes paraphrasing, textual entailment and transformation between query and document title in search.","The key question here is how to represent the re-writing of sentences. In previous research on sentence re-writing learning such as paraphrase identification and recognizing textual entailment, most representations are based on the lexicons (Zhang and Patrick, 2005; Lintean and Rus, 2011; de Marneffe et al., 2006) or the syntactic trees (Das and Smith, wrote . Shakespeare wrote Hamlet.","* was written by . Hamlet was written by Shakespeare. (B)"]},{"title":"** * *","paragraphs":["(A) Figure 1: Example of re-writing. (A) is a re-writing rule and (B) is a re-writing of sentence. 2009; Heilman and Smith, 2010) of the sentence pairs.","In (Lin and Pantel, 2001; Barzilay and Lee, 2003), re-writing rules serve as underlying representations for paraphrase generation/discovery. Motivated by the work, we represent re-writing of sentences by all possible re-writing rules that can be applied into it. For example, in Fig. 1, (A) is one re-writing rule that can be applied into the sentence re-writing (B). Specifically, we propose a new class of kernel functions (Schölkopf and Smola, 2002), called string re-writing kernel (SRK), which defines the similarity between two re-writings (pairs) of strings as the inner product between them in the feature space in-duced by all the re-writing rules. SRK is different from existing kernels in that it is for re-writing and defined ontwo pairs of strings. SRK can capture the lexical and structural similarity between re-writings of sentences and does not need to parse the sentences and create the syntactic trees of them.","One challenge for using SRK lies in the high computational cost of straightforwardly computing the kernel, because it involves two re-writings of strings (i.e., four strings) and a large number of re-writing rules. We are able to develop an instance of SRK, referred to as kb-SRK, which directly computes the number of common rewriting rules without explic-449 itly calculating the inner product between feature vectors, and thus drastically reduce the time complexity.","Experimental results on benchmark datasets show that SRK achieves better results than the state-of-the-art methods in paraphrase identification and recognizing textual entailment. Note that SRK is very flexible to the formulations of sentences. For example, informally written sentences such as long queries in search can also be effectively handled."]},{"title":"2 Related Work","paragraphs":["The string kernel function, first proposed by Lodhi et al. (2002), measures the similarity between two strings by their shared substrings. Leslie et al. (2002) proposed the k-spectrum kernel which represents strings by their contiguous substrings of length k. Leslie et al. (2004) further proposed a number of string kernels including the wildcard kernel to facilitate inexact matching between the strings. The string kernels defined on two pairs of objects (including strings) were also developed, which decompose the similarity into product of similarities between individual objects using tensor product (Basilico and Hofmann, 2004; Ben-Hur and Noble, 2005) or Cartesian product (Kashima et al., 2009).","The task of paraphrasing usually consists of paraphrase pattern generation and paraphrase identification. Paraphrase pattern generation is to automatically extract semantically equivalent patterns (Lin and Pantel, 2001; Bhagat and Ravichandran, 2008) or sentences (Barzilay and Lee, 2003). Paraphrase identification is to identify whether two given sentences are a paraphrase of each other. The methods proposed so far formalized the problem as classification and used various types of features such as bag-of-words feature, edit distance (Zhang and Patrick, 2005), dissimilarity kernel (Lintean and Rus, 2011) predicate-argument structure (Qiu et al., 2006), and tree edit model (which is based on a tree kernel) (Heilman and Smith, 2010) in the classification task. Among the most successful methods, Wan et al. (2006) enriched the feature set by the BLEU metric and dependency relations. Das and Smith (2009) used the quasi-synchronous grammar formalism to incorporate features from WordNet, named entity recognizer, POS tagger, and dependency labels from aligned trees.","The task of recognizing textual entailment is to decide whether the hypothesis sentence can be entailed by the premise sentence (Giampiccolo et al., 2007). In recognizing textual entailment, de Marneffe et al. (2006) classified sentences pairs on the basis of word alignments. MacCartney and Manning (2008) used an inference procedure based on natural logic and combined it with the methods by de Marneffe et al. (2006). Harmeling (2007) and Heilman and Smith (2010) classified sequence pairs based on transformation on syntactic trees. Zanzotto et al. (2007) used a kernel method on syntactic tree pairs (Moschitti and Zanzotto, 2007)."]},{"title":"3 Kernel Approach to Sentence Re-Writing Learning","paragraphs":["We formalize sentence re-writing learning as a kernel method. Following the literature of string kernel, we use the terms “string” and “character” instead of “sentence” and “word”.","Suppose that we are given training data consisting of re-writings of strings and their responses","((s1,t1), y1), ..., ((sn,tn), yn) ∈ (Σ∗","× Σ∗",") × Y where Σ denotes the character set, Σ∗","= ⋃∞","i=0 Σi","denotes the string set, which is the Kleene closure of set Σ, Y denotes the set of responses, and n is the number of instances. (si,ti) is a re-writing consisting of the source string si and the target string ti. yi is the response which can be a category, ordinal number, or real number. In this paper, for simplicity we assume that Y = {±1} (e.g. paraphrase/non-paraphrase). Given a new string re-writing (s,t) ∈ Σ∗","× Σ∗",", our goal is to predict its response y. That is, the training data consists of binary classes of string re-writings, and the prediction is made for the new re-writing based on learning from the training data.","We take the kernel approach to address the learning task. The kernel on re-writings of strings is defined as","K : (Σ∗","× Σ∗ ) × (Σ∗","× Σ∗",") → R","satisfying for all (si,ti), (s j,t j) ∈ Σ∗ × Σ∗",", K((si,ti), (s j,t j)) = ⟨Φ(si,ti), Φ(s j,t j)⟩ where Φ maps each re-writing (pair) of strings into a high dimensional Hilbert space H , referred to as 450 feature space. By the representer theorem (Kimeldorf and Wahba, 1971; Schölkopf and Smola, 2002), it can be shown that the response y of a new string re-writing (s,t) can always be represented as y = sign( n"]},{"title":"∑","paragraphs":["i=1 αiyiK((si,ti), (s,t))) where αi ≥ 0, (i = 1, · · · , n) are parameters. That is, it is determined by a linear combination of the similarities between the new instance and the instances in training set. It is also known that by employing a learning model such as SVM (Vapnik, 2000), such a linear combination can be automatically learned by solving a quadratic optimization problem. The question then becomes how to design the kernel function for the task."]},{"title":"4 String Re-writing Kernel","paragraphs":["Let Σ be the set of characters and Σ∗","be the set of strings. Let wildcard domain D ⊆ Σ∗","be the set of strings which can be replaced by wildcards.","The string re-writing kernel measures the similarity between two string re-writings through the re-writing rules that can be applied into them. For-mally, given re-writing rule set R and wildcard domain D, the string re-writing kernel (SRK) is defined as K((s1,t1), (s2,t2)) = ⟨Φ(s1,t1), Φ(s2,t2)⟩ (1) where Φ(s,t) = (φr(s,t))r∈R and","φr(s,t) = nλ i (2) where n is the number of contiguous substring pairs of (s,t) that re-writing rule r matches, i is the number of wildcards in r, and λ ∈ (0, 1] is a factor punishing each occurrence of wildcard.","A re-writing rule is defined as a triple r = (βs, βt , τ) where βs,βt ∈ (Σ ∪ {∗})∗","denote source and target string patterns and τ ⊆ ind∗(βs)×ind∗(βt ) denotes the alignments between the wildcards in the two string patterns. Here ind∗(β ) denotes the set of indexes of wildcards in β .","We say that a re-writing rule (βs, βt , τ) matches a string pair (s,t), if and only if string patterns βs and βt can be changed into s and t respectively by substituting each wildcard in the string patterns with an element in the strings, where the elements are defined in the wildcard domain D and the wildcards βs[i] and βt [ j] are substituted by the same elements, when there is an alignment (i, j) ∈ τ.","For example, the re-writing rule in Fig. 1 (A) can be formally written as r = (β s, β t, τ) where β s = (∗, wrote, ∗), β t = (∗, was, written, by, ∗) and τ = {(1, 5), (3, 1)}. It matches with the string pair in Fig. 1 (B).","String re-writing kernel is a class of kernels which depends on re-writing rule set R and wildcard domain D. Here we provide some examples. Obviously, the effectiveness and efficiency of SRK de-pend on the choice of R and D. Example 1. We define the pairwise k-spectrum kernel (ps-SRK) K ps k as the re-writing rule kernel un-","der R = {(βs, βt , τ)|βs, βt ∈ Σk",", τ = /0} and any","D. It can be shown that K ps k ((s1,t1), (s2,t2)) = K spec k (s1, s2)K spec k (t1,t2) where K","spec","k (x, y) is equiv-","alent to the k-spectrum kernel proposed by Leslie et","al. (2002). Example 2. The pairwise k-wildcard kernel (pw-SRK) K pw k is defined as the re-writing rule kernel","under R = {(βs, βt , τ)|βs, βt ∈ (Σ ∪{∗})k",", τ = /0} and","D = Σ. It can be shown that K pw k ((s1,t1), (s2,t2)) = Kwc (k,k)(s1, s2)Kwc","(k,k)(t1,t2) where Kwc","(k,k)(x, y) is a special case (m=k) of the (k,m)-wildcard kernel proposed by Leslie et al. (2004).","Both kernels shown above are represented as the product of two kernels defined separately on strings s1, s2 and t1,t2, and that is to say that they do not consider the alignment relations between the strings."]},{"title":"5 K-gram Bijective String Re-writing Kernel","paragraphs":["Next we propose another instance of string re-writing kernel, called the k-gram bijective string re-writing kernel (kb-SRK). As will be seen, kb-SRK can be computed efficiently, although it is defined on two pairs of strings and is not decomposed (note that ps-SRK and pw-SRK are decomposed). 5.1 Definition The kb-SRK has the following properties: (1) A wildcard can only substitute a single character, denoted as “?”. (2) The two string patterns in a re-writing rule are of length k. (3) The alignment relation in a re-writing rule is bijective, i.e., there is a one-to-one mapping between the wildcards in 451 the string patterns. Formally, the k-gram bijective string re-writing kernel Kk is defined as a string re-writing kernel under the re-writing rule set R = {(βs, βt , τ)|βs, βt ∈ (Σ ∪ {?})k",", τ is bijective} and the wildcard domain D = Σ.","Since each re-writing rule contains two string patterns of length k and each wildcard can only substitute one character, a re-writing rule can only match k-gram pairs in (s,t). We can rewrite Eq. (2) as φr(s,t) ="]},{"title":"∑","paragraphs":["αs∈k-grams(s)"]},{"title":"∑","paragraphs":["αt∈k-grams(t) φ̄r(αs, αt ) (3) where φ̄r(αs, αt ) = λ i","if r (with i wildcards) matches (αs, αt ), otherwise φ̄r(αs, αt ) = 0. For ease of computation, we re-write kb-SRK as Kk((s1,t1), (s2,t2)) ="]},{"title":"∑","paragraphs":["αs 1 ∈ k-grams(s","1) αt 1 ∈ k-grams(t","1)"]},{"title":"∑","paragraphs":["αs 2 ∈ k-grams(s","2) αt 2 ∈ k-grams(t","2) K̄k((αs1, αt1), (αs2, αt2)) (4) where K̄k ="]},{"title":"∑","paragraphs":["r∈R φ̄r(αs1, αt1) φ̄r(αs2, αt2) (5) 5.2 Algorithm for Computing Kernel A straightforward computation of kb-SRK would be intractable. The computation of Kk in Eq. (4) needs computations of K̄k conducted O((n − k + 1)4",") times, where n denotes the maximum length of strings. Furthermore, the computation of K̄k in Eq. (5) needs to perform matching of all the re-writing rules with the two k-gram pairs (αs1, αt1), (αs2, αt2), which has time complexity O(k!).","In this section, we will introduce an efficient algorithm, which can compute K̄k and Kk with the time complexities of O(k) and O(kn2","), respectively. The latter is verified empirically. 5.2.1 Transformation of Problem","For ease of manipulation, our method transforms the computation of kernel on k-grams into the computation on a new data structure called lists of doubles. We first explain how to make the transformation.","Suppose that α1, α2 ∈ Σk","are k-grams, we use α1[i] and α2[i] to represent the i-th characters of them. We call a pair of characters a double. Thus Σ × Σ denotes the set of doubles and αD","s , αD","t ∈ (Σ ×"]},{"title":"α","paragraphs":["s1"]},{"title":"= abbccbb ; α","paragraphs":["s2"]},{"title":"= abcccdd; α","paragraphs":["t1"]},{"title":"= cbcbbcb ; α","paragraphs":["t2"]},{"title":"= cbccdcd;","paragraphs":["Figure 2: Example of two k-gram pairs. αsD = (a, a), (b, b), (b, c), (c, c), (c, c), (b, d), (b, d) αtD = (c, c), (b, b), (c, c), (b, c), (b, d), (c, c), (b, d) Figure 3: Example of the pair of double lists combined from the two k-gram pairs in Fig. 2. Non-identical doubles are in bold. Σ)k","denote lists of doubles. The following operation combines two k-grams into a list of doubles. α1 ⊗ α2 = ((α1[1], α2[1]), · · · , (α1[k], α2[k])). We denotes α1 ⊗ α2[i] as the i-th element of the list. Fig. 3 shows example lists of doubles combined from k-grams.","We introduce the set of identical doubles I = {(c, c)|c ∈ Σ} and the set of non-identical doubles N = {(c, c′",")|c, c′","∈ Σ and c ̸= c′","}. Obviously, I ⋃ N = Σ × Σ and I ⋂","N = /0.","We define the set of re-writing rules for double","lists RD","= {rD","= (β D","s , β D","t , τ)|β D","s , β D","t ∈ (I ∪ {?})k",", τ","is a bijective alignment} where β D","s and β D","t are lists","of identical doubles including wildcards and with","length k. We say rule rD","matches a pair of double","lists (αD","s , αD","t ) iff. β D","s , β D","t can be changed into αD","s and αD","t by substituting each wildcard pair to a double in Σ × Σ , and the double substituting the wildcard pair β D","s [i] and β D","t [ j] must be an identical double when there is an alignment (i, j) ∈ τ. The rule set defined here and the rule set in Sec. 4 only differ on the elements where re-writing occurs. Fig. 4 (B) shows an example of re-writing rule for double lists. The pair of double lists in Fig. 3 can match with the re-writing rule. 5.2.2 Computing K̄k","We consider how to compute K̄k by extending the computation from k-grams to double lists.","The following lemma shows that computing the weighted sum of re-writing rules matching k-gram pairs (αs1, αt1) and (αs2, αt2) is equivalent to computing the weighted sum of re-writing rules for double lists matching (αs1 ⊗ αs2, αt1 ⊗ αt2). 452 a b *1 c a b ? c c ? ? (a,a) (b,b) ? (c,c) (c,c) ? ?  c b c ? ? c ? (c,c) (b,b) (c,c) ? ? (c,c) ?","(A) (B) Figure 4: For re-writing rule (A) matching both k-gram pairs shown in Fig. 2, there is a corresponding re-writing rule for double lists (B) matching the pair of double lists shown in Fig. 3.","#Σ×Σ(αsD",") = {(a, a): 1, (b, b): 1, (b, c): 1, (b, d): 2, (c, c): 2}","#Σ×Σ(αtD",") = {(a, a): 0, (b, b): 1, (b, c): 1, (b, d): 2, (c, c): 3} Figure 5: Example of #Σ×Σ(·) for the two double lists shown in Fig. 3. Doubles not appearing in both αD","s and αD t are not shown. Lemma 1. For any two k-gram pairs (αs1, αt1) and (αs2, αt2), there exists a one-to-one mapping from the set of re-writing rules matching them to the set of re-writing rules matching the corresponding double lists (αs1 ⊗ αs2, αt1 ⊗ αt2).","The re-writing rule in Fig. 4 (A) matches the k-gram pairs in Fig. 2. Equivalently, the re-writing rule for double lists in Fig. 4 (B) matches the pair of double lists in Fig. 3. By lemma 1 and Eq. 5, we have K̄k ="]},{"title":"∑","paragraphs":["rD ∈RD φ̄rD(αs1 ⊗ αs2, αt1 ⊗ αt2) (6)","where φ̄rD(αD","s , αD t ) = λ 2i","if the rewriting rule for","double lists rD with i wildcards matches (αD","s , αD","t ), otherwise φ̄rD(αD","s , αD","t ) = 0. To get K̄k, we just need to compute the weighted sum of re-writing rules for double lists matching (αs1 ⊗ αs2, αt1 ⊗ αt2). Thus, we can work on the “combined” pair of double lists instead of two pairs of k-grams.","Instead of enumerating all possible re-writing rules and checking whether they can match the given pair of double lists, we only calculate the number of possibilities of “generating” from the pair of double lists to the re-writing rules matching it, which can be carried out efficiently. We say that a re-writing rule of double lists can be generated from a pair of double lists (αD","s , αD","t ), if they match with each other. From the definition of RD",", in each generation, the identical doubles in αD","s and αD","t can be either or not substituted by an aligned wildcard pair in the re-writing Algorithm 1: Computing K̄k Input: k-gram pair (αs1, αt1) and (αs2, αt2) Output: K̄k((αs 1, αt1), (αs2, αt2))","1 Set (αD","s , αD","t ) = (αs1 ⊗ αs2, αt1 ⊗ αt2) ;","2 Compute #Σ×Σ(αD","s ) and #Σ×Σ(αD","t );","3 result=1;","4 for each e ∈ Σ × Σ satisfies","#e(αD","s ) + #e(αD","t ) ̸= 0 do","5 ge = 0, ne = min{#e(αD","s ), #e(αD","t )} ; 6 for 0 ≤ i ≤ ne do 7 ge = ge + a (e) i λ 2i","; 8 result = result ∗ g; 9 return result; rule, and all the non-identical doubles in αD","s and αD","t must be substituted by aligned wildcard pairs. From this observation and Eq. 6, K̄k only depends on the number of times each double occurs in the double lists.","Let e be a double. We denote #e(αD",") as the number of times e occurs in the list of doubles αD",". Also, for a set of doubles S ⊆ Σ × Σ, we denote #S(αD",") as a vector in which each element represents #e(αD",") of each double e ∈ S. We can find a function g such that K̄k = g(#Σ×Σ(αs1 ⊗ αs2), #Σ×Σ(αt1 ⊗ αt2)) (7)","Alg. 1 shows how to compute K̄k. #Σ×Σ(.) is computed from the two pairs of k-grams in line 1-2. The final score is made through the iterative calculation on the two lists (lines 4-8).","The key of Alg. 1 is the calculation of ge based on a(e) i (line 7). Here we use a (e) i to denote the number","of possibilities for which i pairs of aligned wildcards","can be generated from e in both αD","s and αD","t . a (e) i can","be computed as follows.","(1) If e ∈ N and #e(αD s ) ̸= #e(αD","t ), then a(e)","i = 0","for any i.","(2) If e ∈ N and #e(αD","s ) = #e(αD","t ) = j, then a (e) j = j! and a (e) i = 0 for any i ̸= j.","(3) If e ∈ I, then a(e) i =","(#e(αD s ) i",")(#e(αD t ) i",")","i!.","We next explain the rationale behind the above","computations. In (1), since #e(αD s ) ̸= #e(αD","t ), it is","impossible to generate a re-writing rule in which all 453 the occurrences of non-identical double e are substituted by pairs of aligned wildcards. In (2), j pairs of aligned wildcards can be generated from all the occurrences of non-identical double e in both αD","s and αD t . The number of combinations thus is j!. In (3), a pair of aligned wildcards can either be generated or not from a pair of identical doubles in αD","s and","αD t . We can select i occurrences of identical double","e from αD","s , i occurrences from αD","t , and generate all","possible aligned wildcards from them. In the loop of lines 4-8, we only need to con-","sider a(e)","i for 0 ≤ i ≤ min{#e(αD","s ), #e(αD","t )}, because a (e) i = 0 for the rest of i. To sum up, Eq. 7 can be computed as below, which is exactly the computation at lines 3-8.","g(#Σ×Σ(αD s ), #Σ×Σ(αD","t )) ="]},{"title":"∏","paragraphs":["e∈Σ×Σ ( ne"]},{"title":"∑","paragraphs":["i=0 a(e) i λ 2i",") (8)","For the k-gram pairs in Fig. 2, we first create","lists of doubles in Fig. 3 and compute #Σ×Σ(·) for","them (lines 1-2 of Alg. 1), as shown in Fig. 5. We","next compute Kk from #Σ×Σ(αD","s ) and #Σ×Σ(αD","t ) in","Fig. 5 (lines 3-8 of Alg. 1) and obtain Kk = (1)(1 +","λ 2",")(λ 2 )(2λ 4",")(1 + 6λ 2","+ 6λ 4",") = 12λ 12","+ 24λ 10","+","14λ 8 + 2λ 6",". 5.2.3 Computing Kk","Algorithm 2 shows how to compute Kk. It prepares two maps ms and mt and two vectors of counters cs and ct . In ms and mt , each key #N(.) maps a set of values #Σ×Σ(.). Counters cs and ct count the frequency of each #Σ×Σ(.). Recall that #N(αs1 ⊗ αs2) denotes a vector whose element is #e(αs1 ⊗ αs2) for e ∈ N. #Σ×Σ(αs1 ⊗ αs2) denotes a vector whose element is #e(αs1 ⊗ αs2) where e is any possible double.","One can easily verify the output of the algorithm is exactly the value of Kk. First, K̄k((αs","1, αt1), (αs2, αt2)) = 0 if #N(αs1 ⊗ αs2) ̸= #N(αt1 ⊗ αt2). Therefore, we only need to consider those αs1 ⊗ αs2 and αt1 ⊗ αt2 which have the same key (lines 10-13). We group the k-gram pairs by their key in lines 2-5 and lines 6-9.","Moreover, the following relation holds","K̄k((αs1, αt1), (αs2, αt2)) = K̄k((α′ s1, α ′ t1), (α ′ s2, α ′ t2)) if #Σ×Σ(αs1 ⊗ αs2) = #Σ×Σ(α ′ s1 ⊗ α ′ s2) and #Σ×Σ(αt1 ⊗ αt2) = #Σ×Σ(α ′ t1 ⊗ α","′","t2), where α′","s1, α′","s2, α′","t1, α′","t2 are Algorithm 2: Computing Kk Input: string pair (s1,t1) and (s2,t2), window","size k Output: Kk((s1,t1), (s2,t2)) 1 Initialize two maps ms and mt and two counters cs and ct ; 2 for each k-gram αs1 in s1 do 3 for each k-gram αs2 in s2 do 4 Update ms with key-value pair","(#N(αs1 ⊗ αs2), #Σ×Σ(αs1 ⊗ αs2)); 5 cs[#Σ×Σ(αs1 ⊗ αs2)] + + ; 6 for each k-gram αt1 in t1 do 7 for each k-gram αt2 in t2 do 8 Update mt with key-value pair","(#N(αt1 ⊗ αt2), #Σ×Σ(αt1 ⊗ αt2)); 9 ct [#Σ×Σ(αt1 ⊗ αt2)] + + ; 10 for each key ∈ ms.keys ∩ mt .keys do 11 for each vs ∈ ms[key] do 12 for each vt ∈ mt [key] do 13 result+= cs[vs]ct [vt ]g(vs, vt ) ; 14 return result; other k-grams. Therefore, we only need to take #Σ×Σ(αs1 ⊗ αs2) and #Σ×Σ(αt1 ⊗ αt2) as the value under each key and count its frequency. That is to say, #Σ×Σ provides sufficient statistics for computing K̄k.","The quantity g(vs, vt ) in line 13 is computed by Alg. 1 (lines 3-8). 5.3 Time Complexity The time complexities of Alg. 1 and Alg. 2 are shown below.","For Alg. 1, lines 1-2 can be executed in O(k). The time for executing line 7 is less than #e(αD","s ) + #e(αD","t ) + 1 for each e satisfying","#e(αD","s ) ̸= 0 or #e(αD","t ) ̸= 0 . Since ∑e∈Σ×Σ #e(αD","s ) = ∑e∈Σ×Σ #e(αD","t ) = k, the time for executing lines 3-8 is less than 4k, which results in the O(k) time complexity of Alg. 1.","For Alg. 2, we denote n = max{|s1|, |s2|, |t1|, |t2|}. It is easy to see that if the maps and counters in the algorithm are implemented by hash maps, the time complexities of lines 2-5 and lines 6-9 are O(kn2","). However, analyzing the time complexity of lines 10-454 a b *1 c 00.511.522.5 1 2 3 4 5 6 7 8 C /n avg 2  window size K Worst Avg. Figure 6: Relation between ratio C/n2","avg and window size k when running Alg. 2 on MSR Paraphrases Corpus. 13 is quite difficult.","Lemma 2 and Theorem 1 provide an upper bound of the number of times computing g(vs, vt ) in line 13, denoted as C. Lemma 2. For αs1 ∈k-grams(s1) and αs2, α","′","s2 ∈k-","grams(s2), we have #Σ×Σ(αs1 ⊗ αs2) =","#Σ×Σ(αs1 ⊗ α ′ s2) if #N(αs1 ⊗ αs2) = #N(αs1 ⊗ α ′ s2).","Theorem 1. C is O(n3 ).","By Lemma 2, each ms[key] contains at most n − k + 1 elements. Together with the fact that ∑key ms[key] = (n − k + 1)2",", Theorem 1 is proved. It can be also proved that C is O(n2",") when k = 1.","Empirical study shows that O(n3",") is a loose upper bound for C. Let navg denote the average length of s1, t1, s2 and t2. Our experiment on all pairs of sentences on MSR Paraphrase (Fig. 6) shows that C is in the same order of n2","avg in the worst case and C/n2","avg decreases with increasing k in both average case and worst case, which indicates that C is O(n2",") and the overall time complexity of Alg. 2 is O(kn2",")."]},{"title":"6 Experiments","paragraphs":["We evaluated the performances of the three types of string re-writing kernels on paraphrase identification and recognizing textual entailment: pairwise k-spectrum kernel (ps-SRK), pairwise k-wildcard kernel (pw-SRK), and k-gram bijective string re-writing kernel (kb-SRK). We set λ = 1 for all kernels. The performances were measured by accuracy (e.g. percentage of correct classifications).","In both experiments, we used LIBSVM with de-fault parameters (Chang et al., 2011) as the classifier. All the sentences in the training and test sets were segmented into words by the tokenizer at OpenNLP (Baldrige et al., ). We further conducted stemming on the words with Iveonik English Stemmer (http://www.iveonik.com/ ). We normalized each kernel by K̃(x, y) = K(x,y)","√ K(x,x)K(y,y) and then tried them under different window sizes k. We also tried to combine the kernels with two lexical features “unigram precision and recall” proposed in (Wan et al., 2006), referred to as PR. For each kernel K, we tested the window size settings of K1 + ... + Kkmax (kmax ∈ {1, 2, 3, 4}) together with the combination with PR and we report the best accuracies of them in Tab 1 and Tab 2. 6.1 Paraphrase Identification The task of paraphrase identification is to examine whether two sentences have the same meaning. We trained and tested all the methods on the MSR Paraphrase Corpus (Dolan and Brockett, 2005; Quirk et al., 2004) consisting of 4,076 sentence pairs for training and 1,725 sentence pairs for testing.","The experimental results on different SRKs are shown in Table 1. It can be seen that kb-SRK outperforms ps-SRK and pw-SRK. The results by the state-of-the-art methods reported in previous work are also included in Table 1. kb-SRK outperforms the existing lexical approach (Zhang and Patrick, 2005) and kernel approach (Lintean and Rus, 2011). It also works better than the other approaches listed in the table, which use syntactic trees or dependency relations.","Fig. 7 gives detailed results of the kernels under different maximum k-gram lengths kmax with and without PR. The results of ps-SRK and pw-SRK without combining PR under different k are all below 71%, therefore they are not shown for clar-Method Acc. Zhang and Patrick (2005) 71.9 Lintean and Rus (2011) 73.6 Heilman and Smith (2010) 73.2 Qiu et al. (2006) 72.0 Wan et al. (2006) 75.6 Das and Smith (2009) 73.9 Das and Smith (2009)(PoE) 76.1 Our baseline (PR) 73.6 Our method (ps-SRK) 75.6 Our method (pw-SRK) 75.0 Our method (kb-SRK) 76.3 Table 1: Comparison with state-of-the-arts on MSRP. 455 a b *1 c 73.57474.57575.57676.5 1 2 3 4 A c c u r ac y ( % )  window size kmax kb_SRK+PR kb_SRK ps_SRK+PR pw_SRK+PR PR Figure 7: Performances of different kernels under different maximum window size kmax on MSRP. ity. By comparing the results of kb-SRK and pw-SRK we can see that the bijective property in kb-SRK is really helpful for improving the performance (note that both methods use wildcards). Furthermore, the performances of kb-SRK with and without combining PR increase dramatically with increasing kmax and reach the peaks (better than state-of-the-art) when kmax is four, which shows the power of the lexical and structural similarity captured by kb-SRK. 6.2 Recognizing Textual Entailment Recognizing textual entailment is to determine whether a sentence (sometimes a short paragraph) can entail the other sentence (Giampiccolo et al., 2007). RTE-3 is a widely used benchmark dataset. Following the common practice, we combined the development set of RTE-3 and the whole datasets of RTE-1 and RTE-2 as training data and took the test set of RTE-3 as test data. The train and test sets contain 3,767 and 800 sentence pairs.","The results are shown in Table 2. Again, kb-SRK outperforms ps-SRK and pw-SRK. As indicated in (Heilman and Smith, 2010), the top-performing RTE systems are often built with significant engi-Method Acc. Harmeling (2007) 59.5 de Marneffe et al. (2006) 60.5 M&M, (2007) (NL) 59.4 M&M, (2007) (Hybrid) 64.3 Zanzotto et al. (2007) 65.75 Heilman and Smith (2010) 62.8 Our baseline (PR) 62.0 Our method (ps-SRK) 64.6 Our method (pw-SRK) 63.8 Our method (kb-SRK) 65.1 Table 2: Comparison with state-of-the-arts on RTE-3. a b *1 c 60.561.562.563.564.565.5 1 2 3 4 A c c u r ac y ( % )  window size kmax kb_SRK+PR kb_SRK ps_SRK+PR pw_SRK+PR PR Figure 8: Performances of different kernels under different maximum window size kmax on RTE-3. neering efforts. Therefore, we only compare with the six systems which involves less engineering. kb-SRK still outperforms most of those state-of-the-art methods even if it does not exploit any other lexical semantic sources and syntactic analysis tools.","Fig. 8 shows the results of the kernels under different parameter settings. Again, the results of ps-SRK and pw-SRK without combining PR are too low to be shown (all below 55%). We can see that PR is an effective method for this dataset and the overall performances are substantially improved after combining it with the kernels. The performance of kb-SRK reaches the peak when window size becomes two."]},{"title":"7 Conclusion","paragraphs":["In this paper, we have proposed a novel class of kernel functions for sentence re-writing, called string re-writing kernel (SRK). SRK measures the lexical and structural similarity between two pairs of sentences without using syntactic trees. The approach is theoretically sound and is flexible to formulations of sentences. A specific instance of SRK, referred to as kb-SRK, has been developed which can balance the effectiveness and efficiency for sentence re-writing. Experimental results show that kb-SRK achieve better results than state-of-the-art methods on paraphrase identification and recognizing textual entailment."]},{"title":"Acknowledgments","paragraphs":["This work is supported by the National Basic Research Program (973 Program) No. 2012CB316301."]},{"title":"References","paragraphs":["Baldrige, J. , Morton, T. and Bierner G. OpenNLP. http://opennlp.sourceforge.net/. 456","Barzilay, R. and Lee, L. 2003. Learning to paraphrase: An unsupervised approach using multiple-sequence alignment. Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology, pp. 16–23.","Basilico, J. and Hofmann, T. 2004. Unifying collaborative and content-based filtering. Proceedings of the twenty-first international conference on Machine learning, pp. 9, 2004.","Ben-Hur, A. and Noble, W.S. 2005. Kernel methods for predicting protein–protein interactions. Bioinformatics, vol. 21, pp. i38–i46, Oxford Univ Press.","Bhagat, R. and Ravichandran, D. 2008. Large scale ac-quisition of paraphrases for learning surface patterns. Proceedings of ACL-08: HLT, pp. 674–682.","Chang, C. and Lin, C. 2011. LIBSVM: A library for support vector machines. ACM Transactions on Intelligent Systems and Technology vol. 2, issue 3, pp. 27:1– 27:27. Software available at http://www.csie. ntu.edu.tw/c̃jlin/libsvm","Das, D. and Smith, N.A. 2009. Paraphrase identification as probabilistic quasi-synchronous recognition. Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pp. 468–476.","de Marneffe, M., MacCartney, B., Grenager, T., Cer, D., Rafferty A. and Manning C.D. 2006. Learning to distinguish valid textual entailments. Proc. of the Second PASCAL Challenges Workshop.","Dolan, W.B. and Brockett, C. 2005. Automatically constructing a corpus of sentential paraphrases. Proc. of IWP.","Giampiccolo, D., Magnini B., Dagan I., and Dolan B., editors 2007. The third pascal recognizing textual entailment challenge. Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pp. 1–9.","Harmeling, S. 2007. An extensible probabilistic transformation-based approach to the third recognizing textual entailment challenge. Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pp. 137–142, 2007.","Heilman, M. and Smith, N.A. 2010. Tree edit models for recognizing textual entailments, paraphrases, and an-swers to questions. Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pp. 1011-1019.","Kashima, H. , Oyama, S. , Yamanishi, Y. and Tsuda, K. 2009. On pairwise kernels: An efficient alternative and generalization analysis. Advances in Knowledge Discovery and Data Mining, pp. 1030-1037, 2009, Springer.","Kimeldorf, G. and Wahba, G. 1971. Some results on Tchebycheffian spline functions. Journal of Mathematical Analysis and Applications, Vol.33, No.1, pp.82-95, Elsevier.","Lin, D. and Pantel, P. 2001. DIRT-discovery of inference rules from text. Proc. of ACM SIGKDD Conference on Knowledge Discovery and Data Mining.","Lintean, M. and Rus, V. 2011. Dissimilarity Kernels for Paraphrase Identification. Twenty-Fourth International FLAIRS Conference.","Leslie, C. , Eskin, E. and Noble, W.S. 2002. The spectrum kernel: a string kernel for SVM protein classification. Pacific symposium on biocomputing vol. 575, pp. 564-575, Hawaii, USA.","Leslie, C. and Kuang, R. 2004. Fast string kernels using inexact matching for protein sequences. The Journal of Machine Learning Research vol. 5, pp. 1435-1455.","Lodhi, H. , Saunders, C. , Shawe-Taylor, J. , Cristianini, N. and Watkins, C. 2002. Text classification using string kernels. The Journal of Machine Learning Research vol. 2, pp. 419-444.","MacCartney, B. and Manning, C.D. 2008. Modeling semantic containment and exclusion in natural language inference. Proceedings of the 22nd International Conference on Computational Linguistics, vol. 1, pp. 521-528, 2008.","Moschitti, A. and Zanzotto, F.M. 2007. Fast and Effective Kernels for Relational Learning from Texts. Proceedings of the 24th Annual International Conference on Machine Learning, Corvallis, OR, USA, 2007.","Qiu, L. and Kan, M.Y. and Chua, T.S. 2006. Paraphrase recognition via dissimilarity significance classification. Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing, pp. 18–26.","Quirk, C. , Brockett, C. and Dolan, W. 2004. Monolingual machine translation for paraphrase generation. Proceedings of EMNLP 2004, pp. 142-149, Barcelona, Spain.","Schölkopf, B. and Smola, A.J. 2002. Learning with kernels: Support vector machines, regularization, optimization, and beyond. The MIT Press, Cambridge, MA.","Vapnik, V.N. 2000. The nature of statistical learning theory. Springer Verlag.","Wan, S. , Dras, M. , Dale, R. and Paris, C. 2006. Using dependency-based features to take the “Para-farce” out of paraphrase. Proc. of the Australasian Language Technology Workshop, pp. 131–138.","Zanzotto, F.M. , Pennacchiotti, M. and Moschitti, A. 2007. Shallow semantics in fast textual entailment 457 rule learners. Proceedings of the ACL-PASCAL workshop on textual entailment and paraphrasing, pp. 72–77.","Zhang, Y. and Patrick, J. 2005. Paraphrase identification by text canonicalization. Proceedings of the Australasian Language Technology Workshop, pp. 160– 166. 458"]}],"references":[{"authors":[],"source":"Baldrige, J. , Morton, T. and Bierner G. OpenNLP. http://opennlp.sourceforge.net/. 456"},{"authors":[{"first":"R.","last":"Barzilay"},{"last":"Lee"},{"last":"L"}],"year":"2003","title":"Learning to paraphrase: An unsupervised approach using multiple-sequence alignment","source":"Barzilay, R. and Lee, L. 2003. Learning to paraphrase: An unsupervised approach using multiple-sequence alignment. Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology, pp. 16–23."},{"authors":[{"first":"J.","last":"Basilico"},{"last":"Hofmann"},{"last":"T"}],"year":"2004","title":"Unifying collaborative and content-based filtering","source":"Basilico, J. and Hofmann, T. 2004. Unifying collaborative and content-based filtering. Proceedings of the twenty-first international conference on Machine learning, pp. 9, 2004."},{"authors":[{"first":"A.","last":"Ben-Hur"},{"first":"W.","last":"Noble"},{"last":"S"}],"year":"2005","title":"Kernel methods for predicting protein–protein interactions","source":"Ben-Hur, A. and Noble, W.S. 2005. Kernel methods for predicting protein–protein interactions. Bioinformatics, vol. 21, pp. i38–i46, Oxford Univ Press."},{"authors":[{"first":"R.","last":"Bhagat"},{"last":"Ravichandran"},{"last":"D"}],"year":"2008","title":"Large scale ac-quisition of paraphrases for learning surface patterns","source":"Bhagat, R. and Ravichandran, D. 2008. Large scale ac-quisition of paraphrases for learning surface patterns. Proceedings of ACL-08: HLT, pp. 674–682."},{"authors":[{"first":"C.","last":"Chang"},{"last":"Lin"},{"last":"C"}],"year":"2011","title":"LIBSVM: A library for support vector machines","source":"Chang, C. and Lin, C. 2011. LIBSVM: A library for support vector machines. ACM Transactions on Intelligent Systems and Technology vol. 2, issue 3, pp. 27:1– 27:27. Software available at http://www.csie. ntu.edu.tw/c̃jlin/libsvm"},{"authors":[{"first":"D.","last":"Das"},{"first":"N.","last":"Smith"},{"last":"A"}],"year":"2009","title":"Paraphrase identification as probabilistic quasi-synchronous recognition","source":"Das, D. and Smith, N.A. 2009. Paraphrase identification as probabilistic quasi-synchronous recognition. Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pp. 468–476."},{"authors":[{"first":"M.","last":"de Marneffe"},{"first":"B.","last":"MacCartney"},{"first":"T.","last":"Grenager"},{"first":"D.","last":"Cer"},{"first":"Rafferty","last":"A."},{"first":"Manning","middle":"C.","last":"D"}],"year":"2006","title":"Learning to distinguish valid textual entailments","source":"de Marneffe, M., MacCartney, B., Grenager, T., Cer, D., Rafferty A. and Manning C.D. 2006. Learning to distinguish valid textual entailments. Proc. of the Second PASCAL Challenges Workshop."},{"authors":[{"first":"W.","middle":"B.","last":"Dolan"},{"last":"Brockett"},{"last":"C"}],"year":"2005","title":"Automatically constructing a corpus of sentential paraphrases","source":"Dolan, W.B. and Brockett, C. 2005. Automatically constructing a corpus of sentential paraphrases. Proc. of IWP."},{"authors":[{"first":"D.","last":"Giampiccolo"},{"first":"Magnini","last":"B."},{"first":"Dagan I","last":"."},{"first":"Dolan","last":"B."},{"last":"editors"}],"year":"2007","title":"The third pascal recognizing textual entailment challenge","source":"Giampiccolo, D., Magnini B., Dagan I., and Dolan B., editors 2007. The third pascal recognizing textual entailment challenge. Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pp. 1–9."},{"authors":[{"last":"Harmeling"},{"last":"S"}],"year":"2007","title":"An extensible probabilistic transformation-based approach to the third recognizing textual entailment challenge","source":"Harmeling, S. 2007. An extensible probabilistic transformation-based approach to the third recognizing textual entailment challenge. Proceedings of the ACL-PASCAL Workshop on Textual Entailment and Paraphrasing, pp. 137–142, 2007."},{"authors":[{"first":"M.","last":"Heilman"},{"first":"N.","last":"Smith"},{"last":"A"}],"year":"2010","title":"Tree edit models for recognizing textual entailments, paraphrases, and an-swers to questions","source":"Heilman, M. and Smith, N.A. 2010. Tree edit models for recognizing textual entailments, paraphrases, and an-swers to questions. Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pp. 1011-1019."},{"authors":[{"first":"H.","last":"Kashima"},{"first":"S.","last":"Oyama"},{"first":"Y.","last":"Yamanishi"},{"last":"Tsuda"},{"last":"K"}],"year":"2009","title":"On pairwise kernels: An efficient alternative and generalization analysis","source":"Kashima, H. , Oyama, S. , Yamanishi, Y. and Tsuda, K. 2009. On pairwise kernels: An efficient alternative and generalization analysis. Advances in Knowledge Discovery and Data Mining, pp. 1030-1037, 2009, Springer."},{"authors":[{"first":"G.","last":"Kimeldorf"},{"last":"Wahba"},{"last":"G"}],"year":"1971","title":"Some results on Tchebycheffian spline functions","source":"Kimeldorf, G. and Wahba, G. 1971. Some results on Tchebycheffian spline functions. Journal of Mathematical Analysis and Applications, Vol.33, No.1, pp.82-95, Elsevier."},{"authors":[{"first":"D.","last":"Lin"},{"last":"Pantel"},{"last":"P"}],"year":"2001","title":"DIRT-discovery of inference rules from text","source":"Lin, D. and Pantel, P. 2001. DIRT-discovery of inference rules from text. Proc. of ACM SIGKDD Conference on Knowledge Discovery and Data Mining."},{"authors":[{"first":"M.","last":"Lintean"},{"last":"Rus"},{"last":"V"}],"year":"2011","title":"Dissimilarity Kernels for Paraphrase Identification","source":"Lintean, M. and Rus, V. 2011. Dissimilarity Kernels for Paraphrase Identification. Twenty-Fourth International FLAIRS Conference."},{"authors":[{"first":"C.","last":"Leslie"},{"first":"E.","last":"Eskin"},{"first":"W.","last":"Noble"},{"last":"S"}],"year":"2002","title":"The spectrum kernel: a string kernel for SVM protein classification","source":"Leslie, C. , Eskin, E. and Noble, W.S. 2002. The spectrum kernel: a string kernel for SVM protein classification. Pacific symposium on biocomputing vol. 575, pp. 564-575, Hawaii, USA."},{"authors":[{"first":"C.","last":"Leslie"},{"last":"Kuang"},{"last":"R"}],"year":"2004","title":"Fast string kernels using inexact matching for protein sequences","source":"Leslie, C. and Kuang, R. 2004. Fast string kernels using inexact matching for protein sequences. The Journal of Machine Learning Research vol. 5, pp. 1435-1455."},{"authors":[{"first":"H.","last":"Lodhi"},{"first":"C.","last":"Saunders"},{"first":"J.","last":"Shawe-Taylor"},{"first":"N.","last":"Cristianini"},{"last":"Watkins"},{"last":"C"}],"year":"2002","title":"Text classification using string kernels","source":"Lodhi, H. , Saunders, C. , Shawe-Taylor, J. , Cristianini, N. and Watkins, C. 2002. Text classification using string kernels. The Journal of Machine Learning Research vol. 2, pp. 419-444."},{"authors":[{"first":"B.","last":"MacCartney"},{"first":"C.","last":"Manning"},{"last":"D"}],"year":"2008","title":"Modeling semantic containment and exclusion in natural language inference","source":"MacCartney, B. and Manning, C.D. 2008. Modeling semantic containment and exclusion in natural language inference. Proceedings of the 22nd International Conference on Computational Linguistics, vol. 1, pp. 521-528, 2008."},{"authors":[{"first":"A.","last":"Moschitti"},{"first":"F.","last":"Zanzotto"},{"last":"M"}],"year":"2007","title":"Fast and Effective Kernels for Relational Learning from Texts","source":"Moschitti, A. and Zanzotto, F.M. 2007. Fast and Effective Kernels for Relational Learning from Texts. Proceedings of the 24th Annual International Conference on Machine Learning, Corvallis, OR, USA, 2007."},{"authors":[{"first":"L.","last":"Qiu"},{"first":"M.","middle":"Y.","last":"Kan"},{"first":"T.","last":"Chua"},{"last":"S"}],"year":"2006","title":"Paraphrase recognition via dissimilarity significance classification","source":"Qiu, L. and Kan, M.Y. and Chua, T.S. 2006. Paraphrase recognition via dissimilarity significance classification. Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing, pp. 18–26."},{"authors":[{"first":"C.","last":"Quirk"},{"first":"C.","last":"Brockett"},{"last":"Dolan"},{"last":"W"}],"year":"2004","title":"Monolingual machine translation for paraphrase generation","source":"Quirk, C. , Brockett, C. and Dolan, W. 2004. Monolingual machine translation for paraphrase generation. Proceedings of EMNLP 2004, pp. 142-149, Barcelona, Spain."},{"authors":[{"first":"B.","last":"Schölkopf"},{"first":"A.","last":"Smola"},{"last":"J"}],"year":"2002","title":"Learning with kernels: Support vector machines, regularization, optimization, and beyond","source":"Schölkopf, B. and Smola, A.J. 2002. Learning with kernels: Support vector machines, regularization, optimization, and beyond. The MIT Press, Cambridge, MA."},{"authors":[{"first":"V.","last":"Vapnik"},{"last":"N"}],"year":"2000","title":"The nature of statistical learning theory","source":"Vapnik, V.N. 2000. The nature of statistical learning theory. Springer Verlag."},{"authors":[{"first":"S.","last":"Wan"},{"first":"M.","last":"Dras"},{"first":"R.","last":"Dale"},{"last":"Paris"},{"last":"C"}],"year":"2006","title":"Using dependency-based features to take the “Para-farce” out of paraphrase","source":"Wan, S. , Dras, M. , Dale, R. and Paris, C. 2006. Using dependency-based features to take the “Para-farce” out of paraphrase. Proc. of the Australasian Language Technology Workshop, pp. 131–138."},{"authors":[{"first":"F.","middle":"M.","last":"Zanzotto"},{"first":"M.","last":"Pennacchiotti"},{"last":"Moschitti"},{"last":"A"}],"year":"2007","title":"Shallow semantics in fast textual entailment 457 rule learners","source":"Zanzotto, F.M. , Pennacchiotti, M. and Moschitti, A. 2007. Shallow semantics in fast textual entailment 457 rule learners. Proceedings of the ACL-PASCAL workshop on textual entailment and paraphrasing, pp. 72–77."},{"authors":[{"first":"Y.","last":"Zhang"},{"last":"Patrick"},{"last":"J"}],"year":"2005","title":"Paraphrase identification by text canonicalization","source":"Zhang, Y. and Patrick, J. 2005. Paraphrase identification by text canonicalization. Proceedings of the Australasian Language Technology Workshop, pp. 160– 166. 458"}],"cites":[{"style":0,"text":"Zhang and Patrick, 2005","origin":{"pointer":"/sections/11/paragraphs/1","offset":242,"length":23},"authors":[{"last":"Zhang"},{"last":"Patrick"}],"year":"2005","references":[]},{"style":0,"text":"Lintean and Rus, 2011","origin":{"pointer":"/sections/11/paragraphs/1","offset":267,"length":21},"authors":[{"last":"Lintean"},{"last":"Rus"}],"year":"2011","references":[]},{"style":0,"text":"Marneffe et al., 2006","origin":{"pointer":"/sections/11/paragraphs/1","offset":293,"length":21},"authors":[{"last":"Marneffe"},{"last":"al."}],"year":"2006","references":[]},{"style":0,"text":"Heilman and Smith, 2010","origin":{"pointer":"/sections/12/paragraphs/0","offset":105,"length":23},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]},{"style":0,"text":"Lin and Pantel, 2001","origin":{"pointer":"/sections/12/paragraphs/1","offset":4,"length":20},"authors":[{"last":"Lin"},{"last":"Pantel"}],"year":"2001","references":[]},{"style":0,"text":"Barzilay and Lee, 2003","origin":{"pointer":"/sections/12/paragraphs/1","offset":26,"length":22},"authors":[{"last":"Barzilay"},{"last":"Lee"}],"year":"2003","references":[]},{"style":0,"text":"Schölkopf and Smola, 2002","origin":{"pointer":"/sections/12/paragraphs/1","offset":426,"length":25},"authors":[{"last":"Schölkopf"},{"last":"Smola"}],"year":"2002","references":[]},{"style":0,"text":"Lodhi et al. (2002)","origin":{"pointer":"/sections/13/paragraphs/0","offset":46,"length":19},"authors":[{"last":"Lodhi"},{"last":"al."}],"year":"2002","references":["/references/18"]},{"style":0,"text":"Leslie et al. (2002)","origin":{"pointer":"/sections/13/paragraphs/0","offset":139,"length":20},"authors":[{"last":"Leslie"},{"last":"al."}],"year":"2002","references":["/references/16"]},{"style":0,"text":"Leslie et al. (2004)","origin":{"pointer":"/sections/13/paragraphs/0","offset":260,"length":20},"authors":[{"last":"Leslie"},{"last":"al."}],"year":"2004","references":["/references/17"]},{"style":0,"text":"Basilico and Hofmann, 2004","origin":{"pointer":"/sections/13/paragraphs/0","offset":608,"length":26},"authors":[{"last":"Basilico"},{"last":"Hofmann"}],"year":"2004","references":[]},{"style":0,"text":"Ben-Hur and Noble, 2005","origin":{"pointer":"/sections/13/paragraphs/0","offset":636,"length":23},"authors":[{"last":"Ben-Hur"},{"last":"Noble"}],"year":"2005","references":[]},{"style":0,"text":"Kashima et al., 2009","origin":{"pointer":"/sections/13/paragraphs/0","offset":683,"length":20},"authors":[{"last":"Kashima"},{"last":"al."}],"year":"2009","references":["/references/12"]},{"style":0,"text":"Lin and Pantel, 2001","origin":{"pointer":"/sections/13/paragraphs/1","offset":198,"length":20},"authors":[{"last":"Lin"},{"last":"Pantel"}],"year":"2001","references":[]},{"style":0,"text":"Bhagat and Ravichandran, 2008","origin":{"pointer":"/sections/13/paragraphs/1","offset":220,"length":29},"authors":[{"last":"Bhagat"},{"last":"Ravichandran"}],"year":"2008","references":[]},{"style":0,"text":"Barzilay and Lee, 2003","origin":{"pointer":"/sections/13/paragraphs/1","offset":265,"length":22},"authors":[{"last":"Barzilay"},{"last":"Lee"}],"year":"2003","references":[]},{"style":0,"text":"Zhang and Patrick, 2005","origin":{"pointer":"/sections/13/paragraphs/1","offset":540,"length":23},"authors":[{"last":"Zhang"},{"last":"Patrick"}],"year":"2005","references":[]},{"style":0,"text":"Lintean and Rus, 2011","origin":{"pointer":"/sections/13/paragraphs/1","offset":588,"length":21},"authors":[{"last":"Lintean"},{"last":"Rus"}],"year":"2011","references":[]},{"style":0,"text":"Qiu et al., 2006","origin":{"pointer":"/sections/13/paragraphs/1","offset":641,"length":16},"authors":[{"last":"Qiu"},{"last":"al."}],"year":"2006","references":["/references/21"]},{"style":0,"text":"Heilman and Smith, 2010","origin":{"pointer":"/sections/13/paragraphs/1","offset":715,"length":23},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]},{"style":0,"text":"Wan et al. (2006)","origin":{"pointer":"/sections/13/paragraphs/1","offset":803,"length":17},"authors":[{"last":"Wan"},{"last":"al."}],"year":"2006","references":["/references/25"]},{"style":0,"text":"Das and Smith (2009)","origin":{"pointer":"/sections/13/paragraphs/1","offset":891,"length":20},"authors":[{"last":"Das"},{"last":"Smith"}],"year":"2009","references":[]},{"style":0,"text":"Giampiccolo et al., 2007","origin":{"pointer":"/sections/13/paragraphs/2","offset":129,"length":24},"authors":[{"last":"Giampiccolo"},{"last":"al."}],"year":"2007","references":["/references/9"]},{"style":0,"text":"Marneffe et al. (2006)","origin":{"pointer":"/sections/13/paragraphs/2","offset":194,"length":22},"authors":[{"last":"Marneffe"},{"last":"al."}],"year":"2006","references":[]},{"style":0,"text":"MacCartney and Manning (2008)","origin":{"pointer":"/sections/13/paragraphs/2","offset":277,"length":29},"authors":[{"last":"MacCartney"},{"last":"Manning"}],"year":"2008","references":[]},{"style":0,"text":"Marneffe et al. (2006)","origin":{"pointer":"/sections/13/paragraphs/2","offset":397,"length":22},"authors":[{"last":"Marneffe"},{"last":"al."}],"year":"2006","references":[]},{"style":0,"text":"Harmeling (2007)","origin":{"pointer":"/sections/13/paragraphs/2","offset":421,"length":16},"authors":[{"last":"Harmeling"}],"year":"2007","references":[]},{"style":0,"text":"Heilman and Smith (2010)","origin":{"pointer":"/sections/13/paragraphs/2","offset":442,"length":24},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]},{"style":0,"text":"Zanzotto et al. (2007)","origin":{"pointer":"/sections/13/paragraphs/2","offset":537,"length":22},"authors":[{"last":"Zanzotto"},{"last":"al."}],"year":"2007","references":["/references/26"]},{"style":0,"text":"Moschitti and Zanzotto, 2007","origin":{"pointer":"/sections/13/paragraphs/2","offset":606,"length":28},"authors":[{"last":"Moschitti"},{"last":"Zanzotto"}],"year":"2007","references":[]},{"style":0,"text":"Kimeldorf and Wahba, 1971","origin":{"pointer":"/sections/14/paragraphs/16","offset":200,"length":25},"authors":[{"last":"Kimeldorf"},{"last":"Wahba"}],"year":"1971","references":[]},{"style":0,"text":"Schölkopf and Smola, 2002","origin":{"pointer":"/sections/14/paragraphs/16","offset":227,"length":25},"authors":[{"last":"Schölkopf"},{"last":"Smola"}],"year":"2002","references":[]},{"style":0,"text":"Vapnik, 2000","origin":{"pointer":"/sections/15/paragraphs/0","offset":271,"length":12},"authors":[{"last":"Vapnik"}],"year":"2000","references":[]},{"style":0,"text":"Leslie et al. (2004)","origin":{"pointer":"/sections/16/paragraphs/21","offset":77,"length":20},"authors":[{"last":"Leslie"},{"last":"al."}],"year":"2004","references":["/references/17"]},{"style":0,"text":"Chang et al., 2011","origin":{"pointer":"/sections/31/paragraphs/1","offset":62,"length":18},"authors":[{"last":"Chang"},{"last":"al."}],"year":"2011","references":["/references/5"]},{"style":0,"text":"Wan et al., 2006","origin":{"pointer":"/sections/31/paragraphs/2","offset":174,"length":16},"authors":[{"last":"Wan"},{"last":"al."}],"year":"2006","references":["/references/25"]},{"style":0,"text":"Dolan and Brockett, 2005","origin":{"pointer":"/sections/31/paragraphs/2","offset":603,"length":24},"authors":[{"last":"Dolan"},{"last":"Brockett"}],"year":"2005","references":[]},{"style":0,"text":"Quirk et al., 2004","origin":{"pointer":"/sections/31/paragraphs/2","offset":629,"length":18},"authors":[{"last":"Quirk"},{"last":"al."}],"year":"2004","references":["/references/22"]},{"style":0,"text":"Zhang and Patrick, 2005","origin":{"pointer":"/sections/31/paragraphs/3","offset":273,"length":23},"authors":[{"last":"Zhang"},{"last":"Patrick"}],"year":"2005","references":[]},{"style":0,"text":"Lintean and Rus, 2011","origin":{"pointer":"/sections/31/paragraphs/3","offset":319,"length":21},"authors":[{"last":"Lintean"},{"last":"Rus"}],"year":"2011","references":[]},{"style":0,"text":"Zhang and Patrick (2005)","origin":{"pointer":"/sections/31/paragraphs/4","offset":251,"length":24},"authors":[{"last":"Zhang"},{"last":"Patrick"}],"year":"2005","references":[]},{"style":0,"text":"Lintean and Rus (2011)","origin":{"pointer":"/sections/31/paragraphs/4","offset":281,"length":22},"authors":[{"last":"Lintean"},{"last":"Rus"}],"year":"2011","references":[]},{"style":0,"text":"Heilman and Smith (2010)","origin":{"pointer":"/sections/31/paragraphs/4","offset":309,"length":24},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]},{"style":0,"text":"Qiu et al. (2006)","origin":{"pointer":"/sections/31/paragraphs/4","offset":339,"length":17},"authors":[{"last":"Qiu"},{"last":"al."}],"year":"2006","references":["/references/21"]},{"style":0,"text":"Wan et al. (2006)","origin":{"pointer":"/sections/31/paragraphs/4","offset":362,"length":17},"authors":[{"last":"Wan"},{"last":"al."}],"year":"2006","references":["/references/25"]},{"style":0,"text":"Das and Smith (2009)","origin":{"pointer":"/sections/31/paragraphs/4","offset":385,"length":20},"authors":[{"last":"Das"},{"last":"Smith"}],"year":"2009","references":[]},{"style":0,"text":"Das and Smith (2009)","origin":{"pointer":"/sections/31/paragraphs/4","offset":411,"length":20},"authors":[{"last":"Das"},{"last":"Smith"}],"year":"2009","references":[]},{"style":0,"text":"Giampiccolo et al., 2007","origin":{"pointer":"/sections/31/paragraphs/4","offset":1425,"length":24},"authors":[{"last":"Giampiccolo"},{"last":"al."}],"year":"2007","references":["/references/9"]},{"style":0,"text":"Heilman and Smith, 2010","origin":{"pointer":"/sections/31/paragraphs/5","offset":96,"length":23},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]},{"style":0,"text":"Harmeling (2007)","origin":{"pointer":"/sections/31/paragraphs/5","offset":203,"length":16},"authors":[{"last":"Harmeling"}],"year":"2007","references":[]},{"style":0,"text":"Marneffe et al. (2006)","origin":{"pointer":"/sections/31/paragraphs/5","offset":228,"length":22},"authors":[{"last":"Marneffe"},{"last":"al."}],"year":"2006","references":[]},{"style":0,"text":"M&M, (2007)","origin":{"pointer":"/sections/31/paragraphs/5","offset":256,"length":11},"authors":[{"last":"M&M"}],"year":"2007","references":[]},{"style":0,"text":"M&M, (2007)","origin":{"pointer":"/sections/31/paragraphs/5","offset":278,"length":11},"authors":[{"last":"M&M"}],"year":"2007","references":[]},{"style":0,"text":"Zanzotto et al. (2007)","origin":{"pointer":"/sections/31/paragraphs/5","offset":304,"length":22},"authors":[{"last":"Zanzotto"},{"last":"al."}],"year":"2007","references":["/references/26"]},{"style":0,"text":"Heilman and Smith (2010)","origin":{"pointer":"/sections/31/paragraphs/5","offset":333,"length":24},"authors":[{"last":"Heilman"},{"last":"Smith"}],"year":"2010","references":[]}]}
