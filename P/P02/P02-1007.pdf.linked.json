{"sections":[{"title":"OT Syntax: Decidability of Generation-based Optimization  Jonas Kuhn Department of Linguistics Stanford University jonask@stanford.edu Abstract","paragraphs":["In Optimality-Theoretic Syntax, optimization with unrestricted expressive power on the side of the OT constraints is undecidable. This paper provides a proof for the decidability of optimization based on constraints expressed with reference to local subtrees (which is in the spirit of OT theory). The proof builds on Kaplan and Wedekind’s (2000) construction showing that LFG generation produces context-free languages."]},{"title":"1 Introduction","paragraphs":["Optimality-Theoretic (OT) grammar systems are an interesting alternative to classical formal grammars, as they construe the task of learning from data in a meaning-based way: a form is defined as grammatical if it is optimal (most harmonic) within a set of generation alternatives for an underlying logical form. The harmony of a candidate analysis depends on a language-specific ranking ( ",") of violable con-","straints, thus the learning task amounts to adjusting","the ranking over a given set of constraints.","(1) Candidate","is more harmonic than","iff it incurs fewer","violations of the highest-ranking constraint","in","which and","differ.","The comparison-based setup of OT learning is closely related to discriminative learning approaches in probabilistic parsing (Johnson et al., 1999; Riezler et al., 2000; Riezler et al., 2002),1","however the comparison of generation alternatives – rather than parsing alternatives – adds the possibility of system-atically learning the basic language-specific grammatical principles (which in probabilistic parsing are typically fixed a priori, using either a treebankderived or a manually written grammar for the given"," This work was supported by a postdoctoral fellowship of","the German Academic Exchange Service (DAAD). 1 This is for instance pointed out by (Johnson, 1998). language). The “base grammar” assumed as given can be highly unrestricted in the OT setup. Using a linguistically motivated set of constraints, learning proceeds with a bias for unmarked linguistic structures (cf. e.g., (Bresnan et al., 2001)).","For computational OT syntax, an interleaving of candidate generation and constraint checking has been proposed (Kuhn, 2000). But the decidability of the optimization task in OT syntax, i.e., the identificationof the optimal candidate(s) in a potentially infinitecandidate set, has not been proven yet.2"]},{"title":"2 Undecidability for unrestricted OT","paragraphs":["Assume that the candidate set is characterized by a context-free grammar (cfg)",", plus one additional candidate ‘yes’. There are two constraints (  "," ): ","is violated if the candidate is neither ‘yes’ nor a structure generated by a cfg ",";","","is vi-","olated only by ‘yes’. Now, ‘yes’ is in the language","defined by this system iff there are no structures in"," that are also in ",". But the emptiness problem for the intersection of two context-free languages is known to be undecidable, so the optimization task for unrestricted OT is undecidable too.3","However, it is not in the spirit of OT to have extremely powerful individual constraints; the explanatory power should rather arise from interaction of simple constraints."]},{"title":"3 OT-LFG","paragraphs":["Following (Bresnan, 2000; Kuhn, 2000; Kuhn, 2001), we define a restricted OT system based on Lexical-Functional Grammar (LFG) representations: c(ategory) structure/f(unctional) structure","2","Most computational OT work so far focuses on candidates and constraints expressible as regular languages/rational rela-tions, based on (Frank and Satta, 1998) (e.g., (Eisner, 1997; Karttunen, 1998; Gerdemann and van Noord, 2000)).","3","Cf. also (Johnson, 1998) for the sketch of an undecidability argument and (Kuhn, 2001, 4.2, 6.3) for further constructions. Computational Linguistics (ACL), Philadelphia, July 2002, pp. 48-55. Proceedings of the 40th Annual Meeting of the Association for pairs  like  (4),(5) ",". Each c-structure tree node is mapped to a node in the f-structure graph by the function",". The mapping is specified by f-annotations in the grammar rules (below category symbols, cf. (2)) and lexicon entries (3).4 (2) ROOT  FP    VP","FP ","NP FP  TOPIC","    COMP* OBJ     ","(NP) F   SUBJ","  F F ","FP    ","VP ","VP","(NP) V (  SUBJ)=","  =  V V  NP  OBJ    ","FP  COMP  (3) Mary NP (  PRED)=‘Mary’ (  NUM)=SG that F had F (  TNS)=PAST seen V ( ","PRED)=‘see (  SUBJ) ( ","OBJ) ’ (  ASP)=PERF thought V ( ","PRED)=‘think (  SUBJ) ( ","COMP) ’ (  TNS)=PAST laughed V ( ","PRED)=‘laugh ( ","SUBJ) ’ (  TNS)=PAST","(4) c-structure","ROOT","VP","NP V","John V FP","thought F","F FP","that NP F","Mary F VP","had V","V NP","seen Titanic","(5) f-structure          ","PRED ‘think","(","SUBJ) (","COMP)","’","TNS PAST","SUBJ PRED ‘John’ NUM SG COMP      ","PRED ‘see (","SUBJ) (","OBJ)","’","TNS PAST","ASP PERF","SUBJ PRED ‘Mary’ NUM SG","OBJ PRED ‘Titanic’ NUM SG                4 abbreviates   , i.e., the present category’s","image;  abbreviates   , i.e., the f-structure corresponding to the","present node’s mother category. The correct f-structure for a sentence is the minimal model satisfying all properly instantiated f-annotations.","In OT-LFG, the universe of possible candidates","is defined by an LFG","","(encoding inviolable","principles, like an X-bar scheme). A particular can-","didate set is the set Gen",""," ","","– i.e., the c-/f-","structure pairs in"," , which have the input  ","as their f-structure. Constraints are expressed as lo-","cal configurations in the c-/f-structure pairs. They","have one of the following implicational forms:5","(6) ","","","","","where","are descriptions of nonterminals of","","",";","   are standard LFG f-annotations of constraining","equations with  as the only f-structure metavariable.","(7)","","",""," ",""," ","   ","where ","","","","are descriptions of nonterminals","of","","","",";","","refer to the mother in a local subtree","configuration,","","","","refer to the same daughter cate-","gory;","","","    ","are regular expressions over nontermi-","nals;     are standard f-annotations as in (6). Any of the descriptions can be maximally unspecific; (6) can for example be instantiated by the OPSPEC constraint (","OP)=+","(DF",") (an operator must be the value of a discourse function, (Bresnan, 2000)) with the category information unspecified. An OT-LFG system","is thus characterized by a base grammar and a set of constraints, with a language-specific ranking relation   :"," ","  ","","","","",".","The evaluation function Eval","","","picks the most","harmonic from a set of candidates, based on the con-","straints and ranking. The language (set of analyses)6","generated by an OT system is definedas","","","  ","  ",""," ","","","","  ","","","","Eval","","Gen ","     "]},{"title":"4 LFG generation","paragraphs":["Our decidability proof for generation-based optimization builds on the result of (Kaplan and Wedekind, 2000) (K&W00) that LFG generation produces context-free languages.","5","Note that with GPSG-style category-level feature percola-tion it is possible to refer to (finitelymany) nonlocal configurations at the local tree level.","6","The string language is obtained by taking the terminal string of the c-structure part of the analyses.","(8) Given an arbitrary LFG grammar","and a cycle-free f-","structure",", a cfg  can be constructed that generates","exactly the strings to which","assigns the f-structure",". I will refer to the resulting cfg  as    ","",". K&W00 present a constructive proof, folding all f-structural contributions of lexical entries and LFG rules into the c-structural rewrite rules (which is possible since we know in advance the range of f-structural objects that can instantiate the f-structure meta-variables in the rules). I illustrate the specialization steps with grammar (2) and lexicon (3) and for generation from f-structure (5).","Initially, the generalized format of right-hand sides in LFG rules is converted to the standard context-free notation (resolving regular expressions by explicit disjunction or recursive rules). F-structure (5) contains five substructures: the root f-structure, plus the embedded f-structures under the paths SUBJ, COMP, COMP SUBJ, and COMP OBJ. Any relevant metavariable (",",",") in the grammar must end up instantiated to one of these. So for each path from the root f-structure, a distinct variable is introduced:",", subscripted with the (abbreviated and possibly empty) feature path:       "," . Rule augmentation step 1 adds to each category name a concrete f-structure to which the category corresponds. So for FP, we get FP:",", FP:",", FP:",", FP:","",", and FP:","",". The rules are multiplied out to cover all combinations of augmented categories obeying the original f-annotations.7","Step 2 adds a set of instantiated f-annotation schemes to each symbol, based on the instantiation of metavariables from step 1. One instance of the lexicon entry Mary look as follows:","(9) NP: :"," ","  PRED)=‘Mary’ ","NUM)=SG"," ","Mary","The rules are again multiplied out to cover all combinations for which the set of f-constraints on the mother is the union of all daughters’ f-constraints, plus the appropriately instantiated rule-specific annotations. So, for the VP rule based","on the categories NP:  :"," "," PRED)=‘Mary’  ","NUM)=SG"," and","V :",": "," PRED)=‘laugh’  TNS)=PAST       , we get the rule","7","VP:",""," NP:","","V",":","","is allowed, while","VP:","","NP: V",":","is excluded, since the  =  annotation","of V in the VP rule (2) enforces that  VP   ","V .","VP:"," :              SUBJ   ",""," PRED)=‘Mary’  ","NUM)=SG",""," PRED)=‘laugh’  TNS)=PAST ","               ","NP: :  ","  PRED)=‘Mary’ ","NUM)=SG"," V :",": "," PRED)=‘laugh’   TNS)=PAST     With this bottom-up construction it is ensured that each new category ROOT:",":",". . .","(corresponding to the original root symbol) contains a complete possible collection of instantiated f-constraints. To exclude analyses whose f-structure is not ","(for which we are generating strings) a new start symbol is introduced “abo ve” the original root symbol. Only for the sets of f-constraints that have  as their minimal model, rules of the form ROOT  ROOT:",":",". . .","are introduced (this also excludes inconsistent f-","constraint sets). With the cfg    ","",", standard techniques for cfg’s can be applied, e.g., if there are infinitelymany possible analyses for a given f-structure, the smallest one(s) can be produced, based on the pumping lemma for context-free languages. Grammar (2) does indeed produce infinitelymany analyses for the input f-structure (5). It overgenerates in several respects: The functional projection FP can be stacked due to recursions like the following (with the augmented FP reoccuring in the F  rules):","FP: :          "," PRED)=‘see",". . .","’  ","TNS)=PAST    SUBJ","","   PRED)=‘Mary’   OBJ","","  PRED)=‘Titanic’ ","","","         ","F",": :          "," PRED)=‘see",". . .","’  ","TNS)=PAST    SUBJ","","   PRED)=‘Mary’   OBJ","","  PRED)=‘Titanic’ ","","","         ","F",": :          "," PRED)=‘see",". . .","’  ","TNS)=PAST    SUBJ","","   PRED)=‘Mary’   OBJ","","  PRED)=‘Titanic’ ","","","          ","F:",":","FP: :          "," PRED)=‘see",". . .","’  ","TNS)=PAST    SUBJ","","   PRED)=‘Mary’   OBJ","","  PRED)=‘Titanic’ ","","","         ","F:",":","is one of the augmented categories we get","for that in (3), so ","((2),(5)) generates an arbitrary number of thats on top of any FP. A similar repeti-tion effect will arise for the auxiliary had.8","Other choices in generation arise from the freedom of generating the subject in the specifier of VP or FP and from the possibility of (unbounded) topicalization of the object (the first disjunction of the FP rule in (2)","8","The F","entries do not contribute any PRED value, which would exclude doubling due to the instantiated symbol character of PRED values (cf. K&W00, fn. 2). contains a functional-uncertainty equation):","(10) a. John thought that Titanic, Mary had seen. b. Titanic, John thought that Mary had seen."]},{"title":"5 LFG generation in OT-LFG","paragraphs":["While grammar (2) would be considered defective as a classical LFG grammar, it constitutes a reasonable example of a candidate generation grammar (","",") in OT. Here, it is the OT constraints that enforce language-specificrestrictions, so","","has to ensure that all candidates are generated in the firstplace. For instance, expletive elements as do in Who do you know will arise by passing a recursion in the cfg constructed during generation. A candidate containing such a vacuous cycle can still be-come the winner of the OT competition if the Faithfulness constraint punishing expletives is outranked by some constraint favoring an aspect of the recursive structure. So the harmony is increased by going through the recursion a certain number of times. It is for this very reason, that Who do you know is predicted to be grammatical in English.","So, in OT-LFG it is not sufficient to apply just the ","construction; I use an additional step: prior to application of ",", the LFG grammar","","is","converted to a different form    ","","","(depend-","ing on the constraint set","), which is still an LFG","grammar but has category symbols which reflect lo-","cal constraint violations. When the","  construction is applied to ","  ","","",", all “pumping” struc-","tures generated by the cfg   ","  ",""," ","  can indeed be ignored since all OT-relevant candidates are already contained in the finite set of non-recursive structures. So, finally the ranking of the constraints is taken into consideration in order to determine the harmony of the candidates in this finite subset."]},{"title":"6 The conversion     Preprocessing","paragraphs":["Like K&W00, I assume an initial conversion of the c-structure part of rules into standard context-free form, i.e., the right-hand side is a category string rather than a regular expression. This ensures that for a given local subtree, each constraint (of form (6) or (7)) can be applied only a finitenumber of times: if","is the arity of the longest right-hand side of a rule, the maximal number of local violations is","(since some constraints of type (7) can be instantiated to all daughters). Grammar conversion With the number of local violations bounded, we can encode all candidate distinctions with respect to constraint violations at the local-subtree level with finite means: The set of categories in the newly constructed LFG grammar","",""," ","","","is the finiteset","(11)","    ",": the set of categories in"," ","  ",""," ","",":","","   ","","","","","a nonterminal symbol of","","","",",","the size of the constraint set",",","   ",",","the arity of the longest rhs in rules of  ",""," The rules in ","","  ","","","are constructed in such a","way that for each rule","X",""," X",". . . X  ","","","in ","and each sequence            ,"," ","   , all rules of the form","X  : ","","  "," ","  ","","X",":","","","","    . . . X",":","","","","","","","",",","","","","","","","     are included such that    (the number of violations of constraint  incurred local to the rule) and the f-annotations","   . . ."," "," are specifiedas follows:","(12) for of form (6)        ",":","a.  "," ",";   "," ( ",")","if X ","does not match the condition",";","b.  "," ",";       ",";      (  ) if X","","matches",";","c.  "," ",";           ;   "," (  )","if X  matches both","and","",";","d.",""," "," ;       ",";      (  )","if X  matches","but not","",";","e.",""," "," ;           ;   "," (  )","if X  matches both","and",";","(13) for of form (7)   "," ",""," ","","  ","       :","a.  "," ",";   "," ( ",")","if X  does not match the condition",";","b.         "," ;","   ","","       (  ), where i.  ","  ;  ","        ","if X","does not match",", or X",". . . X","","","do not match",",","or X","","",". . . X","do not match","; ii.  ","  ;  ","       ","     ","if X","","matches both","and","","; X","matches both","and","","","; X",". . . X","  match","and","","; X","","",". . . X","match","and","","; iii.  ","  ;               ","if X","","matches both","and","","; X","matches both","and","","","; X",". . . X","  match","and","","; X","","",". . . X","match","and","","; iv.     ;               ","if X","","matches",", X","matches",", X",". . . X","","","match",",","X","","",". . . X match",", but (at least) one of them does","not match the respective description in the consequent","(","","","","   ","","); v.     ;                  ","if X","","matches both","and","; X","matches both","and","","","; X",". . . X","  match","and","","; X","","",". . . X","match","and","",".","Note that the constraint profile of the daughter categories does not play any role in the determination of constraint violations local to the subtree under consideration (only the sequences  ","","are restricted by the conditions (12) and (13)). So for each new rule type, all combinations of constraint profiles on the daughters are constructed (creating a large but finite number of rules).9","This ensures that no sentence that can be parsed (or generated) by","","is excluded from ","",""," ","","","(as stated by fact (14)):10","(14) Coverage preseveration All strings generated by an LFG grammar","are also generated by"," "," .","The original analysis can be recovered from an ","  ","","analysis by applying a projection function","Cat to all c-structure categories: Cat ","",":","   ","","",""," ","for every category in","","","","","","","(11)","9","For one rule/constraint combination several new rules can","result; e.g., if the right-hand side of a rule (X","",") matches both the","antecedent ( ) and the consequent (","",") category description","of a constraint of form (6), three clauses apply: (12b), (12c),","and (12d). So, we get two new rules with the count of 0 local","violations of the constraint and two rules with count 1, with a","difference in the f-annotations.","10","Providing all possible combinations of augmented category","symbols on the right-hand rule sides in"," ","","ensures that the","newly constructed rules can be reached from the root symbol in","a derivation. It is also guaranteed that whenever a rule ","in contributes to an analysis, at least one of the rules constructed from ","will contribute to the corresponding analysis in  ","",".","This is ensured since the subclauses in (12) and (13) cover the","full space of logical possibilities. We can overload the function name Cat with a function applying to the set of analyses produced by an LFG grammar","by defining Cat  "," ","  ","","","","","","",",","is derived from","","by","applying Cat to all category symbols",". Coverage preservation of the ","","construction holds","also for the projected c-category skeleton (cf. the ar-","gumentation in fn. 10):","(15) C-structure level coverage preservation For an LFG grammar",": Cat        Each category in ","","","","","encodes the number of local violations for all constraints. Since all constraints are locally evaluable by assumption, all constraints violated by a candidate analysis have to be incurred local to some subtree. Hence the total number of constraint violations incurred by a candidate can be computed by simply summing over all category-encoded local violation profiles:","(16) Total number of constraint violations Let Nodes ","  be the multiset of categories occurring in","the c-structure tree",", then the total number of viola-","tions of constraint","","incurred by an analysis","","","",""," ","  ","","","is","   "," ","     ","","","","","  ","","",""," Define Total       ","    ","     ","  "]},{"title":"7 Applying on     ","paragraphs":["Since ","   ","","is a standard LFG grammar, we","can apply the ","construction to it to get a cfg for a given f-structure   . The category symbols then have the form X:   ","    ","",": : , with","and"," arising from the ","construction. We can over-","load the projection function Cat again such that","Cat","",":",":",":  ","","for all augmented category sym-","bol of the new format; likewise Cat","","","for","a cfg. Since the ","","construction (strongly) preserves","the language generated, coverage preservation holds","also after the application of  to ","",""," ","","","and"," ",", respectively: (17) Cat      ","",""," ","",""," Cat   ","",""," ","",""," But since the symbols in ","","  ","","reflect local constraint violations, Cat   ","  ",""," ","  has the property that all instances of recursion in the","resulting cfg create candidates that are at most as","harmonic as their non-recursive counterparts. As-","suming a projection function CatCount","",":",":",":","","","",":",", we can state more formally:","(18) If  and","","are CatCount projections of trees produced","by the cfg     ","","","","","","","",", using exactly the","same rules, and  contains a superset of the nodes that","","","contains, then","",""," ","","","",", for all    ","","        ","from","","","","   ","","","  Total     ,","and","","","","   ","","","  Total     . This fact follows from definition of Total (16): the violation counts in the additional nodes in  ","will add to the total of constraint violations (and if none of the additional nodes contains any local constraint violation at all, the total will be the same as in ","","). Intuitively, the effect of the augmentation of the category format is that certain recursions in the pure ","construction (which one may think of as a loop) are unfolded, leading to a longer loop. The new loop is sufficiently large to make all relevant distinctions.","This result can be directly exploited in processing: if all non-recursive analyses are generated (of which there are only finitely many) it is guaranteed that a subset of the optimal candidates is among them. If the grammar does not contain any violation-free recursion, we even know that we have generated all optimal candidates.","(19) A recursion with the derivation path ","","","","is","called violation-free iff all categories dominated by the","upper occurrence of",", but not dominated by the lower","occurrence of","have the form","","","   ","","","","","with","","","         Note that if there is an applicable violation-free recursion, the set of optimal candidates is infinite; so if the constraint set is set up properly in a linguistic analysis, one would assume that violation-free recursion should not arise. (Kuhn, 2000) excludes the application of such recursions by a similar condition as offline parsability (which excludes vacuous recursions over a string in parsing), but with the ","construction, this condition is not necessary for decidability of the generation-based optimization task. The cfg produced by"," ","can be transformed further to only generate the optimal candidates according to the constraint ranking","  of the OT sys-","tem  ","    ","  ","",", eliminating all but the violation-free recursions in the grammar:","(20) Creating a cfg that produces all optimal candidates a. Define     ","      ","","","  ","","",""," contains no recursion",".      ","is finite and can be easily computed, by keeping","track of the rules already used in an analysis. b. RedefineEval","","to apply on a set of context-free analyses with augmented category symbols with counts of local constraint violations: Eval","    "," "," "," is maximally harmonic in ",", under ranking","","Using the function Total defined in (16), this function is","straightforward to compute for finitesets, i.e., in particu-","lar Eval","","","","        .","c. Augment the category format further by one index","component.11","Introduce index","","for all categories in","   ","","","","","","","","of the form X: ","","","","","",":",":",",","where ","  for      ",". Introduce a new unique in-","dex","","for each node of the form X:  ","","","","",":",":",",","where","",""," ","for some   ","","","","  occurring in the","analyses Eval ","       ","(i.e., different occurrences of","the same category are distinguished). d. Construct the cfg   ","","","","","","","","     ","","","S","","","","     ",",","where","    ","","","","","","are the indexed symbols of step c.;","S","","","","is a new start symbol; the rules    ","are (i) those rules from     ","",""," ","","","","which were used in","the analyses in Eval","  ","       ","– with the original","symbols replaced by the indexed symbols –, (ii) the","rules in       ","","","","","","",", in which the mother","category and all daughter categories are of the form","X:","","","","","","",":",": ,",""," for       (with the new index ","added), and (iii) one rule S","","","","","S",":","for each","of the indexed versions S",":","of the start symbols of","",""," ","","","  ","","",".","With the index introduced in step (20c), the origi-","nal recursion in the cfg is eliminated in all but the","violation-free cases. The grammar Cat  ","","","","","pro-","duces (the c-structure of) the set of optimal candi-","dates for the input   :12 (21) Cat ","","   ","   ","    ","Eval","","Gen  "," ","","","","",",","i.e., the set of c-structures for the optimal candidates for","input f-structure","","","according to the OT system","","","","","","","","   . 11 The projection function Cat is again overloaded to also re-","move the index on the categories. 12 Like K&W00, I make the assumption that the input f-","structure in generation is fully specified(i.e., all the candidates","have the form","","","","), but the result can be extended to allow","for the addition of a finiteamount of f-structure information in","generation. Then, the specifiedroutine is computed separately","for each possible f-structural extension and the results are com-","pared in the end."]},{"title":"8 Proof","paragraphs":["To prove fact (21) we will show that the c-structure of an arbitrary candidate analysis generated from","","with","","is contained in Cat   ","","","","iff all","other candidates are equally or less harmonic. Take an arbitrary candidate c-structure  generated from ","","with","","such that"," ","Cat","    ","",". We have to show that all other candi-","dates","  generated from "," are equally or less harmonic than  . Assume there were a","  that is more harmonic than  . Then there must be some constraint    , such that","  violates  fewer times than  does, and  is ranked higher than any other constraint in which  and"," ","differ. Constraints have to be incurred within some local subtree; so  must contain a local violation configuration that"," ","does not contain, and by the construction (12)/(13) the  -augmented analysis of  – call it      – must","make use of some violation-marked rule not used in      . Now there are three possibilities:","(i) Both      and       are free of recursion. Then the fact that       avoids the highest-ranking","constraint violation excludes ","from Cat  ","","","","","(by","construction step (20b)). This gives us a contradic-","tion with our assumption.","(ii)      contains a recursion and       is free of recursion. If the recursion in    ","","is violation-","free, then there is an equally harmonic recursion-","free candidate","   . But this","   is also less harmonic than   ","   , such that it would have been ex-","cluded from Cat","    ","","too. This again means that   ","","would also be excluded (for lack of the rel-","evant rules in the non-recursive part). On the other","hand, if it were the recursion in      that incurred","the additional violation (as compared to   "," ","","),","then there would be a more harmonic recursion-free","candidate","    . However, this","    would exclude the presence of    ","","in","","","","","by construction step","(20c,d) (only violation-free recursion is possible).","So we get another contradiction to the assumption","that"," ","Cat","    ","",". (iii)   "," ","","contains a recursion. If this recursion","is violation-free, we can pick the equally harmonic","candidate avoiding the recursion to be our     ","",",","and we are back to case (i) and (ii). Likewise, if the","recursion in       does incur some violation, not","using the recursion leads to an even more harmonic candidate, for which again cases (i) and (ii) will apply. All possible cases lead to a contradiction with the assumptions, so no candidate is more harmonic than our"," ","Cat","    ","",". We still have to prove that if the c-structure  of a candidate analysis generated from  ","with","","is equally or more harmonic than all other candi-","dates, then it is contained in Cat","    ","",". We can","construct an augmented version","  of  , such that Cat  ","  ","and then show that there is a homomorphism mapping","  to some analysis","   ","     with Cat","     ",". We can use the constraint marking construction   and the","  construction to construct the tree","  with augmented category symbols of the analysis . The result of K&W00 plus (17) guarantee that Cat  ","  ",". Now, there has to be a homomorphism from the categories in"," ","to the cate-","gories of some analysis in","","   .","","","","","is also based","on   ","  ","","(with an additional index","on each category and some categories and rules of","  "," ","","","having no counterpart in   ","",").","Since we know that ","is equally or more harmonic than any other candidate generated from   , we know that the augmented tree"," ","either contains no recursion or only violation-free recursion. If it does contain such violation-free recursions we map all categories","on the recursion paths to the indexed form",":  , and furthermore consider the variant of   avoiding the recursion(s). For our (non-recursive)","tree, there is guaranteed to be a counterpart in the","finiteset of non-recursive trees in","","","","","with all cat-","egories pairwise identical apart from the index","in","     . We pick this tree and map each of the cate-","gories in"," ","to the","-indexed counterpart. The exis-","tence of this homomorphism guarantees that an anal-","ysis","  ","","    ","exists with Cat","  "," ","Cat  ","   . QED"]},{"title":"9 Conclusion","paragraphs":["We showed that for OT-LFG systems in which all constraints can be expressed relative to a local subtree in c-structure, the generation task from (noncyclic13",") f-structures is solvable. The infinity of","13","The non-cyclicity condition is inherited from K&W00; in linguistically motivated applications of the LFG formalism, cru-the conceptually underlying candidate set does not preclude a computational approach. It is obvious that the construction proposed here has the purpose of bringing out the principled computability, rather than suggesting a particular algorithm for implementation. However on this basis, an implementa-tion can be easily devised.","The locality condition on constraint-checking seems unproblematic for linguistically relevant constraints, since a GPSG-style slash mechanism permits reference to (finitely many) nonlocal configurations from any given category (cf. fn. 5).14","Decidability of generation-based optimization (from a given input f-structure) alone does not imply that the recognition and parsing tasks for an OT grammar system defined as in sec. 3 are decidable: for these tasks, a string is given and it has to be shown that the string is optimal for some underlying input f-structure (cf. (Johnson, 1998)). However, a similar construction as the one presented here can be devised for parsing-based optimization (even for an LFG-style grammar that does not obey the offline parsability condition). So, if the language generated by an OT system is defined based on (strong) bidirectional optimality (Kuhn, 2001, ch. 5), decidability of both the general parsing and generation problem follows.15","For the unidirectionally defined OT language (as in sec. 3), decidability of parsing can be guaranteed under the assumption of a contextual recoverability condition in parsing (Kuhn, in preparation)."]},{"title":"References","paragraphs":["Joan Bresnan, Shipra Dingare, and Christopher Manning.","2001. Soft constraints mirror hard constraints: Voice","and person in English and Lummi. In Proceedings of","the LFG 2001 Conference. CSLI Publications. cial use of cyclicity in underlying semantic feature graphs has never been made.","14","A hypothetical constraint that is excluded would be a parallelism constraint comparing two subtree structures of arbitrary depth. Such a constraint seems unnatural in a model of grammaticality. Parallelism of conjuncts does play a role in models of human parsing preferences; however, here it seems reasonable to assume an upper bound on the depth of parallel structures to be compared (due to memory restrictions).","15","Parsing: for a given string, parsing-based optimization is used to determine the optimal underlying f-structure; then generation-based optimization is used to check whether the original string comes out optimal in this direction too. Gen-eration is symmetrical, starting with an f-structure.","Joan Bresnan. 2000. Optimal syntax. In Joost Dekkers, Frank van der Leeuw, and Jeroen van de Weijer, editors, Optimality Theory: Phonology, Syntax, and Acquisition. Oxford University Press.","Jason Eisner. 1997. Efficient generation in primitive optimality theory. In Proceedings of the ACL 1997, Madrid.","Robert Frank and Giorgio Satta. 1998. Optimality theory and the generative complexity of constraint violation. Computational Linguistics, 24(2):307–316.","Dale Gerdemann and Gertjan van Noord. 2000. Approximation and exactness in finite state Optimality The-ory. In SIGPHON 2000, Finite State Phonology. 5th Workshop of the ACL Special Interest Group in Comp. Phonology, Luxembourg.","Mark Johnson, Stuart Geman, Stephen Canon, Zhiyi Chi, and Stefan Riezler. 1999. Estimators for stochastic “unification-based” grammars. In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics (ACL’99), College Park, MD, pages 535–541.","Mark Johnson. 1998. Optimality-theoretic Lexical Func-tional Grammar. In Proceedings of the 11th Annual CUNY Conference on Human Sentence Processing, Rutgers University.","Ronald M. Kaplan and Jürgen Wedekind. 2000. LFG generation produces context-free languages. In Proceedings of COLING-2000, pages 297–302, Saarbrücken.","Lauri Karttunen. 1998. The proper treatment of optimality in computational phonology. In Proceedings of the Internat. Workshop on Finite-State Methods in Natural Language Processing, FSMNLP’98, pages 1–12.","Jonas Kuhn. 2000. Processing Optimality-theoretic syntax by interleaved chart parsing and generation. In Proceedings of ACL 2000, pages 360–367, Hongkong.","Jonas Kuhn. 2001. Formal and Computational Aspects of Optimality-theoretic Syntax. Ph.D. thesis, In-stitut für maschinelle Sprachverarbeitung, Universität Stuttgart.","Jonas Kuhn. in preparation. Decidability of generation and parsing for OT syntax. Ms., Stanford University.","Stefan Riezler, Detlef Prescher, Jonas Kuhn, and Mark Johnson. 2000. Lexicalized stochastic modeling of constraint-based grammars using log-linear measures and EM training. In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics (ACL’00), Hong Kong, pages 480–487.","Stefan Riezler, Dick Crouch, Ron Kaplan, Tracy King, John Maxwell, and Mark Johnson. 2002. Parsing the Wall Street Journal using a Lexical-Functional Grammar and discriminative estimation techniques. This conference."]}],"references":[{"authors":[],"source":"Joan Bresnan, Shipra Dingare, and Christopher Manning."},{"authors":[],"source":"2001. Soft constraints mirror hard constraints: Voice"},{"authors":[],"source":"and person in English and Lummi. In Proceedings of"},{"authors":[],"source":"the LFG 2001 Conference. CSLI Publications. cial use of cyclicity in underlying semantic feature graphs has never been made."},{"authors":[],"source":"14"},{"authors":[],"source":"A hypothetical constraint that is excluded would be a parallelism constraint comparing two subtree structures of arbitrary depth. Such a constraint seems unnatural in a model of grammaticality. Parallelism of conjuncts does play a role in models of human parsing preferences; however, here it seems reasonable to assume an upper bound on the depth of parallel structures to be compared (due to memory restrictions)."},{"authors":[],"source":"15"},{"authors":[],"source":"Parsing: for a given string, parsing-based optimization is used to determine the optimal underlying f-structure; then generation-based optimization is used to check whether the original string comes out optimal in this direction too. Gen-eration is symmetrical, starting with an f-structure."},{"authors":[{"first":"Joan","last":"Bresnan"}],"year":"2000","title":"Optimal syntax","source":"Joan Bresnan. 2000. Optimal syntax. In Joost Dekkers, Frank van der Leeuw, and Jeroen van de Weijer, editors, Optimality Theory: Phonology, Syntax, and Acquisition. Oxford University Press."},{"authors":[{"first":"Jason","last":"Eisner"}],"year":"1997","title":"Efficient generation in primitive optimality theory","source":"Jason Eisner. 1997. Efficient generation in primitive optimality theory. In Proceedings of the ACL 1997, Madrid."},{"authors":[{"first":"Robert","last":"Frank"},{"first":"Giorgio","last":"Satta"}],"year":"1998","title":"Optimality theory and the generative complexity of constraint violation","source":"Robert Frank and Giorgio Satta. 1998. Optimality theory and the generative complexity of constraint violation. Computational Linguistics, 24(2):307–316."},{"authors":[{"first":"Dale","last":"Gerdemann"},{"first":"Gertjan","last":"van Noord"}],"year":"2000","title":"Approximation and exactness in finite state Optimality The-ory","source":"Dale Gerdemann and Gertjan van Noord. 2000. Approximation and exactness in finite state Optimality The-ory. In SIGPHON 2000, Finite State Phonology. 5th Workshop of the ACL Special Interest Group in Comp. Phonology, Luxembourg."},{"authors":[{"first":"Mark","last":"Johnson"},{"first":"Stuart","last":"Geman"},{"first":"Stephen","last":"Canon"},{"first":"Zhiyi","last":"Chi"},{"first":"Stefan","last":"Riezler"}],"year":"1999","title":"Estimators for stochastic “unification-based” grammars","source":"Mark Johnson, Stuart Geman, Stephen Canon, Zhiyi Chi, and Stefan Riezler. 1999. Estimators for stochastic “unification-based” grammars. In Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics (ACL’99), College Park, MD, pages 535–541."},{"authors":[{"first":"Mark","last":"Johnson"}],"year":"1998","title":"Optimality-theoretic Lexical Func-tional Grammar","source":"Mark Johnson. 1998. Optimality-theoretic Lexical Func-tional Grammar. In Proceedings of the 11th Annual CUNY Conference on Human Sentence Processing, Rutgers University."},{"authors":[{"first":"Ronald","middle":"M.","last":"Kaplan"},{"first":"Jürgen","last":"Wedekind"}],"year":"2000","title":"LFG generation produces context-free languages","source":"Ronald M. Kaplan and Jürgen Wedekind. 2000. LFG generation produces context-free languages. In Proceedings of COLING-2000, pages 297–302, Saarbrücken."},{"authors":[{"first":"Lauri","last":"Karttunen"}],"year":"1998","title":"The proper treatment of optimality in computational phonology","source":"Lauri Karttunen. 1998. The proper treatment of optimality in computational phonology. In Proceedings of the Internat. Workshop on Finite-State Methods in Natural Language Processing, FSMNLP’98, pages 1–12."},{"authors":[{"first":"Jonas","last":"Kuhn"}],"year":"2000","title":"Processing Optimality-theoretic syntax by interleaved chart parsing and generation","source":"Jonas Kuhn. 2000. Processing Optimality-theoretic syntax by interleaved chart parsing and generation. In Proceedings of ACL 2000, pages 360–367, Hongkong."},{"authors":[{"first":"Jonas","last":"Kuhn"}],"year":"2001","title":"Formal and Computational Aspects of Optimality-theoretic Syntax","source":"Jonas Kuhn. 2001. Formal and Computational Aspects of Optimality-theoretic Syntax. Ph.D. thesis, In-stitut für maschinelle Sprachverarbeitung, Universität Stuttgart."},{"authors":[],"source":"Jonas Kuhn. in preparation. Decidability of generation and parsing for OT syntax. Ms., Stanford University."},{"authors":[{"first":"Stefan","last":"Riezler"},{"first":"Detlef","last":"Prescher"},{"first":"Jonas","last":"Kuhn"},{"first":"Mark","last":"Johnson"}],"year":"2000","title":"Lexicalized stochastic modeling of constraint-based grammars using log-linear measures and EM training","source":"Stefan Riezler, Detlef Prescher, Jonas Kuhn, and Mark Johnson. 2000. Lexicalized stochastic modeling of constraint-based grammars using log-linear measures and EM training. In Proceedings of the 38th Annual Meeting of the Association for Computational Linguistics (ACL’00), Hong Kong, pages 480–487."},{"authors":[{"first":"Stefan","last":"Riezler"},{"first":"Dick","last":"Crouch"},{"first":"Ron","last":"Kaplan"},{"first":"Tracy","last":"King"},{"first":"John","last":"Maxwell"},{"first":"Mark","last":"Johnson"}],"year":"2002","title":"Parsing the Wall Street Journal using a Lexical-Functional Grammar and discriminative estimation techniques","source":"Stefan Riezler, Dick Crouch, Ron Kaplan, Tracy King, John Maxwell, and Mark Johnson. 2002. Parsing the Wall Street Journal using a Lexical-Functional Grammar and discriminative estimation techniques. This conference."}],"cites":[{"style":0,"text":"Kaplan and Wedekind’s (2000)","origin":{"pointer":"/sections/0/paragraphs/0","offset":318,"length":28},"authors":[{"last":"Kaplan"},{"last":"Wedekind’s"}],"year":"2000","references":[]},{"style":0,"text":"Johnson et al., 1999","origin":{"pointer":"/sections/1/paragraphs/11","offset":125,"length":20},"authors":[{"last":"Johnson"},{"last":"al."}],"year":"1999","references":["/references/12"]},{"style":0,"text":"Riezler et al., 2000","origin":{"pointer":"/sections/1/paragraphs/11","offset":147,"length":20},"authors":[{"last":"Riezler"},{"last":"al."}],"year":"2000","references":["/references/19"]},{"style":0,"text":"Riezler et al., 2002","origin":{"pointer":"/sections/1/paragraphs/11","offset":169,"length":20},"authors":[{"last":"Riezler"},{"last":"al."}],"year":"2002","references":["/references/20"]},{"style":0,"text":"Johnson, 1998","origin":{"pointer":"/sections/1/paragraphs/14","offset":84,"length":13},"authors":[{"last":"Johnson"}],"year":"1998","references":["/references/13"]},{"style":0,"text":"Bresnan et al., 2001","origin":{"pointer":"/sections/1/paragraphs/14","offset":321,"length":20},"authors":[{"last":"Bresnan"},{"last":"al."}],"year":"2001","references":[]},{"style":0,"text":"Kuhn, 2000","origin":{"pointer":"/sections/1/paragraphs/15","offset":112,"length":10},"authors":[{"last":"Kuhn"}],"year":"2000","references":["/references/16"]},{"style":0,"text":"Bresnan, 2000","origin":{"pointer":"/sections/3/paragraphs/0","offset":11,"length":13},"authors":[{"last":"Bresnan"}],"year":"2000","references":["/references/8"]},{"style":0,"text":"Kuhn, 2000","origin":{"pointer":"/sections/3/paragraphs/0","offset":26,"length":10},"authors":[{"last":"Kuhn"}],"year":"2000","references":["/references/16"]},{"style":0,"text":"Kuhn, 2001","origin":{"pointer":"/sections/3/paragraphs/0","offset":38,"length":10},"authors":[{"last":"Kuhn"}],"year":"2001","references":["/references/17"]},{"style":0,"text":"Frank and Satta, 1998","origin":{"pointer":"/sections/3/paragraphs/2","offset":136,"length":21},"authors":[{"last":"Frank"},{"last":"Satta"}],"year":"1998","references":["/references/10"]},{"style":0,"text":"Eisner, 1997","origin":{"pointer":"/sections/3/paragraphs/2","offset":167,"length":12},"authors":[{"last":"Eisner"}],"year":"1997","references":["/references/9"]},{"style":0,"text":"Karttunen, 1998","origin":{"pointer":"/sections/3/paragraphs/2","offset":181,"length":15},"authors":[{"last":"Karttunen"}],"year":"1998","references":["/references/15"]},{"style":0,"text":"Noord, 2000","origin":{"pointer":"/sections/3/paragraphs/2","offset":216,"length":11},"authors":[{"last":"Noord"}],"year":"2000","references":[]},{"style":0,"text":"Johnson, 1998","origin":{"pointer":"/sections/3/paragraphs/4","offset":10,"length":13},"authors":[{"last":"Johnson"}],"year":"1998","references":["/references/13"]},{"style":0,"text":"Kuhn, 2001","origin":{"pointer":"/sections/3/paragraphs/4","offset":75,"length":10},"authors":[{"last":"Kuhn"}],"year":"2001","references":["/references/17"]},{"style":0,"text":"Bresnan, 2000","origin":{"pointer":"/sections/3/paragraphs/114","offset":59,"length":13},"authors":[{"last":"Bresnan"}],"year":"2000","references":["/references/8"]},{"style":0,"text":"Kaplan and Wedekind, 2000","origin":{"pointer":"/sections/4/paragraphs/0","offset":82,"length":25},"authors":[{"last":"Kaplan"},{"last":"Wedekind"}],"year":"2000","references":["/references/14"]},{"style":0,"text":"Kuhn, 2000","origin":{"pointer":"/sections/7/paragraphs/135","offset":250,"length":10},"authors":[{"last":"Kuhn"}],"year":"2000","references":["/references/16"]},{"style":0,"text":"Johnson, 1998","origin":{"pointer":"/sections/9/paragraphs/5","offset":329,"length":13},"authors":[{"last":"Johnson"}],"year":"1998","references":["/references/13"]},{"style":0,"text":"Kuhn, 2001","origin":{"pointer":"/sections/9/paragraphs/5","offset":637,"length":10},"authors":[{"last":"Kuhn"}],"year":"2001","references":["/references/17"]}]}
