{"sections":[{"title":"","paragraphs":["Proceedings of the ACL 2010 Conference Short Papers, pages 27–32, Uppsala, Sweden, 11-16 July 2010. c⃝2010 Association for Computational Linguistics"]},{"title":"Efficient Path Counting Transducers for Minimum Bayes-Risk Decoding of Statistical Machine Translation Lattices Graeme Blackwood, Adrià de Gispert, William Byrne Machine Intelligence Laboratory Cambridge University Engineering Department Trumpington Street, CB2 1PZ, U.K. {gwb24|ad465|wjb31}@cam.ac.uk Abstract","paragraphs":["This paper presents an efficient implementation of linearised lattice minimum Bayes-risk decoding using weighted finite state transducers. We introduce transducers to efficiently count lattice paths containing n-grams and use these to gather the required statistics. We show that these procedures can be implemented exactly through simple transformations of word sequences to sequences of n-grams. This yields a novel implementation of lattice minimum Bayes-risk decoding which is fast and exact even for very large lattices."]},{"title":"1 Introduction","paragraphs":["This paper focuses on an exact implementation of the linearised form of lattice minimum Bayes-risk (LMBR) decoding using general purpose weighted finite state transducer (WFST) operations1",". The LMBR decision rule in Tromble et al. (2008) has the form","Ê = argmax E′","∈E","{ θ0|E′","| + ∑ u∈N","θu#u(E′ )p(u|E)}","(1) where E is a lattice of translation hypotheses, N is the set of all n-grams in the lattice (typically, n = 1 . . . 4), and the parameters θ are constants estimated on held-out data. The quantity p(u|E) we refer to as the path posterior probability of the n-gram u. This particular posterior is defined as p(u|E) = p(Eu|E) = ∑ E∈Eu P (E|F ), (2) where Eu = {E ∈ E : #u(E) > 0} is the subset of lattice paths containing the n-gram u at least","1","We omit an introduction to WFSTs for space reasons. See Mohri et al. (2008) for details of the general purpose WFST operations used in this paper. once. It is the efficient computation of these path posterior n-gram probabilities that is the primary focus of this paper. We will show how general purpose WFST algorithms can be employed to efficiently compute p(u|E) for all u ∈ N .","Tromble et al. (2008) use Equation (1) as an approximation to the general form of statistical machine translation MBR decoder (Kumar and Byrne, 2004):","Ê = argmin E′","∈E ∑ E∈E","L(E, E′ )P (E|F ) (3) The approximation replaces the sum over all paths in the lattice by a sum over lattice n-grams. Even though a lattice may have many n-grams, it is possible to extract and enumerate them exactly whereas this is often impossible for individual paths. Therefore, while the Tromble et al. (2008) linearisation of the gain function in the decision rule is an approximation, Equation (1) can be computed exactly even over very large lattices. The challenge is to do so efficiently.","If the quantity p(u|E) had the form of a conditional expected count c(u|E) = ∑ E∈E #u(E)P (E|F ), (4) it could be computed efficiently using counting transducers (Allauzen et al., 2003). The statistic c(u|E) counts the number of times an n-gram occurs on each path, accumulating the weighted count over all paths. By contrast, what is needed by the approximation in Equation (1) is to identify all paths containing an n-gram and accumulate their probabilities. The accumulation of probabilities at the path level, rather than the n-gram level, makes the exact computation of p(u|E) hard.","Tromble et al. (2008) approach this problem by building a separate word sequence acceptor for each n-gram in N and intersecting this acceptor 27 with the lattice to discard all paths that do not contain the n-gram; they then sum the probabilities of all paths in the filtered lattice. We refer to this as the sequential method, since p(u|E) is calculated separately for each u in sequence.","Allauzen et al. (2010) introduce a transducer for simultaneous calculation of p(u|E) for all unigrams u ∈ N1 in a lattice. This transducer is effective for finding path posterior probabilities of unigrams because there are relatively few unique unigrams in the lattice. As we will show, however, it is less efficient for higher-order n-grams.","Allauzen et al. (2010) use exact statistics for the unigram path posterior probabilities in Equation (1), but use the conditional expected counts of Equation (4) for higher-order n-grams. Their hybrid MBR decoder has the form","Ê = argmax E′","∈E","{ θ0|E′","| + ∑ u∈N :1≤|u|≤k","θu#u(E′ )p(u|E) + ∑ u∈N :k<|u|≤4","θu#u(E′ )c(u|E)} , (5) where k determines the range of n-gram orders at which the path posterior probabilities p(u|E) of Equation (2) and conditional expected counts c(u|E) of Equation (4) are used to compute the expected gain. For k < 4, Equation (5) is thus an approximation to the approximation. In many cases it will be perfectly fine, depending on how closely p(u|E) and c(u|E) agree for higher-order n-grams. Experimentally, Allauzen et al. (2010) find this approximation works well at k = 1 for MBR decoding of statistical machine translation lattices. However, there may be scenarios in which p(u|E) and c(u|E) differ so that Equation (5) is no longer useful in place of the original Tromble et al. (2008) approximation.","In the following sections, we present an efficient method for simultaneous calculation of p(u|E) for n-grams of a fixed order. While other fast MBR approximations are possible (Kumar et al., 2009), we show how the exact path posterior probabilities can be calculated and applied in the implementation of Equation (1) for efficient MBR decoding over lattices."]},{"title":"2 N -gram Mapping Transducer","paragraphs":["We make use of a trick to count higher-order n-grams. We build transducer Φn to map word sequences to n-gram sequences of order n. Φn has a similar form to the WFST implementation of an n-gram language model (Allauzen et al., 2003). Φn includes for each n-gram u = wn","1 arcs of the form: wn-1 1 wn","2 wn:u","The n-gram lattice of order n is called En and is found by composing E ◦ Φn, projecting on the output, removing ε-arcs, determinizing, and minimis-ing. The construction of En is fast even for large lattices and is memory efficient. En itself may have more states than E due to the association of distinct n-gram histories with states. However, the counting transducer for unigrams is simpler than the corresponding counting transducer for higher-order n-grams. As a result, counting unigrams in En is easier than counting n-grams in E."]},{"title":"3 Efficient Path Counting","paragraphs":["Associated with each En we have a transducer Ψn which can be used to calculate the path posterior probabilities p(u|E) for all u ∈ Nn. In Figures 1 and 2 we give two possible forms2","of Ψ","n that can be used to compute path posterior probabilities over n-grams u1,2 ∈ Nn for some n. No modification to the ρ-arc matching mechanism is required even in counting higher-order n-grams since all n-grams are represented as individual symbols after application of the mapping transducer Φn.","Transducer ΨL","n is used by Allauzen et al. (2010) to compute the exact unigram contribution to the conditional expected gain in Equation (5). For example, in counting paths that contain u1, ΨL","n retains the first occurrence of u1 and maps every other symbol to ε. This ensures that in any path containing a given u, only the first u is counted, avoiding multiple counting of paths.","We introduce an alternative path counting transducer ΨR","n that effectively deletes all symbols except the last occurrence of u on any path by ensuring that any paths in composition which count earlier instances of u do not end in a final state. Multiple counting is avoided by counting only the last occurrence of each symbol u on a path.","We note that initial ε:ε arcs in ΨL","n effectively create |Nn| copies of En in composition while searching for the first occurrence of each u. Com-2","The special composition symbol σ matches any arc; ρ matches any arc other than those with an explicit transition. See the OpenFst documentation: http://openfst.org 28 0 1 2 3 u1:u1","u2:u2 ε:ε ε:ε ρ:ε ρ:ε σ:ε Figure 1: Path counting transducer ΨL","n matching first (left-most) occurrence of each u ∈ Nn. 0 1 3 2 4 u1:u1 u2:u2 u1:ε u2:ε σ:ε ρ:ε ρ:ε Figure 2: Path counting transducer ΨR","n matching last (right-most) occurrence of each u ∈ Nn. posing with ΨR","n creates a single copy of En while searching for the last occurrence of u; we find this to be much more efficient for large Nn.","Path posterior probabilities are calculated over each En by composing with Ψn in the log semiring, projecting on the output, removing ε-arcs, determinizing, minimising, and pushing weights to the initial state (Allauzen et al., 2010). Using either ΨL","n or ΨR","n , the resulting counts acceptor is Xn. It has a compact form with one arc from the start state for each ui ∈ Nn: 0 iui/- log p(ui|E) 3.1 Efficient Path Posterior Calculation Although Xn has a convenient and elegant form, it can be difficult to build for large Nn because the composition En ◦ Ψn results in millions of states and arcs. The log semiring ε-removal and determinization required to sum the probabilities of paths labelled with each u can be slow.","However, if we use the proposed ΨR","n , then each path in En ◦ ΨR","n has only one non-ε output label u and all paths leading to a given final state share the same u. A modified forward algorithm can be used to calculate p(u|E) without the costly ε-removal and determinization. The modification simply requires keeping track of which symbol u is encountered along each path to a final state. More than one final state may gather probabilities for the same u; to compute p(u|E) these probabilities are added. The forward algorithm requires that En◦ΨR","n be topologically sorted; although sort-ing can be slow, it is still quicker than log semiring ε-removal and determinization.","The statistics gathered by the forward algorithm could also be gathered under the expectation semiring (Eisner, 2002) with suitably defined features. We take the view that the full complexity of that approach is not needed here, since only one symbol is introduced per path and per exit state.","Unlike En ◦ ΨR","n , the composition En ◦ ΨL","n does not segregate paths by u such that there is a direct association between final states and symbols. The forward algorithm does not readily yield the per-symbol probabilities, although an arc weight vector indexed by symbols could be used to correctly aggregate the required statistics (Riley et al., 2009). For large Nn this would be memory in-tensive. The association between final states and symbols could also be found by label pushing, but we find this slow for large En ◦ Ψn."]},{"title":"4 Efficient Decoder Implementation","paragraphs":["In contrast to Equation (5), we use the exact values of p(u|E) for all u ∈ Nn at orders n = 1 . . . 4 to compute","Ê = argmin E′","∈E","{ θ0|E′","| + 4 ∑ n=1","gn(E, E′ )} , (6) where gn(E, E′",") = ∑","u∈Nn θu#u(E′",")p(u|E) using the exact path posterior probabilities at each order. We make acceptors Ωn such that E ◦ Ωn assigns order n partial gain gn(E, E′",") to all paths E ∈ E. Ωn is derived from Φn directly by assign-ing arc weight θu×p(u|E) to arcs with output label u and then projecting on the input labels. For each n-gram u = wn","1 in Nn arcs of Ωn have the form: wn-1 1 wn","2 wn/θu × p(u|E)","To apply θ0 we make a copy of E, called E0, with fixed weight θ0 on all arcs. The decoder is formed as the composition E0 ◦ Ω1 ◦ Ω2 ◦ Ω3 ◦ Ω4 and Ê is extracted as the maximum cost string."]},{"title":"5 Lattice Generation for LMBR","paragraphs":["Lattice MBR decoding performance and efficiency is evaluated in the context of the NIST 29","mt0205tune mt0205test mt08nw mt08ng ML 54.2 53.8 51.4 36.3 k 0 52.6 52.3 49.8 34.5 1 54.8 54.4 52.2 36.6 2 54.9 54.5 52.4 36.8 3 54.9 54.5 52.4 36.8","LMBR 55.0 54.6 52.4 36.8 Table 1: BLEU scores for Arabic→English maximum likelihood translation (ML), MBR decoding using the hybrid decision rule of Equation (5) at 0 ≤ k ≤ 3, and regular linearised lattice MBR (LMBR). mt0205tune mt0205test mt08nw mt08ng Posteriors","sequential 3160 3306 2090 3791 ΨL","n 6880 7387 4201 8796 ΨR","n 1746 1789 1182 2787 Decoding","sequential 4340 4530 2225 4104 Ψn 284 319 118 197 Total","sequential 7711 8065 4437 8085 ΨL","n 7458 8075 4495 9199 ΨR","n 2321 2348 1468 3149","Table 2: Time in seconds required for path posterior n-gram probability calculation and LMBR decoding","using sequential method and left-most (ΨL","n ) or right-most (ΨR","n ) counting transducer implementations. Arabic→English machine translation task3",". The development set mt0205tune is formed from the odd numbered sentences of the NIST MT02– MT05 testsets; the even numbered sentences form the validation set mt0205test. Performance on NIST MT08 newswire (mt08nw) and newsgroup (mt08ng) data is also reported.","First-pass translation is performed using HiFST (Iglesias et al., 2009), a hierarchical phrase-based decoder. Word alignments are generated using MTTK (Deng and Byrne, 2008) over 150M words of parallel text for the constrained NIST MT08 Arabic→English track. In decoding, a Shallow-1 grammar with a single level of rule nesting is used and no pruning is performed in generating first-pass lattices (Iglesias et al., 2009).","The first-pass language model is a modified Kneser-Ney (Kneser and Ney, 1995) 4-gram estimated over the English parallel text and an 881M word subset of the GigaWord Third Edition (Graff et al., 2007). Prior to LMBR, the lattices are rescored with large stupid-backoff 5-gram language models (Brants et al., 2007) estimated over more than 6 billion words of English text.","The n-gram factors θ0, . . . , θ4 are set according to Tromble et al. (2008) using unigram precision 3 http://www.itl.nist.gov/iad/mig/tests/mt p = 0.85 and average recall ratio r = 0.74. Our translation decoder and MBR procedures are implemented using OpenFst (Allauzen et al., 2007)."]},{"title":"6 LMBR Speed and Performance","paragraphs":["Lattice MBR decoding performance is shown in Table 1. Compared to the maximum likelihood translation hypotheses (row ML), LMBR gives gains of +0.8 to +1.0 BLEU for newswire data and +0.5 BLEU for newsgroup data (row LMBR).","The other rows of Table 1 show the performance of LMBR decoding using the hybrid decision rule of Equation (5) for 0 ≤ k ≤ 3. When the conditional expected counts c(u|E) are used at all orders (i.e. k = 0), the hybrid decoder BLEU scores are considerably lower than even the ML scores. This poor performance is because there are many unigrams u for which c(u|E) is much greater than p(u|E). The consensus translation maximising the conditional expected gain is then dominated by unigram matches, significantly degrading LMBR decoding performance. Table 1 shows that for these lattices the hybrid decision rule is an accurate approximation to Equation (1) only when k ≥ 2 and the exact contribution to the gain function is computed using the path posterior probabilities at orders n = 1 and n = 2. 30","We now analyse the efficiency of lattice MBR decoding using the exact path posterior probabilities of Equation (2) at all orders. We note that the sequential method and both simultaneous implementations using path counting transducers ΨL","n and ΨR","n yield the same hypotheses (allowing for numerical accuracy); they differ only in speed and memory usage. Posteriors Efficiency Computation times for the steps in LMBR are given in Table 2. In calculating path posterior n-gram probabilities p(u|E), we find that the use of ΨL","n is more than twice as slow as the sequential method. This is due to the difficulty of counting higher-order n-grams in large lattices. ΨL","n is effective for counting unigrams, however, since there are far fewer of them. Using ΨR","n is almost twice as fast as the sequential method. This speed difference is due to the simple forward algorithm. We also observe that for higher-order n, the composition En ◦ ΨR","n requires less memory and produces a smaller machine than En ◦ ΨL","n . It is easier to count paths by the final occurrence of a symbol than by the first. Decoding Efficiency Decoding times are significantly faster using Ωn than the sequential method; average decoding time is around 0.1 seconds per sentence. The total time required for lattice MBR is dominated by the calculation of the path posterior n-gram probabilities, and this is a function of the number of n-grams in the lattice |N |. For each sentence in mt0205tune, Figure 3 plots the total LMBR time for the sequential method (marked ‘o’) and for probabilities computed using ΨR","n (marked ‘+’). This compares the two techniques on a sentence-by-sentence basis. As |N | grows, the simultaneous path counting transducer is found to be much more efficient."]},{"title":"7 Conclusion","paragraphs":["We have described an efficient and exact implementation of the linear approximation to LMBR using general WFST operations. A simple transducer was used to map words to sequences of n-grams in order to simplify the extraction of higher-order statistics. We presented a counting transducer ΨR","n that extracts the statistics required for all n-grams of order n in a single composition and allows path posterior probabilities to be computed efficiently using a modified forward procedure.","We take the view that even approximate search 0 1000 2000 3000 4000 5000 60000 10 20 30 40 50 60 70   sequential simultaneous ΨR","n t o t a l t i m e ( s e c o n d s ) lattice n-grams Figure 3: Total time in seconds versus |N |. criteria should be implemented exactly where possible, so that it is clear exactly what the system is doing. For machine translation lattices, conflat-ing the values of p(u|E) and c(u|E) for higher-order n-grams might not be a serious problem, but in other scenarios – especially where symbol sequences are repeated multiple times on the same path – it may be a poor approximation.","We note that since much of the time in calculation is spent dealing with ε-arcs that are ultimately removed, an optimised composition algorithm that skips over such redundant structure may lead to further improvements in time efficiency."]},{"title":"Acknowledgments","paragraphs":["This work was supported in part under the GALE program of the Defense Advanced Research Projects Agency, Contract No. HR0011-06-C-0022."]},{"title":"References","paragraphs":["Cyril Allauzen, Mehryar Mohri, and Brian Roark. 2003. Generalized algorithms for constructing statistical language models. In Proceedings of the 41st Meeting of the Association for Computational Linguistics, pages 557–564.","Cyril Allauzen, Michael Riley, Johan Schalkwyk, Wojciech Skut, and Mehryar Mohri. 2007. OpenFst: a general and efficient weighted finite-state transducer library. In Proceedings of the 9th International Conference on Implementation and Application of Automata, pages 11–23. Springer.","Cyril Allauzen, Shankar Kumar, Wolfgang Macherey, Mehryar Mohri, and Michael Riley. 2010. Expected 31 sequence similarity maximization. In Human Language Technologies 2010: The 11th Annual Conference of the North American Chapter of the Association for Computational Linguistics, Los Angeles, California, June.","Thorsten Brants, Ashok C. Popat, Peng Xu, Franz J. Och, and Jeffrey Dean. 2007. Large language models in machine translation. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 858–867.","Yonggang Deng and William Byrne. 2008. HMM word and phrase alignment for statistical machine translation. IEEE Transactions on Audio, Speech, and Language Processing, 16(3):494–507.","Jason Eisner. 2002. Parameter estimation for probabilistic finite-state transducers. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), pages 1–8, Philadelphia, July.","David Graff, Junbo Kong, Ke Chen, and Kazuaki Maeda. 2007. English Gigaword Third Edition.","Gonzalo Iglesias, Adrià de Gispert, Eduardo R. Banga, and William Byrne. 2009. Hierarchical phrase-based translation with weighted finite state transducers. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 433–441, Boulder, Colorado, June. Association for Computational Linguistics.","R. Kneser and H. Ney. 1995. Improved backing-off for m-gram language modeling. In Acoustics, Speech, and Signal Processing, pages 181–184.","Shankar Kumar and William Byrne. 2004. Minimum Bayes-risk decoding for statistical machine translation. In Proceedings of Human Language Technologies: The 2004 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 169–176.","Shankar Kumar, Wolfgang Macherey, Chris Dyer, and Franz Och. 2009. Efficient minimum error rate training and minimum bayes-risk decoding for translation hypergraphs and lattices. In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 163– 171, Suntec, Singapore, August. Association for Computational Linguistics.","M. Mohri, F.C.N. Pereira, and M. Riley. 2008. Speech recognition with weighted finite-state transducers. Handbook on Speech Processing and Speech Communication.","Michael Riley, Cyril Allauzen, and Martin Jansche. 2009. OpenFst: An Open-Source, Weighted Finite-State Transducer Library and its Applications to Speech and Language. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Tutorial Abstracts, pages 9–10, Boulder, Colorado, May. Association for Computational Linguistics.","Roy Tromble, Shankar Kumar, Franz Och, and Wolfgang Macherey. 2008. Lattice Minimum Bayes-Risk decoding for statistical machine translation. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 620–629, Honolulu, Hawaii, October. Association for Computational Linguistics. 32"]}],"references":[{"authors":[{"first":"Cyril","last":"Allauzen"},{"first":"Mehryar","last":"Mohri"},{"first":"Brian","last":"Roark"}],"year":"2003","title":"Generalized algorithms for constructing statistical language models","source":"Cyril Allauzen, Mehryar Mohri, and Brian Roark. 2003. Generalized algorithms for constructing statistical language models. In Proceedings of the 41st Meeting of the Association for Computational Linguistics, pages 557–564."},{"authors":[{"first":"Cyril","last":"Allauzen"},{"first":"Michael","last":"Riley"},{"first":"Johan","last":"Schalkwyk"},{"first":"Wojciech","last":"Skut"},{"first":"Mehryar","last":"Mohri"}],"year":"2007","title":"OpenFst: a general and efficient weighted finite-state transducer library","source":"Cyril Allauzen, Michael Riley, Johan Schalkwyk, Wojciech Skut, and Mehryar Mohri. 2007. OpenFst: a general and efficient weighted finite-state transducer library. In Proceedings of the 9th International Conference on Implementation and Application of Automata, pages 11–23. Springer."},{"authors":[{"first":"Cyril","last":"Allauzen"},{"first":"Shankar","last":"Kumar"},{"first":"Wolfgang","last":"Macherey"},{"first":"Mehryar","last":"Mohri"},{"first":"Michael","last":"Riley"}],"year":"2010","title":"Expected 31 sequence similarity maximization","source":"Cyril Allauzen, Shankar Kumar, Wolfgang Macherey, Mehryar Mohri, and Michael Riley. 2010. Expected 31 sequence similarity maximization. In Human Language Technologies 2010: The 11th Annual Conference of the North American Chapter of the Association for Computational Linguistics, Los Angeles, California, June."},{"authors":[{"first":"Thorsten","last":"Brants"},{"first":"Ashok","middle":"C.","last":"Popat"},{"first":"Peng","last":"Xu"},{"first":"Franz","middle":"J.","last":"Och"},{"first":"Jeffrey","last":"Dean"}],"year":"2007","title":"Large language models in machine translation","source":"Thorsten Brants, Ashok C. Popat, Peng Xu, Franz J. Och, and Jeffrey Dean. 2007. Large language models in machine translation. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning, pages 858–867."},{"authors":[{"first":"Yonggang","last":"Deng"},{"first":"William","last":"Byrne"}],"year":"2008","title":"HMM word and phrase alignment for statistical machine translation","source":"Yonggang Deng and William Byrne. 2008. HMM word and phrase alignment for statistical machine translation. IEEE Transactions on Audio, Speech, and Language Processing, 16(3):494–507."},{"authors":[{"first":"Jason","last":"Eisner"}],"year":"2002","title":"Parameter estimation for probabilistic finite-state transducers","source":"Jason Eisner. 2002. Parameter estimation for probabilistic finite-state transducers. In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics (ACL), pages 1–8, Philadelphia, July."},{"authors":[{"first":"David","last":"Graff"},{"first":"Junbo","last":"Kong"},{"first":"Ke","last":"Chen"},{"first":"Kazuaki","last":"Maeda"}],"year":"2007","title":"English Gigaword Third Edition","source":"David Graff, Junbo Kong, Ke Chen, and Kazuaki Maeda. 2007. English Gigaword Third Edition."},{"authors":[{"first":"Gonzalo","last":"Iglesias"},{"first":"Adrià","last":"de Gispert"},{"first":"Eduardo","middle":"R.","last":"Banga"},{"first":"William","last":"Byrne"}],"year":"2009","title":"Hierarchical phrase-based translation with weighted finite state transducers","source":"Gonzalo Iglesias, Adrià de Gispert, Eduardo R. Banga, and William Byrne. 2009. Hierarchical phrase-based translation with weighted finite state transducers. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 433–441, Boulder, Colorado, June. Association for Computational Linguistics."},{"authors":[{"first":"R.","last":"Kneser"},{"first":"H.","last":"Ney"}],"year":"1995","title":"Improved backing-off for m-gram language modeling","source":"R. Kneser and H. Ney. 1995. Improved backing-off for m-gram language modeling. In Acoustics, Speech, and Signal Processing, pages 181–184."},{"authors":[{"first":"Shankar","last":"Kumar"},{"first":"William","last":"Byrne"}],"year":"2004","title":"Minimum Bayes-risk decoding for statistical machine translation","source":"Shankar Kumar and William Byrne. 2004. Minimum Bayes-risk decoding for statistical machine translation. In Proceedings of Human Language Technologies: The 2004 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 169–176."},{"authors":[{"first":"Shankar","last":"Kumar"},{"first":"Wolfgang","last":"Macherey"},{"first":"Chris","last":"Dyer"},{"first":"Franz","last":"Och"}],"year":"2009","title":"Efficient minimum error rate training and minimum bayes-risk decoding for translation hypergraphs and lattices","source":"Shankar Kumar, Wolfgang Macherey, Chris Dyer, and Franz Och. 2009. Efficient minimum error rate training and minimum bayes-risk decoding for translation hypergraphs and lattices. In Proceedings of the Joint Conference of the 47th Annual Meeting of the Association for Computational Linguistics and the 4th International Joint Conference on Natural Language Processing of the AFNLP, pages 163– 171, Suntec, Singapore, August. Association for Computational Linguistics."},{"authors":[{"first":"M.","last":"Mohri"},{"first":"F.","middle":"C. N.","last":"Pereira"},{"first":"M.","last":"Riley"}],"year":"2008","title":"Speech recognition with weighted finite-state transducers","source":"M. Mohri, F.C.N. Pereira, and M. Riley. 2008. Speech recognition with weighted finite-state transducers. Handbook on Speech Processing and Speech Communication."},{"authors":[{"first":"Michael","last":"Riley"},{"first":"Cyril","last":"Allauzen"},{"first":"Martin","last":"Jansche"}],"year":"2009","title":"OpenFst: An Open-Source, Weighted Finite-State Transducer Library and its Applications to Speech and Language","source":"Michael Riley, Cyril Allauzen, and Martin Jansche. 2009. OpenFst: An Open-Source, Weighted Finite-State Transducer Library and its Applications to Speech and Language. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, Companion Volume: Tutorial Abstracts, pages 9–10, Boulder, Colorado, May. Association for Computational Linguistics."},{"authors":[{"first":"Roy","last":"Tromble"},{"first":"Shankar","last":"Kumar"},{"first":"Franz","last":"Och"},{"first":"Wolfgang","last":"Macherey"}],"year":"2008","title":"Lattice Minimum Bayes-Risk decoding for statistical machine translation","source":"Roy Tromble, Shankar Kumar, Franz Och, and Wolfgang Macherey. 2008. Lattice Minimum Bayes-Risk decoding for statistical machine translation. In Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 620–629, Honolulu, Hawaii, October. Association for Computational Linguistics. 32"}],"cites":[{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/1","offset":28,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Mohri et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/9","offset":56,"length":19},"authors":[{"last":"Mohri"},{"last":"al."}],"year":"2008","references":["/references/11"]},{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/10","offset":0,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Kumar and Byrne, 2004","origin":{"pointer":"/sections/2/paragraphs/10","offset":127,"length":21},"authors":[{"last":"Kumar"},{"last":"Byrne"}],"year":"2004","references":["/references/9"]},{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/13","offset":292,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Allauzen et al., 2003","origin":{"pointer":"/sections/2/paragraphs/14","offset":163,"length":21},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2003","references":["/references/0"]},{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/15","offset":0,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Allauzen et al. (2010)","origin":{"pointer":"/sections/2/paragraphs/16","offset":0,"length":22},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"Allauzen et al. (2010)","origin":{"pointer":"/sections/2/paragraphs/17","offset":0,"length":22},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"Allauzen et al. (2010)","origin":{"pointer":"/sections/2/paragraphs/23","offset":431,"length":22},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/2/paragraphs/23","offset":692,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Kumar et al., 2009","origin":{"pointer":"/sections/2/paragraphs/24","offset":177,"length":18},"authors":[{"last":"Kumar"},{"last":"al."}],"year":"2009","references":["/references/10"]},{"style":0,"text":"Allauzen et al., 2003","origin":{"pointer":"/sections/3/paragraphs/0","offset":209,"length":21},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2003","references":["/references/0"]},{"style":0,"text":"Allauzen et al. (2010)","origin":{"pointer":"/sections/4/paragraphs/4","offset":13,"length":22},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"Allauzen et al., 2010","origin":{"pointer":"/sections/4/paragraphs/15","offset":211,"length":21},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2010","references":["/references/2"]},{"style":0,"text":"Eisner, 2002","origin":{"pointer":"/sections/4/paragraphs/22","offset":104,"length":12},"authors":[{"last":"Eisner"}],"year":"2002","references":["/references/5"]},{"style":0,"text":"Riley et al., 2009","origin":{"pointer":"/sections/4/paragraphs/25","offset":292,"length":18},"authors":[{"last":"Riley"},{"last":"al."}],"year":"2009","references":["/references/12"]},{"style":0,"text":"Iglesias et al., 2009","origin":{"pointer":"/sections/6/paragraphs/15","offset":49,"length":21},"authors":[{"last":"Iglesias"},{"last":"al."}],"year":"2009","references":["/references/7"]},{"style":0,"text":"Deng and Byrne, 2008","origin":{"pointer":"/sections/6/paragraphs/15","offset":152,"length":20},"authors":[{"last":"Deng"},{"last":"Byrne"}],"year":"2008","references":["/references/4"]},{"style":0,"text":"Iglesias et al., 2009","origin":{"pointer":"/sections/6/paragraphs/15","offset":399,"length":21},"authors":[{"last":"Iglesias"},{"last":"al."}],"year":"2009","references":["/references/7"]},{"style":0,"text":"Kneser and Ney, 1995","origin":{"pointer":"/sections/6/paragraphs/16","offset":56,"length":20},"authors":[{"last":"Kneser"},{"last":"Ney"}],"year":"1995","references":["/references/8"]},{"style":0,"text":"Graff et al., 2007","origin":{"pointer":"/sections/6/paragraphs/16","offset":181,"length":18},"authors":[{"last":"Graff"},{"last":"al."}],"year":"2007","references":["/references/6"]},{"style":0,"text":"Brants et al., 2007","origin":{"pointer":"/sections/6/paragraphs/16","offset":293,"length":19},"authors":[{"last":"Brants"},{"last":"al."}],"year":"2007","references":["/references/3"]},{"style":0,"text":"Tromble et al. (2008)","origin":{"pointer":"/sections/6/paragraphs/17","offset":55,"length":21},"authors":[{"last":"Tromble"},{"last":"al."}],"year":"2008","references":["/references/13"]},{"style":0,"text":"Allauzen et al., 2007","origin":{"pointer":"/sections/6/paragraphs/17","offset":262,"length":21},"authors":[{"last":"Allauzen"},{"last":"al."}],"year":"2007","references":["/references/1"]}]}
