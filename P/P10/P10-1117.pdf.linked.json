{"sections":[{"title":"","paragraphs":["Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 1148–1157, Uppsala, Sweden, 11-16 July 2010. c⃝2010 Association for Computational Linguistics"]},{"title":"PCFGs, Topic Models, Adaptor Grammars and Learning Topical Collocations and the Structure of Proper Names Mark Johnson Department of Computing Macquarie University mjohnson@science.mq.edu.au Abstract","paragraphs":["This paper establishes a connection between two apparently very different kinds of probabilistic models. Latent Dirichlet Allocation (LDA) models are used as “topic models” to produce a low-dimensional representation of documents, while Probabilistic Context-Free Grammars (PCFGs) define distributions over trees. The paper begins by showing that LDA topic models can be viewed as a special kind of PCFG, so Bayesian inference for PCFGs can be used to infer Topic Models as well. Adaptor Grammars (AGs) are a hierarchical, non-parameteric Bayesian extension of PCFGs. Exploit-ing the close relationship between LDA and PCFGs just described, we propose two novel probabilistic models that combine insights from LDA and AG models. The first replaces the unigram component of LDA topic models with multi-word sequences or collocations generated by an AG. The second extension builds on the first one to learn aspects of the internal structure of proper names."]},{"title":"1 Introduction","paragraphs":["Over the last few years there has been considerable interest in Bayesian inference for complex hierarchical models both in machine learning and in computational linguistics. This paper establishes a theoretical connection between two very different kinds of probabilistic models: Probabilistic Context-Free Grammars (PCFGs) and a class of models known as Latent Dirichlet Allocation (Blei et al., 2003; Griffiths and Steyvers, 2004) models that have been used for a variety of tasks in machine learning. Specifically, we show that an LDA model can be expressed as a certain kind of PCFG, so Bayesian inference for PCFGs can be used to learn LDA topic models as well. The importance of this observation is primarily theoretical, as current Bayesian inference algorithms for PCFGs are less efficient than those for LDA inference. However, once this link is established it suggests a variety of extensions to the LDA topic models, two of which we explore in this paper. The first involves extending the LDA topic model so that it generates collocations (sequences of words) rather than individual words. The second applies this idea to the problem of automatically learning internal structure of proper names (NPs), which is useful for definite NP coreference models and other applications.","The rest of this paper is structured as follows. The next section reviews Latent Dirichlet Allocation (LDA) topic models, and the following section reviews Probabilistic Context-Free Grammars (PCFGs). Section 4 shows how an LDA topic model can be expressed as a PCFG, which provides the fundamental connection between LDA and PCFGs that we exploit in the rest of the paper, and shows how it can be used to define a “sticky topic” version of LDA. The following section reviews Adaptor Grammars (AGs), a non-parametric extension of PCFGs introduced by Johnson et al. (2007b). Section 6 exploits the connection between LDA and PCFGs to propose an AG-based topic model that extends LDA by defin-ing distributions over collocations rather than individual words, and section 7 applies this extension to the problem of finding the structure of proper names."]},{"title":"2 Latent Dirichlet Allocation Models","paragraphs":["Latent Dirichlet Allocation (LDA) was introduced as an explicit probabilistic counterpart to Latent Semantic Indexing (LSI) (Blei et al., 2003). Like LSI, LDA is intended to produce a low-dimensional characterisation or summary of a doc-1148 WZθα φβ n m l Figure 1: A graphical model “plate” representation of an LDA topic model. Here l is the number of topics, m is the number of documents and n is the number of words per document. ument in a collection of documents for information retrieval purposes. Both LSI and LDA do this by mapping documents to points in a relatively low-dimensional real-valued vector space; distance in this space is intended to correspond to document similarity.","An LDA model is an explicit generative probabilistic model of a collection of documents. We describe the “smoothed” LDA model here (see page 1006 of Blei et al. (2003)) as it corresponds precisely to the Bayesian PCFGs described in section 4. It generates a collection of documents by first generating multinomials φi over the vocabulary V for each topic i ∈ 1, . . . , l, where l is the number of topics and φi,w is the probability of generating word w in topic i. Then it generates each document Dj, j = 1, . . . , m in turn by first generating a multinomial θj over topics, where θj,i is the probability of topic i appearing in document j. (θj serves as the low-dimensional representation of document Dj). Finally it generates each of the n words of document Dj by first selecting a topic z for the word according to θj, and then drawing a word from φz. Dirichlet priors with parameters β and α respectively are placed on the φi and the θj in order to avoid the zeros that can arise from maximum likelihood estimation (i.e., sparse data problems).","The LDA generative model can be compactly expressed as follows, where “∼” should be read as “is distributed according to”. φi ∼ Dir(β) i = 1, . . . , l θj ∼ Dir(α) j = 1, . . . , m zj,k ∼ θj j = 1, . . . , m; k = 1, . . . , n wj,k ∼ φzj,k j = 1, . . . , m; k = 1, . . . , n","In inference, the parameters α and β of the Dirichlet priors are either fixed (i.e., chosen by the model designer), or else themselves inferred, e.g., by Bayesian inference. (The adaptor grammar software we used in the experiments described below automatically does this kind of hyper-parameter inference).","The inference task is to find the topic probability vector θj of each document Dj given the words wj,k of the documents; in general this also requires inferring the topic to word distributions φ and the topic assigned to each word zj,k. Blei et al. (2003) describe a Variational Bayes inference algorithm for LDA models based on a mean-field approximation, while Griffiths and Steyvers (2004) describe an Markov Chain Monte Carlo inference algorithm based on Gibbs sampling; both are quite effective in practice."]},{"title":"3 Probabilistic Context-Free Grammars","paragraphs":["Context-Free Grammars are a simple model of hierarchical structure often used to describe natural language syntax. A Context-Free Grammar (CFG) is a quadruple (N, W, R, S) where N and W are disjoint finite sets of nonterminal and ter-minal symbols respectively, R is a finite set of productions or rules of the form A → β where A ∈ N and β ∈ (N ∪W )⋆",", and S ∈ N is the start symbol.","In what follows, it will be useful to interpret a CFG as generating sets of finite, labelled, ordered trees TA for each X ∈ N ∪ W . Informally, TX consists of all trees t rooted in X where for each local tree (B, β) in t (i.e., where B is a parent’s label and β is the sequence of labels of its immediate children) there is a rule B → β ∈ R.","Formally, the sets TX are the smallest sets of trees that satisfy the following equations.","If X ∈ W (i.e., if X is a terminal) then TX = {X}, i.e., TX consists of a single tree, which in turn only consists of a single node labelled X.","If X ∈ N (i.e., if X is a nonterminal) then TX = ⋃ X→B1...Bn∈RXTREEX (TB1, . . . , TBn) where RA = {A → β : A → β ∈ R} for each A ∈ N , and TREEX (TB1, . . . , TBn) = { X t1 tn. . . : ti ∈ TBi, i = 1, . . . , n } That is, TREEX (TB1, . . . , TBn) consists of the set of trees with whose root node is labelled X and whose ith child is a member of TBi. 1149","The set of trees generated by the CFG is TS, where S is the start symbol, and the set of strings generated by the CFG is the set of yields (i.e., ter-minal strings) of the trees in TS.","A Probabilistic Context-Free Grammar (PCFG) is a pair consisting of a CFG and set of multinomial probability vectors θX indexed by nonterminals X ∈ N , where θX is a distribution over the rules RX (i.e., the rules expanding X). Informally, θX→β is the probability of X expanding to β using the rule X → β ∈ RX . More formally, a PCFG associates each X ∈ N ∪ W with a distribution GX over the trees TX as follows.","If X ∈ W (i.e., if X is a terminal) then GX is the distribution that puts probability 1 on the single-node tree labelled X.","If X ∈ N (i.e., if X is a nonterminal) then: GX = ∑ X→B1...Bn∈RXθX→B1...Bn TDX (GB1, . . . , GBn) (1) where: TDA(G1, . . . , Gn) ( X t1 tn. . . ) = n ∏ i=1 Gi(ti). That is, TDA(G1, . . . , Gn) is a distribution over TA where each subtree ti is generated independently from Gi. These equations have solutions (i.e., the PCFG is said to be “consistent”) when the rule probabilities θA obey certain conditions; see e.g., Wetherell (1980) for details.","The PCFG generates the distribution over trees GS, where S is the start symbol. The distribution over the strings it generates is obtained by marginalising over the trees.","In a Bayesian PCFG one puts Dirichlet priors Dir(αX ) on each of the multinomial rule probability vectors θX for each nonterminal X ∈ N . This means that there is one Dirichlet parameter αX→β for each rule X → β ∈ R in the CFG.","In the “unsupervised” inference problem for a PCFG one is given a CFG, parameters αX for the Dirichlet priors over the rule probabilities, and a corpus of strings. The task is to infer the corresponding posterior distribution over rule probabilities θX . Recently Bayesian inference algorithms for PCFGs have been described. Kurihara and Sato (2006) describe a Variational Bayes algorithm for inferring PCFGs using a mean-field approximation, while Johnson et al. (2007a) describe a Markov Chain Monte Carlo algorithm based on Gibbs sampling."]},{"title":"4 LDA topic models as PCFGs","paragraphs":["This section explains how to construct a PCFG that generates the same distribution over a collection of documents as an LDA model, and where Bayesian inference for the PCFG’s rule probabilities yields the corresponding distributions as Bayesian inference of the corresponding LDA models. (There are several different ways of encoding LDA models as PCFGs; the one presented here is not the most succinct — it is possible to collapse the Doc and Doc′","nonterminals — but it has the advantage that the LDA distributions map straight-forwardly onto PCFG nonterminals).","The terminals W of the CFG consist of the vocabulary V of the LDA model plus a set of special “document identifier” terminals “ j” for each document j ∈ 1, . . . , m, where m is the number of documents. In the PCFG encoding strings from document j are prefixed with “ j”; this indicates to the grammar which document the string comes from. The nonterminals consist of the start symbol Sentence, Docj and Doc′","j for each j ∈ 1, . . . , m, and Topici for each i ∈ 1, . . . , l, where l is the number of topics in the LDA model.","The rules of the CFG are all instances of the following schemata:","Sentence → Doc′ j j ∈ 1, . . . , m Doc′","j → j j ∈ 1, . . . , m Doc′","j → Doc′","j Docj j ∈ 1, . . . , m Docj → Topici i ∈ 1, . . . , l; j ∈ 1, . . . , m Topici → w i ∈ 1, . . . , l; w ∈ V","Figure 2 depicts a tree generated by such a CFG. The relationship between the LDA model and the PCFG can be understood by studying the trees generated by the CFG. In these trees the left-branching spine of nodes labelled Doc′","j propagate the document identifier throughout the whole tree. The nodes labelled Topici indicate the topics assigned to particular words, and the local trees expanding Docj to Topici (one per word in the document) indicate the distribution of topics in the document.","The corresponding Bayesian PCFG associates probabilities with each of the rules in the CFG. The probabilities θTopici associated with the rules expanding the Topici nonterminals indicate how words are distributed across topics; the θTopici probabilities correspond exactly to to the φi probabilities in the LDA model. The probabilities 1150 Sentence Doc3' Doc3' Doc3' Doc3' Doc3' _3 Doc3 Topic4 shallow Doc3 Topic4 circuits Doc3 Topic4 compute Doc3 Topic7 faster Figure 2: A tree generated by the CFG encoding an LDA topic model. The prefix “ 3” indicates that this string belongs to document 3. The tree also indicates the assignment of words to topics. θDocj associated with rules expanding Docj specify the distribution of topics in document j; they correspond exactly to the probabilities θj of the LDA model. (The PCFG also specifies several other distributions that are suppressed in the LDA model. For example θSentence specifies the distribution of documents in the corpus. However, it is easy to see that these distributions do not influence the topic distributions; indeed, the expansions of the Sentence nonterminal are completely determined by the document distribution in the corpus, and are not affected by θSentence).","A Bayesian PCFG places Dirichlet priors Dir(αA) on the corresponding rule probabilities θA for each A ∈ N . In the PCFG encoding an LDA model, the αTopici parameters correspond exactly to the β parameters of the LDA model, and the αDocj parameters correspond to the α parameters of the LDA model.","As suggested above, each document Dj in the LDA model is mapped to a string in the corpus used to train the corresponding PCFG by prefix-ing it with a document identifier “ j”. Given this training data, the posterior distribution over rule probabilities θDocj→ Topici is the same as the posterior distribution over topics given documents θj,i in the original LDA model.","As we will see below, this connection between PCFGs and LDA topic models suggests a number of interesting variants of both PCFGs and topic models. Note that we are not suggesting that Bayesian inference for PCFGs is necessarily a good way of estimating LDA topic models. Current Bayesian PCFG inference algorithms require time proportional to the cube of the length of the longest string in the training corpus, and since these strings correspond to entire documents in our embedding, blindly applying a Bayesian PCFG inference algorithm is likely to be impractical.","A little reflection shows that the embedding still holds if the strings in the PCFG corpus correspond to sentences or even smaller units of the original document collection, so a single document would be mapped to multiple strings in the PCFG inference task. In this way the cubic time complex-ity of PCFG inference can be mitigated. Also, the trees generated by these CFGs have a very specialized left-branching structure, and it is straightforward to modify the general-purpose CFG inference procedures to avoid the cubic time complex-ity for such grammars: thus it may be practical to estimate topic models via grammatical inference.","However, we believe that the primary value of the embedding of LDA topic models into Bayesian PCFGs is theoretical: it suggests a number of novel extensions of both topic models and grammars that may be worth exploring. Our claim here is not that these models are the best algorithms for performing these tasks, but that the relationship we described between LDA models and PCFGs suggests a variety of interesting novel models.","We end this section with a simple example of such a modification to LDA. Inspired by the standard embedding of HMMs into PCFGs, we propose a “sticky topic” variant of LDA in which adjacent words are more likely to be assigned the same topic. Such an LDA extension is easy to describe as a PCFG (see Fox et al. (2008) for a similar model presented as an extended HMM). The nonterminals Sentence and Topici for i = 1, . . . , l have the same interpretation as before, but we introduce new nonterminals Docj,i that indicate we have just generated a nonterminal in document j belonging to topic i. Given a collection of m documents and l topics, the rule schemata are as follows: Sentence → Docj,i i ∈ 1, . . . , l;","j ∈ 1, . . . , m Docj,1 → j j ∈ 1, . . . , m Docj,i → Docj,i′ Topici i, i′","∈ 1, . . . , l;","j ∈ 1, . . . , m Topici → w i ∈ 1, . . . , l; w ∈ V A sample parse generated by a “sticky topic” 1151 Sentence Doc3,7 Doc3,4 Doc3,4 Doc3,4 Doc3,1 _3 Topic4 shallow Topic4 circuits Topic4 compute Topic7 faster Figure 3: A tree generated by the “sticky topic” CFG. Here a nonterminal Doc3, 7 indicates we have just generated a word in document 3 belonging to topic 7. CFG is shown in Figure 3. The probabilities of the rules Docj,i → Docj,i′ Topici in this PCFG encode the probability of shifting from topic i to topic i′","(this PCFG can be viewed as generating the string from right to left).","We can use non-uniform sparse Dirichlet priors on the probabilities of these rules to encourage “topic stickiness”. Specifically, by setting the Dirichlet parameters for the “topic shift” rules Docj,i′ → Docj,i Topici where i′","̸= i much lower than the parameters for the “topic preservation” rules Docj,i → Docj,i Topici, Bayesian inference will be biased to find distributions in which adjacent words will tend to have the same topic."]},{"title":"5 Adaptor Grammars","paragraphs":["Non-parametric Bayesian inference, where the inference task involves learning not just the values of a finite vector of parameters but which parameters are relevant, has been the focus of intense research in machine learning recently. In the topic-modelling community this has lead to work on Dirichlet Processes and Chinese Restaurant Processes, which can be used to estimate the number of topics as well as their distribution across documents (Teh et al., 2006).","There are two obvious non-parametric extensions to PCFGs. In the first we regard the set of nonterminals N as potentially unbounded, and try to learn the set of nonterminals required to describe the training corpus. This approach goes under the name of the “infinite HMM” or “infinite PCFG” (Beal et al., 2002; Liang et al., 2007; Liang et al., 2009). Informally, we are given a set of “basic categories”, say NP, VP, etc., and a set of rules that use these basic categories, say S → NP VP. The inference task is to learn a set of refined categories and rules (e.g., S7 → NP2 VP5) as well as their probabilities; this approach can therefore be viewed as a Bayesian version of the “split-merge” approach to grammar induction (Petrov and Klein, 2007).","In the second approach, which we adopt here, we regard the set of rules R as potentially unbounded, and try to learn the rules required to describe a training corpus as well as their probabilities. Adaptor grammars are an example of this approach (Johnson et al., 2007b), where entire subtrees generated by a “base grammar” can be viewed as distinct rules (in that we learn a separate probability for each subtree). The inference task is non-parametric if there are an unbounded number of such subtrees.","We review the adaptor grammar generative process below; for an informal introduction see Johnson (2008) and for details of the adaptor grammar inference procedure see Johnson and Goldwater (2009).","An adaptor grammar (N, W, R, S, θ, A, C) consists of a PCFG (N, W, R, S, θ) in which a subset A ⊆ N of the nonterminals are adapted, and where each adapted nonterminal X ∈ A has an associated adaptor CX . An adaptor CX for X is a function that maps a distribution over trees TX to a distribution over distributions over TX (we give examples of adaptors below).","Just as for a PCFG, an adaptor grammar defines distributions GX over trees TX for each X ∈ N ∪ W . If X ∈ W or X ̸∈ A then GX is defined just as for a PCFG above, i.e., using (1). However, if X ∈ A then GX is defined in terms of an additional distribution HX as follows: GX ∼ CX (HX ) HX = ∑ X→Y1...Ym∈RXθX→Y1...Ym TDX (GY1, . . . , GYm) That is, the distribution GX associated with an adapted nonterminal X ∈ A is a sample from adapting (i.e., applying CX to) its “ordinary” PCFG distribution HX . In general adaptors are chosen for the specific properties they have. For example, with the adaptors used here GX typically concentrates mass on a smaller subset of the trees TX than HX does.","Just as with the PCFG, an adaptor grammar generates the distribution over trees GS, where S ∈ N 1152 is the start symbol. However, while GS in a PCFG is a fixed distribution (given the rule probabilities θ), in an adaptor grammar the distribution GS is itself a random variable (because each GX for X ∈ A is random), i.e., an adaptor grammar generates a distribution over distributions over trees TS. However, the posterior joint distribution Pr(t) of a sequence t = (t1, . . . , tn) of trees in TS is well-defined: Pr(t) = ∫ GS(t1) . . . GS(tn) dG where the integral is over all of the random distributions GX , X ∈ A. The adaptors we use in this paper are Dirichlet Processes or two-parameter Poisson-Dirichlet Processes, for which it is possible to compute this integral. One way to do this uses the predictive distributions: Pr(tn+1 | t, HX ) ∝ ∫ GX (t1) . . . GX (tn+1)CX (GX | HX ) dGX where t = (t1, . . . , tn) and each ti ∈ TX . The predictive distribution for the Dirichlet Process is the (labeled) Chinese Restaurant Process (CRP), and the predictive distribution for the two-parameter Poisson-Dirichlet process is the (labeled) Pitman-Yor Process (PYP).","In the context of adaptor grammars, the CRP is: CRP(t | t, αX , HX ) ∝ nt(t) + αX HX (t) where nt(t) is the number of times t appears in t and αX > 0 is a user-settable “concentration parameter”. In order to generate the next tree tn+1 a CRP either reuses a tree t with probability proportional to number of times t has been previously generated, or else it “backs off” to the “base distribution” HX and generates a fresh tree t with probability proportional to αX HX (t).","The PYP is a generalization of the CRP: PYP(t | t, aX , bX , HX ) ∝ max(0, nt(t) − mt aX ) + (maX + bX )HX (t) Here aX ∈ [0, 1] and bX > 0 are user-settable parameters, and mt is the number of times the PYP has generated t in t from the base distribution HX , and m =","∑","t∈TX mt is the number of times any tree has been generated from HX . (In the Chinese Restaurant metaphor, mt is the number of tables labeled with t, and m is the number of occupied tables). If aX = 0 then the PYP is equivalent to a CRP with αX = bX , while if aX = 1 then the PYP generates samples from HX .","Informally, the CRP has a strong preference to regenerate trees that have been generated frequently before, leading to a “rich-get-richer” dynamics. The PYP can mitigate this somewhat by reducing the effective count of previously generated trees and redistributing that probability mass to new trees generated from HX . As Goldwater et al. (2006) explain, Bayesian inference for HX given samples from GX is effectively per-formed from types if aX = 0 and from tokens if aX = 1, so varying aX smoothly interpolates between type-based and token-based inference.","Adaptor grammars have previously been used primarily to study grammatical inference in the context of language acquisition. The word segmentation task involves segmenting a corpus of unsegmented phonemic utterance representations into words (Elman, 1990; Bernstein-Ratner, 1987). For example, the phoneme string corresponding to “you want to see the book” (with its correct segmentation indicated) is as follows: y △u ▲w △a △n △t ▲t △u ▲s △i ▲D △6 ▲b △U △k We can represent any possible segmentation of any possible sentence as a tree generated by the following unigram adaptor grammar. Sentence → Word Sentence → Word Sentence Word → Phonemes Phonemes → Phoneme Phonemes → Phoneme Phonemes The trees generated by this adaptor grammar are the same as the trees generated by the CFG rules. For example, the following skeletal parse in which all but the Word nonterminals are suppressed (the others are deterministically inferrable) shows the parse that corresponds to the correct segmentation of the string above.","(Word y u) (Word w a n t) (Word t u)","(Word s i) (Word d 6) (Word b u k) Because the Word nonterminal is adapted (indicated here by underlining) the adaptor grammar learns the probability of the entire Word subtrees (e.g., the probability that b u k is a Word); see Johnson (2008) for further details. 1153"]},{"title":"6 Topic models with collocations","paragraphs":["Here we combine ideas from the unigram word segmentation adaptor grammar above and the PCFG encoding of LDA topic models to present a novel topic model that learns topical collocations. (For a non-grammar-based approach to this problem see Wang et al. (2007)). Specifically, we take the PCFG encoding of the LDA topic model described above, but modify it so that the Topici nodes generate sequences of words rather than single words. Then we adapt each of the Topici nonterminals, which means that we learn the probability of each of the sequences of words it can expand to. Sentence → Docj j ∈ 1, . . . , m Docj → j j ∈ 1, . . . , m Docj → Docj Topici i ∈ 1, . . . , l;","j ∈ 1, . . . , m Topici → Words i ∈ 1, . . . , l Words → Word Words → Words Word Word → w w ∈ V","In order to demonstrate that this model works, we implemented this using the publicallyavailable adaptor grammar inference software,1 and ran it on the NIPS corpus (composed of published NIPS abstracts), which has previously been used for studying collocation-based topic models (Griffiths et al., 2007). Because there is no generally accepted evaluation for collocation-finding, we merely present some of the sample analyses found by our adaptor grammar. We ran our adaptor grammar with l = 20 topics (i.e., 20 distinct Topici nonterminals). Adaptor grammar inference on this corpus is actually relatively efficient because the corpus provided by Griffiths et al. (2007) is already segmented by punctuation, so the terminal strings are generally rather short. Rather than set the Dirichlet parameters by hand, we placed vague priors on them and estimated them as described in Johnson and Goldwater (2009).","The following are some examples of collocations found by our adaptor grammar: Topic0 → cost function Topic0 → fixed point Topic0 → gradient descent Topic0 → learning rates","1 http://web.science.mq.edu.au/ m̃johnson/Software.htm Topic1 → associative memory Topic1 → hamming distance Topic1 → randomly chosen Topic1 → standard deviation Topic3 → action potentials Topic3 → membrane potential Topic3 → primary visual cortex Topic3 → visual system Topic10 → nervous system Topic10 → action potential Topic10 → ocular dominance Topic10 → visual field","The following are skeletal sample parses, where we have elided all but the adapted nonterminals (i.e., all we show are the Topic nonterminals, since the other structure can be inferred deterministically). Note that because Griffiths et al. (2007) segmented the NIPS abstracts at punctuation symbols, the training corpus contains more than one string from each abstract.","3 (Topic5 polynomial size)","(Topic15 threshold circuits)","4 (Topic11 studied) (Topic19 pattern recognition algorithms)","4 (Topic2 feedforward neural network) (Topic1 implementation)","5 (Topic11 single) (Topic10 ocular dominance stripe) (Topic12 low) (Topic3 ocularity) (Topic12 drift rate)"]},{"title":"7 Finding the structure of proper names","paragraphs":["Grammars offer structural and positional sensitiv-ity that is not exploited in the basic LDA topic models. Here we explore the potential for using Bayesian inference for learning linear order-ing constraints that hold between elements within proper names.","The Penn WSJ treebank is a widely used resource within computational linguistics (Marcus et al., 1993), but one of its weaknesses is that it does not indicate any structure internal to base noun phrases (i.e., it presents “flat” analyses of the pre-head NP elements). For many applications it would be extremely useful to have a more elaborated analysis of this kind of NP structure. For example, in an NP coreference application, if we could determine that Bill and Hillary are both first 1154 names then we could infer that Bill Clinton and Hillary Clinton are likely to refer to distinct in-dividuals. On the other hand, because Mr in Mr Clinton is not a first name, it is possible that Mr Clinton and Bill Clinton refer to the same individual (Elsner et al., 2009).","Here we present an adaptor grammar based on the insights of the PCFG encoding of LDA topic models that learns some of the structure of proper names. The key idea is that elements in proper names typically appear in a fixed order; we expect honorifics to appear before first names, which appear before middle names, which in turn appear before surnames, etc. Similarly, many company names end in fixed phrases such as Inc. Here we think of first names as a kind of topic, albeit one with a restricted positional location. One of the challenges is that some of these structural elements can be filled by multiword expressions; e.g., de Groot can be a surname. We deal with this by permitting multi-word collocations to fill the corresponding positions, and use the adaptor grammar machinery to learn these collocations.","Inspired by the grammar presented in Elsner et al. (2009), our adaptor grammar is as follows, where adapted nonterminals are indicated by underlining as before. NP → (A0) (A1) . . . (A6) NP → (B0) (B1) . . . (B6) NP → Unordered+ A0 → Word+",". . . A6 → Word+ B0 → Word+",". . . B6 → Word+ Unordered → Word+","In this grammar parentheses indicate optional-ity, and the Kleene plus indicates iteration (these were manually expanded into ordinary CFG rules in our experiments). The grammar provides three different expansions for proper names. The first expansion says that a proper name can consist of some subset of the six different collocation classes A0 through A6 in that order, while the second expansion says that a proper name can consist of some subset of the collocation classes B0 through B6, again in that order. Finally, the third expansion says that a proper name can consist of an arbitrary sequence of “unordered” collocations (this is intended as a “catch-all” expansion to provide analyses for proper names that don’t fit either of the first two expansions).","We extracted all of the proper names (i.e., phrases of category NNP and NNPS) in the Penn WSJ treebank and used them as the training corpora for the adaptor grammar just described. The adaptor grammar inference procedure found skeletal sample parses such as the following: (A0 barrett) (A3 smith) (A0 albert) (A2 j.) (A3 smith) (A4 jr.) (A0 robert) (A2 b.) (A3 van dover) (B0 aim) (B1 prime rate) (B2 plus) (B5 fund) (B6 inc.) (B0 balfour) (B1 maclaine) (B5 interna-tional) (B6 ltd.) (B0 american express) (B1 information services) (B6 co) (U abc) (U sports) (U sports illustrated) (U sports unlimited) While a full evaluation will have to await further study, in general it seems to distinguish person names from company names reasonably reliably, and it seems to have discovered that person names consist of a first name (A0), a middle name or initial (A2), a surname (A3) and an optional suffix (A4). Similarly, it seems to have uncovered that company names typically end in a phrase such as inc, ltd or co."]},{"title":"8 Conclusion","paragraphs":["This paper establishes a connection between two very different kinds of probabilistic models; LDA models of the kind used for topic modelling, and PCFGs, which are a standard model of hierarchical structure in language. The embedding we presented shows how to express an LDA model as a PCFG, and has the property that Bayesian inference of the parameters of that PCFG produces an equivalent model to that produced by Bayesian inference of the LDA model’s parameters.","The primary value of this embedding is theoretical rather than practical; we are not advocating the use of PCFG estimation procedures to infer LDA models. Instead, we claim that the embedding suggests novel extensions to both the LDA topic models and PCFG-style grammars. We justified this claim by presenting several hybrid models that combine aspects of both topic models and 1155 grammars. We don’t claim that these are necessarily the best models for performing any particular tasks; rather, we present them as examples of models inspired by a combination of PCFGs and LDA topic models. We showed how the LDA to PCFG embedding suggested a “sticky topic” model extension to LDA. We then discussed adaptor grammars, and inspired by the LDA topic models, presented a novel topic model whose primitive elements are multi-word collocations rather than words. We concluded with an adaptor grammar that learns aspects of the internal structure of proper names."]},{"title":"Acknowledgments","paragraphs":["This research was funded by US NSF awards 0544127 and 0631667, as well as by a start-up award from Macquarie University. I’d like to thank the organisers and audience at the Topic Modeling workshop at NIPS 2009, my former colleagues at Brown University (especially Eugene Charniak, Micha Elsner, Sharon Goldwater, Tom Griffiths and Erik Sudderth), my new colleagues at Macquarie University and the ACL reviewers for their excellent suggestions and comments on this work. Naturally all errors remain my own."]},{"title":"References","paragraphs":["M.J. Beal, Z. Ghahramani, and C.E. Rasmussen. 2002. The infinite Hidden Markov Model. In T. Dietterich, S. Becker, and Z. Ghahramani, editors, Advances in Neural Information Processing Systems, volume 14, pages 577–584. The MIT Press.","N. Bernstein-Ratner. 1987. The phonology of parentchild speech. In K. Nelson and A. van Kleeck, editors, Children’s Language, volume 6. Erlbaum, Hillsdale, NJ.","David M. Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent Dirichlet allocation. Journal of Machine Learning Research, 3:993–1022.","Jeffrey Elman. 1990. Finding structure in time. Cognitive Science, 14:197–211.","Micha Elsner, Eugene Charniak, and Mark Johnson. 2009. Structured generative models for unsupervised named-entity clustering. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 164–172, Boulder, Colorado, June. Association for Computational Linguistics.","E. Fox, E. Sudderth, M. Jordan, and A. Willsky. 2008. An HDP-HMM for systems with state persistence. In Andrew McCallum and Sam Roweis, editors, Proceedings of the 25th Annual International Conference on Machine Learning (ICML 2008), pages 312–319. Omnipress.","Sharon Goldwater, Tom Griffiths, and Mark Johnson. 2006. Interpolating between types and tokens by estimating power-law generators. In Y. Weiss, B. Schölkopf, and J. Platt, editors, Advances in Neural Information Processing Systems 18, pages 459– 466, Cambridge, MA. MIT Press.","Thomas L. Griffiths and Mark Steyvers. 2004. Finding scientific topics. Proceedings of the National Academy of Sciences, 101:52285235.","Thomas L. Griffiths, Mark Steyvers, and Joshua B. Tenenbaum. 2007. Topics in semantic representation. Psychological Review, 114(2):211244.","Mark Johnson and Sharon Goldwater. 2009. Improving nonparameteric Bayesian inference: experiments on unsupervised word segmentation with adaptor grammars. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 317–325, Boulder, Colorado, June. Association for Computational Linguistics.","Mark Johnson, Thomas Griffiths, and Sharon Goldwater. 2007a. Bayesian inference for PCFGs via Markov chain Monte Carlo. In Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics; Proceedings of the Main Conference, pages 139–146, Rochester, New York, April. Association for Computational Linguistics.","Mark Johnson, Thomas L. Griffiths, and Sharon Goldwater. 2007b. Adaptor Grammars: A framework for specifying compositional nonparametric Bayesian models. In B. Schölkopf, J. Platt, and T. Hoffman, editors, Advances in Neural Information Processing Systems 19, pages 641–648. MIT Press, Cambridge, MA.","Mark Johnson. 2008. Using adaptor grammars to identifying synergies in the unsupervised acquisition of linguistic structure. In Proceedings of the 46th Annual Meeting of the Association of Computational Linguistics, Columbus, Ohio. Association for Computational Linguistics.","Kenichi Kurihara and Taisuke Sato. 2006. Variational Bayesian grammar induction for natural language. In 8th International Colloquium on Grammatical In-ference.","Percy Liang, Slav Petrov, Michael Jordan, and Dan Klein. 2007. The infinite PCFG using hierarchical Dirichlet processes. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 688– 697. 1156","Percy Liang, Michael Jordan, and Dan Klein. 2009. Probabilistic grammars and hierarchical Dirichlet processes. In The Oxford Handbook of Applied Bayesian Analysis. Oxford University Press.","Michell P. Marcus, Beatrice Santorini, and Mary Ann Marcinkiewicz. 1993. Building a large annotated corpus of English: The Penn Treebank. Computational Linguistics, 19(2):313–330.","Slav Petrov and Dan Klein. 2007. Improved inference for unlexicalized parsing. In Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics; Proceedings of the Main Conference, pages 404–411, Rochester, New York. Association for Computational Linguistics.","Y. W. Teh, M. Jordan, M. Beal, and D. Blei. 2006. Hi-erarchical Dirichlet processes. Journal of the American Statistical Association, 101:1566–1581.","Xuerui Wang, Andrew McCallum, and Xing Wei. 2007. Topical n-grams: Phrase and topic discovery, with an application to information retrieval. In Proceedings of the 7th IEEE International Conference on Data Mining (ICDM), pages 697–702.","C.S. Wetherell. 1980. Probabilistic languages: A review and some open questions. Computing Surveys, 12:361–379. 1157"]}],"references":[{"authors":[{"first":"M.","middle":"J.","last":"Beal"},{"first":"Z.","last":"Ghahramani"},{"first":"C.","middle":"E.","last":"Rasmussen"}],"year":"2002","title":"The infinite Hidden Markov Model","source":"M.J. Beal, Z. Ghahramani, and C.E. Rasmussen. 2002. The infinite Hidden Markov Model. In T. Dietterich, S. Becker, and Z. Ghahramani, editors, Advances in Neural Information Processing Systems, volume 14, pages 577–584. The MIT Press."},{"authors":[{"first":"N.","last":"Bernstein-Ratner"}],"year":"1987","title":"The phonology of parentchild speech","source":"N. Bernstein-Ratner. 1987. The phonology of parentchild speech. In K. Nelson and A. van Kleeck, editors, Children’s Language, volume 6. Erlbaum, Hillsdale, NJ."},{"authors":[{"first":"David","middle":"M.","last":"Blei"},{"first":"Andrew","middle":"Y.","last":"Ng"},{"first":"Michael I","middle":".","last":"Jordan"}],"year":"2003","title":"Latent Dirichlet allocation","source":"David M. Blei, Andrew Y. Ng, and Michael I. Jordan. 2003. Latent Dirichlet allocation. Journal of Machine Learning Research, 3:993–1022."},{"authors":[{"first":"Jeffrey","last":"Elman"}],"year":"1990","title":"Finding structure in time","source":"Jeffrey Elman. 1990. Finding structure in time. Cognitive Science, 14:197–211."},{"authors":[{"first":"Micha","last":"Elsner"},{"first":"Eugene","last":"Charniak"},{"first":"Mark","last":"Johnson"}],"year":"2009","title":"Structured generative models for unsupervised named-entity clustering","source":"Micha Elsner, Eugene Charniak, and Mark Johnson. 2009. Structured generative models for unsupervised named-entity clustering. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 164–172, Boulder, Colorado, June. Association for Computational Linguistics."},{"authors":[{"first":"E.","last":"Fox"},{"first":"E.","last":"Sudderth"},{"first":"M.","last":"Jordan"},{"first":"A.","last":"Willsky"}],"year":"2008","title":"An HDP-HMM for systems with state persistence","source":"E. Fox, E. Sudderth, M. Jordan, and A. Willsky. 2008. An HDP-HMM for systems with state persistence. In Andrew McCallum and Sam Roweis, editors, Proceedings of the 25th Annual International Conference on Machine Learning (ICML 2008), pages 312–319. Omnipress."},{"authors":[{"first":"Sharon","last":"Goldwater"},{"first":"Tom","last":"Griffiths"},{"first":"Mark","last":"Johnson"}],"year":"2006","title":"Interpolating between types and tokens by estimating power-law generators","source":"Sharon Goldwater, Tom Griffiths, and Mark Johnson. 2006. Interpolating between types and tokens by estimating power-law generators. In Y. Weiss, B. Schölkopf, and J. Platt, editors, Advances in Neural Information Processing Systems 18, pages 459– 466, Cambridge, MA. MIT Press."},{"authors":[{"first":"Thomas","middle":"L.","last":"Griffiths"},{"first":"Mark","last":"Steyvers"}],"year":"2004","title":"Finding scientific topics","source":"Thomas L. Griffiths and Mark Steyvers. 2004. Finding scientific topics. Proceedings of the National Academy of Sciences, 101:52285235."},{"authors":[{"first":"Thomas","middle":"L.","last":"Griffiths"},{"first":"Mark","last":"Steyvers"},{"first":"Joshua","middle":"B.","last":"Tenenbaum"}],"year":"2007","title":"Topics in semantic representation","source":"Thomas L. Griffiths, Mark Steyvers, and Joshua B. Tenenbaum. 2007. Topics in semantic representation. Psychological Review, 114(2):211244."},{"authors":[{"first":"Mark","last":"Johnson"},{"first":"Sharon","last":"Goldwater"}],"year":"2009","title":"Improving nonparameteric Bayesian inference: experiments on unsupervised word segmentation with adaptor grammars","source":"Mark Johnson and Sharon Goldwater. 2009. Improving nonparameteric Bayesian inference: experiments on unsupervised word segmentation with adaptor grammars. In Proceedings of Human Language Technologies: The 2009 Annual Conference of the North American Chapter of the Association for Computational Linguistics, pages 317–325, Boulder, Colorado, June. Association for Computational Linguistics."},{"authors":[{"first":"Mark","last":"Johnson"},{"first":"Thomas","last":"Griffiths"},{"first":"Sharon","last":"Goldwater"}],"year":"2007a","title":"Bayesian inference for PCFGs via Markov chain Monte Carlo","source":"Mark Johnson, Thomas Griffiths, and Sharon Goldwater. 2007a. Bayesian inference for PCFGs via Markov chain Monte Carlo. In Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics; Proceedings of the Main Conference, pages 139–146, Rochester, New York, April. Association for Computational Linguistics."},{"authors":[{"first":"Mark","last":"Johnson"},{"first":"Thomas","middle":"L.","last":"Griffiths"},{"first":"Sharon","last":"Goldwater"}],"year":"2007b","title":"Adaptor Grammars: A framework for specifying compositional nonparametric Bayesian models","source":"Mark Johnson, Thomas L. Griffiths, and Sharon Goldwater. 2007b. Adaptor Grammars: A framework for specifying compositional nonparametric Bayesian models. In B. Schölkopf, J. Platt, and T. Hoffman, editors, Advances in Neural Information Processing Systems 19, pages 641–648. MIT Press, Cambridge, MA."},{"authors":[{"first":"Mark","last":"Johnson"}],"year":"2008","title":"Using adaptor grammars to identifying synergies in the unsupervised acquisition of linguistic structure","source":"Mark Johnson. 2008. Using adaptor grammars to identifying synergies in the unsupervised acquisition of linguistic structure. In Proceedings of the 46th Annual Meeting of the Association of Computational Linguistics, Columbus, Ohio. Association for Computational Linguistics."},{"authors":[{"first":"Kenichi","last":"Kurihara"},{"first":"Taisuke","last":"Sato"}],"year":"2006","title":"Variational Bayesian grammar induction for natural language","source":"Kenichi Kurihara and Taisuke Sato. 2006. Variational Bayesian grammar induction for natural language. In 8th International Colloquium on Grammatical In-ference."},{"authors":[{"first":"Percy","last":"Liang"},{"first":"Slav","last":"Petrov"},{"first":"Michael","last":"Jordan"},{"first":"Dan","last":"Klein"}],"year":"2007","title":"The infinite PCFG using hierarchical Dirichlet processes","source":"Percy Liang, Slav Petrov, Michael Jordan, and Dan Klein. 2007. The infinite PCFG using hierarchical Dirichlet processes. In Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL), pages 688– 697. 1156"},{"authors":[{"first":"Percy","last":"Liang"},{"first":"Michael","last":"Jordan"},{"first":"Dan","last":"Klein"}],"year":"2009","title":"Probabilistic grammars and hierarchical Dirichlet processes","source":"Percy Liang, Michael Jordan, and Dan Klein. 2009. Probabilistic grammars and hierarchical Dirichlet processes. In The Oxford Handbook of Applied Bayesian Analysis. Oxford University Press."},{"authors":[{"first":"Michell","middle":"P.","last":"Marcus"},{"first":"Beatrice","last":"Santorini"},{"first":"Mary","middle":"Ann","last":"Marcinkiewicz"}],"year":"1993","title":"Building a large annotated corpus of English: The Penn Treebank","source":"Michell P. Marcus, Beatrice Santorini, and Mary Ann Marcinkiewicz. 1993. Building a large annotated corpus of English: The Penn Treebank. Computational Linguistics, 19(2):313–330."},{"authors":[{"first":"Slav","last":"Petrov"},{"first":"Dan","last":"Klein"}],"year":"2007","title":"Improved inference for unlexicalized parsing","source":"Slav Petrov and Dan Klein. 2007. Improved inference for unlexicalized parsing. In Human Language Technologies 2007: The Conference of the North American Chapter of the Association for Computational Linguistics; Proceedings of the Main Conference, pages 404–411, Rochester, New York. Association for Computational Linguistics."},{"authors":[{"first":"Y.","middle":"W.","last":"Teh"},{"first":"M.","last":"Jordan"},{"first":"M.","last":"Beal"},{"first":"D.","last":"Blei"}],"year":"2006","title":"Hi-erarchical Dirichlet processes","source":"Y. W. Teh, M. Jordan, M. Beal, and D. Blei. 2006. Hi-erarchical Dirichlet processes. Journal of the American Statistical Association, 101:1566–1581."},{"authors":[{"first":"Xuerui","last":"Wang"},{"first":"Andrew","last":"McCallum"},{"first":"Xing","last":"Wei"}],"year":"2007","title":"Topical n-grams: Phrase and topic discovery, with an application to information retrieval","source":"Xuerui Wang, Andrew McCallum, and Xing Wei. 2007. Topical n-grams: Phrase and topic discovery, with an application to information retrieval. In Proceedings of the 7th IEEE International Conference on Data Mining (ICDM), pages 697–702."},{"authors":[{"first":"C.","middle":"S.","last":"Wetherell"}],"year":"1980","title":"Probabilistic languages: A review and some open questions","source":"C.S. Wetherell. 1980. Probabilistic languages: A review and some open questions. Computing Surveys, 12:361–379. 1157"}],"cites":[{"style":0,"text":"Blei et al., 2003","origin":{"pointer":"/sections/2/paragraphs/0","offset":384,"length":17},"authors":[{"last":"Blei"},{"last":"al."}],"year":"2003","references":["/references/2"]},{"style":0,"text":"Griffiths and Steyvers, 2004","origin":{"pointer":"/sections/2/paragraphs/0","offset":403,"length":28},"authors":[{"last":"Griffiths"},{"last":"Steyvers"}],"year":"2004","references":["/references/7"]},{"style":0,"text":"Johnson et al. (2007b)","origin":{"pointer":"/sections/2/paragraphs/1","offset":550,"length":22},"authors":[{"last":"Johnson"},{"last":"al."}],"year":"2007b","references":["/references/11"]},{"style":0,"text":"Blei et al., 2003","origin":{"pointer":"/sections/3/paragraphs/0","offset":125,"length":17},"authors":[{"last":"Blei"},{"last":"al."}],"year":"2003","references":["/references/2"]},{"style":0,"text":"Blei et al. (2003)","origin":{"pointer":"/sections/3/paragraphs/1","offset":149,"length":18},"authors":[{"last":"Blei"},{"last":"al."}],"year":"2003","references":["/references/2"]},{"style":0,"text":"Blei et al. (2003)","origin":{"pointer":"/sections/3/paragraphs/4","offset":237,"length":18},"authors":[{"last":"Blei"},{"last":"al."}],"year":"2003","references":["/references/2"]},{"style":0,"text":"Griffiths and Steyvers (2004)","origin":{"pointer":"/sections/3/paragraphs/4","offset":363,"length":29},"authors":[{"last":"Griffiths"},{"last":"Steyvers"}],"year":"2004","references":["/references/7"]},{"style":0,"text":"Wetherell (1980)","origin":{"pointer":"/sections/4/paragraphs/9","offset":418,"length":16},"authors":[{"last":"Wetherell"}],"year":"1980","references":["/references/20"]},{"style":0,"text":"Kurihara and Sato (2006)","origin":{"pointer":"/sections/4/paragraphs/12","offset":325,"length":24},"authors":[{"last":"Kurihara"},{"last":"Sato"}],"year":"2006","references":["/references/13"]},{"style":0,"text":"Johnson et al. (2007a)","origin":{"pointer":"/sections/4/paragraphs/12","offset":449,"length":22},"authors":[{"last":"Johnson"},{"last":"al."}],"year":"2007a","references":["/references/10"]},{"style":0,"text":"Fox et al. (2008)","origin":{"pointer":"/sections/5/paragraphs/17","offset":299,"length":17},"authors":[{"last":"Fox"},{"last":"al."}],"year":"2008","references":["/references/5"]},{"style":0,"text":"Teh et al., 2006","origin":{"pointer":"/sections/6/paragraphs/0","offset":446,"length":16},"authors":[{"last":"Teh"},{"last":"al."}],"year":"2006","references":["/references/18"]},{"style":0,"text":"Beal et al., 2002","origin":{"pointer":"/sections/6/paragraphs/1","offset":292,"length":17},"authors":[{"last":"Beal"},{"last":"al."}],"year":"2002","references":["/references/0"]},{"style":0,"text":"Liang et al., 2007","origin":{"pointer":"/sections/6/paragraphs/1","offset":311,"length":18},"authors":[{"last":"Liang"},{"last":"al."}],"year":"2007","references":["/references/14"]},{"style":0,"text":"Liang et al., 2009","origin":{"pointer":"/sections/6/paragraphs/1","offset":331,"length":18},"authors":[{"last":"Liang"},{"last":"al."}],"year":"2009","references":["/references/15"]},{"style":0,"text":"Petrov and Klein, 2007","origin":{"pointer":"/sections/6/paragraphs/1","offset":725,"length":22},"authors":[{"last":"Petrov"},{"last":"Klein"}],"year":"2007","references":["/references/17"]},{"style":0,"text":"Johnson et al., 2007b","origin":{"pointer":"/sections/6/paragraphs/2","offset":248,"length":21},"authors":[{"last":"Johnson"},{"last":"al."}],"year":"2007b","references":["/references/11"]},{"style":0,"text":"Johnson (2008)","origin":{"pointer":"/sections/6/paragraphs/3","offset":89,"length":14},"authors":[{"last":"Johnson"}],"year":"2008","references":["/references/12"]},{"style":0,"text":"Johnson and Goldwater (2009)","origin":{"pointer":"/sections/6/paragraphs/3","offset":167,"length":28},"authors":[{"last":"Johnson"},{"last":"Goldwater"}],"year":"2009","references":["/references/9"]},{"style":0,"text":"Goldwater et al. (2006)","origin":{"pointer":"/sections/6/paragraphs/11","offset":323,"length":23},"authors":[{"last":"Goldwater"},{"last":"al."}],"year":"2006","references":["/references/6"]},{"style":0,"text":"Elman, 1990","origin":{"pointer":"/sections/6/paragraphs/12","offset":242,"length":11},"authors":[{"last":"Elman"}],"year":"1990","references":["/references/3"]},{"style":0,"text":"Bernstein-Ratner, 1987","origin":{"pointer":"/sections/6/paragraphs/12","offset":255,"length":22},"authors":[{"last":"Bernstein-Ratner"}],"year":"1987","references":["/references/1"]},{"style":0,"text":"Johnson (2008)","origin":{"pointer":"/sections/6/paragraphs/14","offset":228,"length":14},"authors":[{"last":"Johnson"}],"year":"2008","references":["/references/12"]},{"style":0,"text":"Wang et al. (2007)","origin":{"pointer":"/sections/7/paragraphs/0","offset":240,"length":18},"authors":[{"last":"Wang"},{"last":"al."}],"year":"2007","references":["/references/19"]},{"style":0,"text":"Griffiths et al., 2007","origin":{"pointer":"/sections/7/paragraphs/2","offset":280,"length":22},"authors":[{"last":"Griffiths"},{"last":"al."}],"year":"2007","references":["/references/8"]},{"style":0,"text":"Griffiths et al. (2007)","origin":{"pointer":"/sections/7/paragraphs/2","offset":648,"length":23},"authors":[{"last":"Griffiths"},{"last":"al."}],"year":"2007","references":["/references/8"]},{"style":0,"text":"Johnson and Goldwater (2009)","origin":{"pointer":"/sections/7/paragraphs/2","offset":877,"length":28},"authors":[{"last":"Johnson"},{"last":"Goldwater"}],"year":"2009","references":["/references/9"]},{"style":0,"text":"Griffiths et al. (2007)","origin":{"pointer":"/sections/7/paragraphs/5","offset":223,"length":23},"authors":[{"last":"Griffiths"},{"last":"al."}],"year":"2007","references":["/references/8"]},{"style":0,"text":"Marcus et al., 1993","origin":{"pointer":"/sections/8/paragraphs/1","offset":82,"length":19},"authors":[{"last":"Marcus"},{"last":"al."}],"year":"1993","references":["/references/16"]},{"style":0,"text":"Elsner et al., 2009","origin":{"pointer":"/sections/8/paragraphs/1","offset":748,"length":19},"authors":[{"last":"Elsner"},{"last":"al."}],"year":"2009","references":["/references/4"]},{"style":0,"text":"Elsner et al. (2009)","origin":{"pointer":"/sections/8/paragraphs/3","offset":37,"length":20},"authors":[{"last":"Elsner"},{"last":"al."}],"year":"2009","references":["/references/4"]}]}
